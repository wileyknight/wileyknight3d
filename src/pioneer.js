
(window.webpackJsonp = window.webpackJsonp || []).push([
    [1],
    {
      369: function (e) {
        e.exports = {
          'landing-title': 'Corn. Revolutionized.',
          'landing-body':
            "From lab to field, it's corn seed development that will change farming.",
          'landing-cta': 'Scroll to Discover',
          'first-section-title': 'First, a solid foundation.',
          'first-section-body':
            "We have the world's most comprehensive corn germplasm library. And every year, we create more unique genetic lines, each one traceable back to the first inbred development program started in 1920.",
          'first-section-cta': 'Explore the Library',
          'first-section-hotspot-title':
            'From billions of possibilities, we pick the best.',
          'first-section-hotspot-body':
            "From our initial breeding lines a century ago, we've built our germplasm from the ground up. Impeccable pedigree records allow breeders to quickly select genetic lines with the most potential to solve challenges and increase yield. The process begins.",
          'second-section-title': 'Computers cut down the contenders.',
          'second-section-body':
            "Petabytes of data (that's one million GB each) feed into computers, running millions of simulations using proprietary algorithms for the most accurate predictions. 18x more candidates are in our pipeline compared with 10 years ago, far more than we could ever test in the field.",
          'third-section-title': 'Our breeders dial it in further.',
          'third-section-body':
            "Advanced breeding technologies have reduced our development time by 30% over the last decade. A purer version of inbreds provides a clearer view into each line's performance, so we narrow the list down even faster.",
          'fourth-section-title': 'We take it to the field.',
          'fourth-section-body':
            "Now, the testing gets exponentially tougher. At each of Pioneer's research plots, corn seeds that have made it this far undergo rigorous stress tests. New tools give precise measurements on how the plants respond.",
          'fourth-section-cta': 'Experience the Tests',
          'fourth-section-hotspot-title': 'Your region. \nYour conditions.',
          'fourth-section-hotspot-select-cta': 'SELECT YOUR CONDITION',
          'fourth-section-hotspot-sub_one-title': 'Wind',
          'fourth-section-hotspot-sub_one-body':
            'The Boreas mobile wind machine simulates high winds to test stalk and root strength at critical points in the growing season.',
          'fourth-section-hotspot-sub_two-title': 'Drought',
          'fourth-section-hotspot-sub_two-body':
            'Pioneer tests in dedicated managed stress environments and water-limited environments to develop new hybrids. In two years of testing, P1548YHR demonstrated a 9 bu/A yield advantage in stress environments and an 11 bu/A yield advantage in favorable conditions compared with key legacy products.[1]',
          'fourth-section-hotspot-sub_three-title': 'Disease',
          'fourth-section-hotspot-sub_three-body':
            "We've achieved 9% improvement in northern leaf blight resistance for the Eastern Corn Belt since 2015. For the Western Corn Belt, resistance to diseases like Goss's wilt continues to lead the industry.",
          'fourth-section-hotspot-sub_four-title': 'Soil',
          'fourth-section-hotspot-sub_four-body':
            'Performance is tested in different soil types and environments to ensure the best placement and management advice for farmer success.',
          'fourth-section-hotspot-sub_five-title': 'Population Density',
          'fourth-section-hotspot-sub_five-body':
            'Plants are tested at different seedling rates to uncover the optimal balance of population and performance.',
          'fifth-section-title': 'Testing, testing and more testing.',
          'fifth-section-body':
            "A second year of pre-commercial testing. More locations. Expanding decision zones. Now we conduct 8x more late-stage field tests, comparing proven leaders, competitive seeds and experimental hybrids, so only the best make it to a farmer's field.",
          'sixth-section-title': 'Less than 0.01% of seeds make it.',
          'sixth-section-body':
            "These are the very best of the best. They're the contenders that have survived the computer simulations, the lab tests, the field tests and the discerning breeders to make it into a Pioneer bag. It's our new class.",
          'sixth-section-cta': 'See the New Class',
          'sixth-section-hotspot-sub_one-title': 'Yield',
          'sixth-section-hotspot-sub_one-body':
            'New technology and techniques, backed by tried-and-true breeding, are raising the bar for corn performance. The top 40 most-popular PioneerÂ® brand corn hybrids delivered an average 6.1 bu/A yield advantage over competitors in 2019 on-farm trials.[2]',
          'sixth-section-hotspot-sub_two-title': 'Consistency',
          'sixth-section-hotspot-sub_two-body':
            'You need to win every year. Our genetic predictions, which allow us to simulate across environments, along with two-year late-stage testing in multiple locations, deliver reliable performance year over year.',
          'sixth-section-hotspot-sub_three-title':
            'Pioneer  brand Qrome  Products',
          'sixth-section-hotspot-sub_three-body':
            'The most optimized balance of insect protection and agronomic performance in the Pioneer portfolio. Two modes of action above and two below, for effective insect control. An 8.2 bu/A yield advantage over competitive products in corn-on-corn acres.[3]',
          'sixth-section-hotspot-sub_three-cta-label': 'Learn More',
          'sixth-section-hotspot-sub_three-cta-link':
            'https://www.pioneer.com/us/products/corn/traits-technologies/qrome.html',
          'sixth-section-drag-label': 'Drag kernel to discover',
          'sixth-section-spin-label': 'Spin to discover',
          'seventh-section-cta_one': 'Sign Up for News',
          'seventh-section-cta_two': 'Contact a Territory Manager',
          'seventh-section-cta-legal': 'Legal and Trademark',
          'seventh-section-cta_three-label': 'Visit Corn Revolution Podcast',
          'seventh-section-cta_three-link':
            'https://go.pioneer.com/cornrevolution-podcast',
          'seventh-section-cta_four-label': 'Visit Pioneer.com',
          'seventh-section-cta_four-link': 'https://www.pioneer.com/',
          'seventh-section-cta_five-label': 'Terms & Conditions',
          'seventh-section-cta_five-link':
            'http://www.pioneer.com/home/site/about/terms-of-use',
          'seventh-section-cta_six-label': 'Privacy Policy',
          'seventh-section-cta_six-link':
            'https://www.pioneer.com/us/privacy-policy.html',
          'seventh-section-cta_seven-label': 'California Privacy Rights',
          'seventh-section-cta_seven-link':
            'https://www.corteva.us/california-privacy-rights.html',
          'seventh-section-reference_one':
            'PioneerÂ® brand OptimumÂ® AQUAmaxÂ® products were grown in 13,623 on-farm comparisons across the United States against competitor brand products (+/- 4 CRM) in 2018.  Water-limited yield data includes 240 competitive comparisons with a win ratio of 63 percent. The 2018 favorable environment includes 13,383 competitive comparisons with a win ratio of 61 percent. Water-limited environments are those in which the water supply/demand ratio during flowering or grain fill was less than 0.66 on a 0-1 scale (1=adequate moisture) using the Pioneer proprietary EnClassÂ® system and in which the yield average of competitor brand hybrids  at the location was less than 150 bu/acre. Favorable growing conditions are locations where yield levels were at or above 150 bu/acre on average, regardless of water supply/demand ratio. Precipitation levels are interpolated values based on local weather stations. Product performance in water-limited environments is variable and depends on many factors such as the severity and timing of moisture deficiency, heat stress, soil type, management practices and environmental stress as well as disease and pest pressures. All hybrids may exhibit reduced yield under water and heat stress. Individual results may vary.',
          'seventh-section-reference_two':
            '2018 QromeÂ® product performance data is based on the average of 244 comparisons made in the United States through Nov. 14, 2018. Comparisons are against all competitors triple-stack products, segment matched and within a +/- 3 CRM of the competitive brand.',
          'signup-title': 'Sign up for Pioneer news.',
          'signup-body':
            'Our news is your news. Stay up-to-date on the latest in the industry.',
          'signup-field_one-label': 'Email',
          'signup-field_two-label': 'Total # of Acres',
          'signup-field_three-label': 'Zip Code',
          'signup-field_four-label': 'Country',
          'signup-field_firstName-label': 'First Name',
          'signup-field_lastName-label': 'Last Name',
          'signup-field_email-label': 'Email',
          'signup-field_zipCode-label': 'Zip Code',
          'signup-field_totalAcres-label': 'Total # of Acres',
          'signup-optin':
            "Yes, I'd like to receive marketing communications from Corteva Agriscience and its affiliates.",
          'signup-legal':
            "By clicking submit, I agree to Corteva Agriscience using my personal information for communications I have opted into receiving. Corteva will handle your personal information in accordance with our <a href='https://www.corteva.us/privacy-policy.html' target='_blank' title='Privacy Statement'>Privacy Statement</a>.",
          'signup-more-legal':
            'â„¢Â®â„ Trademarks and service marks of Dow AgroSciences, DuPont or Pioneer, and their affiliated companies or their respective owners. QromeÂ® products are approved for cultivation in the U.S. and Canada. For additional information about the status of regulatory authorizations, visitÂ http://www.biotradestatus.com/. Â© 2019 PHII.',
          'signup-cta': 'Submit',
          'contact_manager-title': 'Contact a Territory Manager',
          'contact_manager-body':
            'Want to talk with a Pioneer expert? Enter your zip code to find the Pioneer Territory Manager in your area.',
          'contact_manager-field_one-label': 'Your ZIP Code',
          'contact_manager-field-submit': 'Find',
          'menu-headline': 'Explore the Story',
          'menu-item_one-subtitle': 'Chapter 1',
          'menu-item_one-title': 'Science',
          'menu-item_two-subtitle': 'Chapter 2',
          'menu-item_two-title': 'Real World Testing',
          'menu-item_three-subtitle': 'Chapter 3',
          'menu-item_three-title': 'Result',
          'menu-item_four-label': 'Sign Up for News',
          'menu-item_five-label': 'Contact a Territory Manager',
          'menu-item_btn-legal': 'Legal and Trademark',
          'menu-item_six-label': 'Visit Corn Revolution Podcast',
          'menu-item_six-link': 'https://go.pioneer.com/cornrevolution-podcast',
          'menu-item_seven-label': 'Visit Pioneer.com',
          'menu-item_seven-link': 'https://www.pioneer.com/',
          'menu-item_eight-label': 'Terms & Conditions',
          'menu-item_eight-link':
            'http://www.pioneer.com/home/site/about/terms-of-use',
          'menu-item_nine-label': 'Privacy Policy',
          'menu-item_nine-link': 'https://www.pioneer.com/us/privacy-policy.html',
          'menu-item_ten-label': 'California Privacy Rights',
          'menu-item_ten-link':
            'https://www.corteva.us/california-privacy-rights.html',
          'menu-twitter-link': 'https://www.twitter.com/pioneerseeds',
          'menu-facebook-link': 'https://www.facebook.com/PioneerSeeds',
          'menu-instagram-link': 'https://www.instagram.com/pioneerseeds/',
          'rotate-overlay-message-portrait':
            'Please rotate your device to portrait',
          'rotate-overlay-message-landscape':
            'Please rotate your device to landscape',
        };
      },
      376: function (e) {
        e.exports = {
          particlesAreaBack0: {
            pX: -10,
            pY: -10,
            pZ: -30,
            s: 3,
            rX: 0,
            rY: -29.70049999997613,
            rZ: -1,
            v: !0,
            color: '#ffffff',
            o: 0.17,
            particleSizeMin: 10,
            particleSizeMax: 180,
            radius: 6,
          },
          particlesAreaBack1: {
            pX: 3.6,
            pY: 0.5,
            pZ: 1.74,
            s: 1,
            rX: 0,
            rY: -7.081499999998902,
            rZ: 0,
            v: !0,
            color: '#12eefc',
            o: 0.36,
            particleSizeMin: 3,
            particleSizeMax: 39.99,
            radius: 3.09,
          },
          kernelClusterFront: {
            pX: -1.5,
            pZ: 1,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            color1: '#d9fff5',
            color2: '#b5fff6',
            linksColor: '#d6ffda',
            o: 1,
            particleSizeMin: 18,
            particleSizeMax: 18,
          },
          kernelClusterBack: {
            pX: -1.6,
            pZ: -2.2,
            s: 0.6,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            color1: '#d9fff5',
            color2: '#b5fff6',
            linksColor: '#d6ffda',
            o: 1,
            particleSizeMin: 18,
            particleSizeMax: 18,
          },
        };
      },
      378: function (e, t, n) {
        var i = n(379);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      379: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          '/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n',
          '',
        ]);
      },
      381: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {}) __p += "<div class='store'>\n</div>\n";
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      382: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              __p +=
                '<div class="store-item">\n    <span data-ui="label" class="label"></span>\n    <span> â†’ <span>\n    <span data-ui="value" class="value"></span>\n</div>\n';
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      383: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              __p +=
                '<div class="store-item">\n    <br/>\n    <span data-ui="title"></span> <span data-ui="dashes" class="dashes"></span>\n</div>\n';
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      384: function (e, t, n) {
        var i = n(385);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      385: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          ".store {\n  position: fixed;\n  bottom: 20px;\n  left: 20px;\n  width: 260px;\n  z-index: 30;\n  color: white;\n  font-size: 10px;\n  font-family: monospace;\n  font-family: 'Lucida Console', Monaco, monospace !important;\n  letter-spacing: 0;\n  background: black;\n  padding: 10px;\n  opacity: 0.9;\n  text-transform: none;\n  font-weight: bold; }\n\n.store-item .label,\n.store-item .dashes {\n  opacity: 0.5; }\n\n.store-item.computed .value {\n  opacity: 0.5; }\n",
          '',
        ]);
      },
      386: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              __p +=
                '<div class="logo">\n    <svg class="logo__icon"><use xlink:href="#pioneer-logo" /></svg>\n</div>\n';
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      387: function (e, t, n) {
        var i = n(388);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      388: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          '/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n.logo {\n  position: absolute;\n  fill: white;\n  cursor: pointer; }\n  .mobile .logo {\n    top: 7rem;\n    left: 50%;\n    margin-left: -16rem;\n    width: 32rem;\n    height: 6rem; }\n  .desktop .logo, .tablet .logo {\n    top: 5.5vh;\n    left: 8.3vw;\n    width: 14.5rem;\n    height: 2.7rem; }\n\n.logo__icon {\n  width: 100%;\n  height: 100%;\n  display: block; }\n',
          '',
        ]);
      },
      389: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              __p +=
                '<div class="menuBtn">\n\t<div data-ui="line" class="menuBtn__line" align="top"></div>\n\t<div data-ui="line" class="menuBtn__line" align="middle"></div>\n\t<div data-ui="line" class="menuBtn__line" align="bottom"></div>\n</div>\n';
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      390: function (e, t, n) {
        var i = n(391);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      391: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          "/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n.menuBtn {\n  z-index: 300;\n  position: fixed;\n  overflow: hidden; }\n  .menuBtn:before {\n    content: '';\n    top: -4rem;\n    left: -4rem;\n    bottom: -4rem;\n    right: -4rem;\n    position: absolute; }\n  .mobile .menuBtn {\n    top: 8rem;\n    left: 8rem;\n    width: 7.5rem;\n    height: 4rem; }\n  .desktop .menuBtn, .tablet .menuBtn {\n    top: calc(5.5vh + 0.5rem);\n    left: 3.1vw;\n    width: 3.2rem;\n    height: 1.8rem;\n    cursor: pointer; }\n\n.menuBtn__line {\n  top: 50%;\n  left: 0;\n  position: absolute;\n  width: 100%;\n  height: 1px;\n  background-color: white;\n  transform-origin: left center; }\n",
          '',
        ]);
      },
      403: function (e, t) {
        (e.exports.pages = function (e) {
          var t = new Float32Array(4 * e.length * 1),
            n = 0;
          return (
            e.forEach(function (e) {
              var i = e.data.page || 0;
              (t[n++] = i), (t[n++] = i), (t[n++] = i), (t[n++] = i);
            }),
            t
          );
        }),
          (e.exports.uvs = function (e, t, n, i) {
            var r = new Float32Array(4 * e.length * 2),
              o = 0;
            return (
              e.forEach(function (e) {
                var a = e.data,
                  s = a.x + a.width,
                  u = a.y + a.height,
                  l = a.x / t,
                  c = a.y / n,
                  p = s / t,
                  h = u / n;
                i && ((c = (n - a.y) / n), (h = (n - u) / n)),
                  (r[o++] = l),
                  (r[o++] = c),
                  (r[o++] = l),
                  (r[o++] = h),
                  (r[o++] = p),
                  (r[o++] = h),
                  (r[o++] = p),
                  (r[o++] = c);
              }),
              r
            );
          }),
          (e.exports.positions = function (e) {
            var t = new Float32Array(4 * e.length * 2),
              n = 0;
            return (
              e.forEach(function (e) {
                var i = e.data,
                  r = e.position[0] + i.xoffset,
                  o = e.position[1] + i.yoffset,
                  a = i.width,
                  s = i.height;
                (t[n++] = r),
                  (t[n++] = o),
                  (t[n++] = r),
                  (t[n++] = o + s),
                  (t[n++] = r + a),
                  (t[n++] = o + s),
                  (t[n++] = r + a),
                  (t[n++] = o);
              }),
              t
            );
          });
      },
      404: function (e, t) {
        var n = 2,
          i = { min: [0, 0], max: [0, 0] };
        function r(e) {
          var t = e.length / n;
          (i.min[0] = e[0]),
            (i.min[1] = e[1]),
            (i.max[0] = e[0]),
            (i.max[1] = e[1]);
          for (var r = 0; r < t; r++) {
            var o = e[r * n + 0],
              a = e[r * n + 1];
            (i.min[0] = Math.min(o, i.min[0])),
              (i.min[1] = Math.min(a, i.min[1])),
              (i.max[0] = Math.max(o, i.max[0])),
              (i.max[1] = Math.max(a, i.max[1]));
          }
        }
        (e.exports.computeBox = function (e, t) {
          r(e),
            t.min.set(i.min[0], i.min[1], 0),
            t.max.set(i.max[0], i.max[1], 0);
        }),
          (e.exports.computeSphere = function (e, t) {
            r(e);
            var n = i.min[0],
              o = i.min[1],
              a = i.max[0] - n,
              s = i.max[1] - o,
              u = Math.sqrt(a * a + s * s);
            t.center.set(n + a / 2, o + s / 2, 0), (t.radius = u / 2);
          });
      },
      405: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              (__p += '<section class="menu sectionBase">\n\t'),
                desktop &&
                  (__p += '\n\t<div class="menu__left sectionBase__half">\n\t\t'),
                (__p +=
                  '\n\t\t<header data-ui="header" class="menu__header subText2">' +
                  (null == (__t = copy['menu-headline']) ? '' : __t) +
                  '</header>\n\n\t\t<ul class="menu__navList">\n\t\t\t<li data-ui="btnScience" class="menu__navListItem">\n\t\t\t\t<h3 class="menu__navSubtitle subText">' +
                  (null == (__t = copy['menu-item_one-subtitle']) ? '' : __t) +
                  '</h3>\n\t\t\t\t<h2 class="menu__navTitle title3">' +
                  (null == (__t = copy['menu-item_one-title']) ? '' : __t) +
                  '</h2>\n\t\t\t</li>\n\t\t\t<li data-ui="btnTesting" class="menu__navListItem">\n\t\t\t\t<h3 class="menu__navSubtitle subText">' +
                  (null == (__t = copy['menu-item_two-subtitle']) ? '' : __t) +
                  '</h3>\n\t\t\t\t<h2 class="menu__navTitle title3">' +
                  (null == (__t = copy['menu-item_two-title']) ? '' : __t) +
                  '</h2>\n\t\t\t</li>\n\t\t\t<li data-ui="btnResult" class="menu__navListItem">\n\t\t\t\t<h3 class="menu__navSubtitle subText">' +
                  (null == (__t = copy['menu-item_three-subtitle']) ? '' : __t) +
                  '</h3>\n\t\t\t\t<h2 class="menu__navTitle title3">' +
                  (null == (__t = copy['menu-item_three-title']) ? '' : __t) +
                  '</h2>\n\t\t\t</li>\n\t\t</ul>\n\n\t\t'),
                desktop &&
                  (__p +=
                    '\n\t</div>\n\n\t<div class="menu__right sectionBase__half">\n\t\t'),
                (__p +=
                  '\n\t\t<div class="menu__buttons">\n\t\t\t<button data-ui="btnSignup" class="btnMain">\n\t\t\t\t' +
                  (null == (__t = copy['menu-item_four-label']) ? '' : __t) +
                  '\n\t\t\t\t<span class="btnMain__border"></span>\n\t\t\t</button>\n\t\t\t<button data-ui="btnContact" class="btnMain">\n\t\t\t\t' +
                  (null == (__t = copy['menu-item_five-label']) ? '' : __t) +
                  '\n\t\t\t\t<span class="btnMain__border"></span>\n\t\t\t</button>\n\t\t\t<button data-ui="btnLegal" class="btnMain">\n\t\t\t\t' +
                  (null == (__t = copy['menu-item_btn-legal']) ? '' : __t) +
                  '\n\t\t\t\t<span class="btnMain__border"></span>\n\t\t\t</button>\n\t\t\t<a data-ui="btnPodcast" class="linkExternal" href="' +
                  (null == (__t = copy['menu-item_six-link']) ? '' : __t) +
                  '" target="_blank">\n\t\t\t\t' +
                  (null == (__t = copy['menu-item_six-label']) ? '' : __t) +
                  '\n\t\t\t\t<span class="linkExternal__underline"></span>\n\t\t\t</a>\n\n\t\t\t<svg class="menu__cortevaLogo">\n\t\t\t\t<use xlink:href="#corteva-logo" /></svg>\n\t\t</div>\n\n\t\t'),
                desktop && (__p += '\n\t</div>\n\t'),
                (__p +=
                  '\n\n\t<footer data-ui="footer" class="menu__footer">\n\t\t<a\n\t\t\tdata-ui="linkPioneer"\n\t\t\thref="' +
                  (null == (__t = copy['menu-item_seven-link']) ? '' : __t) +
                  '"\n\t\t\tclass="menu__footerLink subText2"\n\t\t\ttarget="_blank"\n\t\t\t>' +
                  (null == (__t = copy['menu-item_seven-label']) ? '' : __t) +
                  '</a>\n\t\t<a href="' +
                  (null == (__t = copy['menu-item_eight-link']) ? '' : __t) +
                  '" class="menu__footerLink subText2" target="_blank">' +
                  (null == (__t = copy['menu-item_eight-label']) ? '' : __t) +
                  '</a>\n\t\t<a href="' +
                  (null == (__t = copy['menu-item_nine-link']) ? '' : __t) +
                  '" class="menu__footerLink subText2" target="_blank">' +
                  (null == (__t = copy['menu-item_nine-label']) ? '' : __t) +
                  '</a>\n\t\t<a href="' +
                  (null == (__t = copy['menu-item_ten-link']) ? '' : __t) +
                  '" class="menu__footerLink subText2" target="_blank">' +
                  (null == (__t = copy['menu-item_ten-label']) ? '' : __t) +
                  '</a>\n\t\t<ul class="menu__social">\n\t\t\t<li class="menu__socialItem">\n\t\t\t\t<svg class="menu__socialItemIcon">\n\t\t\t\t\t<use xlink:href="#share-twitter" /></svg>\n\t\t\t\t<a\n\t\t\t\t\tdata-ui="btnTwitter"\n\t\t\t\t\tclass="menu__socialItemLink"\n\t\t\t\t\thref="' +
                  (null == (__t = copy['menu-twitter-link']) ? '' : __t) +
                  '"\n\t\t\t\t\ttarget="_blank"\n\t\t\t\t></a>\n\t\t\t</li>\n\t\t\t<li class="menu__socialItem">\n\t\t\t\t<svg class="menu__socialItemIcon">\n\t\t\t\t\t<use xlink:href="#share-fb" /></svg>\n\t\t\t\t<a\n\t\t\t\t\tdata-ui="btnFacebook"\n\t\t\t\t\tclass="menu__socialItemLink"\n\t\t\t\t\thref="' +
                  (null == (__t = copy['menu-facebook-link']) ? '' : __t) +
                  '"\n\t\t\t\t\ttarget="_blank"\n\t\t\t\t></a>\n\t\t\t</li>\n\t\t\t<li class="menu__socialItem">\n\t\t\t\t<svg class="menu__socialItemIcon">\n\t\t\t\t\t<use xlink:href="#share-instagram" /></svg>\n\t\t\t\t<a\n\t\t\t\t\tdata-ui="btnInsta"\n\t\t\t\t\tclass="menu__socialItemLink"\n\t\t\t\t\thref="' +
                  (null == (__t = copy['menu-instagram-link']) ? '' : __t) +
                  '"\n\t\t\t\t\ttarget="_blank"\n\t\t\t\t></a>\n\t\t\t</li>\n\t\t</ul>\n\t</footer>\n</section>');
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      406: function (e, t, n) {
        var i = n(407);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      407: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          "/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n.menu {\n  z-index: 200; }\n  .mobile .menu {\n    text-align: center;\n    padding: 4rem 10rem 10rem;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    top: 21rem;\n    bottom: 0;\n    height: auto; }\n  .desktop .menu,\n  .tablet .menu {\n    flex-direction: row;\n    padding: 5.5vh 8.3vw; }\n\n.menu__left {\n  align-items: flex-start; }\n\n.menu__right {\n  align-items: center; }\n\n.menu__header {\n  font-weight: bold;\n  letter-spacing: 0.1em; }\n  .desktop .menu__header,\n  .tablet .menu__header {\n    margin-bottom: 4.5rem; }\n\n.mobile .menu__navList {\n  margin: 12rem 0; }\n\n.mobile .menu__navListItem:not(:last-child) {\n  margin-bottom: 2.6vh; }\n\n.desktop .menu__navListItem:not(:last-child),\n.tablet .menu__navListItem:not(:last-child) {\n  margin-bottom: 5vh; }\n\n.menu__navSubtitle {\n  transition: opacity 500ms;\n  opacity: 0.3;\n  letter-spacing: 0.1em; }\n  .mobile .menu__navSubtitle {\n    margin-bottom: 2rem; }\n  .desktop .menu__navSubtitle,\n  .tablet .menu__navSubtitle {\n    margin-bottom: 1rem; }\n  .menu__navListItem:active .menu__navSubtitle,\n  .menu__navListItem:focus .menu__navSubtitle,\n  .menu__navListItem:hover .menu__navSubtitle {\n    opacity: 1; }\n\n.menu__navTitle {\n  cursor: pointer; }\n  .mobile .menu__navTitle {\n    white-space: nowrap; }\n\n.menu__buttons {\n  text-align: center; }\n  .mobile .menu__buttons {\n    width: 100%;\n    margin: 12rem 0; }\n  .desktop .menu__buttons,\n  .tablet .menu__buttons {\n    width: 48rem; }\n  .menu__buttons > .btnMain {\n    margin-bottom: 4rem; }\n    .menu__buttons > .btnMain:not(:first-child) {\n      margin-top: 2rem; }\n  .menu__buttons > .linkExternal {\n    margin: 4.2vh 0; }\n\n.menu__cortevaLogo {\n  width: 30rem;\n  height: 6rem;\n  margin: 8rem auto 0;\n  display: block; }\n  .desktop .menu__cortevaLogo,\n  .tablet .menu__cortevaLogo {\n    display: none; }\n\n.menu__footer {\n  width: 100%;\n  display: flex;\n  align-items: center; }\n  .mobile .menu__footer {\n    justify-content: space-between;\n    flex-wrap: wrap; }\n  .desktop .menu__footer,\n  .tablet .menu__footer {\n    left: 8.3vw;\n    bottom: 5.5vh;\n    position: absolute; }\n\n.menu__footerLink {\n  padding: 2.5rem 0;\n  opacity: 0.8;\n  transition: opacity 500ms;\n  text-align: left; }\n  .desktop .menu__footerLink,\n  .tablet .menu__footerLink {\n    margin-right: 5rem; }\n  .menu__footerLink:active, .menu__footerLink:focus, .menu__footerLink:hover {\n    opacity: 1; }\n\n.menu__social {\n  display: flex; }\n\n.menu__socialItem {\n  position: relative; }\n  .mobile .menu__socialItem {\n    width: 5rem;\n    height: 5rem; }\n    .mobile .menu__socialItem:not(:last-child) {\n      margin-right: 5rem; }\n  .desktop .menu__socialItem,\n  .tablet .menu__socialItem {\n    width: 1.5rem;\n    height: 1.5rem; }\n    .desktop .menu__socialItem:not(:last-child),\n    .tablet .menu__socialItem:not(:last-child) {\n      margin-right: 2.5rem; }\n    .desktop .menu__socialItem:before,\n    .tablet .menu__socialItem:before {\n      content: '';\n      top: -1.5rem;\n      left: -1.5rem;\n      bottom: -1.5rem;\n      right: -1.5rem;\n      position: absolute; }\n\n.menu__socialItemIcon {\n  width: 100%;\n  height: 100%;\n  fill: currentColor;\n  display: block; }\n\n.menu__socialItemLink {\n  top: -2rem;\n  left: -2rem;\n  bottom: -2rem;\n  right: -2rem;\n  position: absolute; }\n",
          '',
        ]);
      },
      408: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              (__p +=
                '<section class="signup">\n\t<div data-ui="sectionMain" class="signup__main sectionBase">\n\t\t'),
                desktop &&
                  (__p += '\n\t\t<div class="sectionBase__half">\n\t\t\t'),
                (__p +=
                  '\n\t\t\t<div data-ui="itemMain  btnBack" class="signup__back  btnBack">\n\t\t\t\t<svg class="btnBack__arrow"><use xlink:href="#arrow-back" /></svg>\n\t\t\t</div>\n\t\t\t<div data-ui="itemMain" class="signup__title  title">' +
                  (null == (__t = copy['signup-title']) ? '' : __t) +
                  '</div>\n\t\t\t<div data-ui="itemMain" class="signup__body  body">\n\t\t\t\t' +
                  (null == (__t = copy['signup-body']) ? '' : __t) +
                  '\n\t\t\t</div>\n\t\t\t'),
                desktop && (__p += '\n\t\t</div>\n\t\t'),
                (__p += ' '),
                desktop &&
                  (__p += '\n\t\t<div class="sectionBase__half">\n\t\t\t'),
                (__p +=
                  '\n\t\t\t<div data-ui="spinner itemMainFormAll" class="signup__spinner">\n\t\t\t\t<div class="signup__spinnerInner"></div>\n\t\t\t</div>\n\t\t\t<form\n\t\t\t\tdata-ui="form"\n\t\t\t\tclass="signup__form"\n\t\t\t\tmethod="post"\n\t\t\t\tid="eloqua-form"\n\t\t\t\tname="corn-revolution-subscription"\n\t\t\t\taction="https://s777435755.t.eloqua.com/e/f2"\n\t\t\t\tnovalidate\n\t\t\t>\n\t\t\t\n\t\t\t\t<input value="corn-revolution-subscription" type="hidden" name="elqFormName" />\n\t\t\t\t<input value="777435755" type="hidden" name="elqSiteId" />\n\t\t\t\t<input name="elqCampaignId" type="hidden" />\n\t\t\t\t<input name="business" value="Pioneer" type="hidden" />\n\t\t\t\t<input name="formName" value="phi_na_us_en_multi_20190604_corn-rev-form" type="hidden" />\n\t\t\t\t<input name="country" value="United States" type="hidden" />\n\t\t\t\t<input type="hidden" name="elqCustomerGUID" value="">\n\t\t\t\t<input type="hidden" name="elqCookieWrite" value="0">\n\n\n\n\t\t\t\t<div data-ui="itemMain itemMainForm itemMainFormAll inputFirstName" class="signup__input  inputBox">\n\t\t\t\t\t<input\n\t\t\t\t\t\tdata-ui="firstName"\n\t\t\t\t\t\tname="firstName"\n\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\tclass="inputBox__input"\n\t\t\t\t\t\tplaceholder="' +
                  (null == (__t = copy['signup-field_firstName-label'])
                    ? ''
                    : __t) +
                  '"\n\t\t\t\t\t\tminlength="1"\n\t\t\t\t\t\tmaxlength="35"\n\t\t\t\t\t\tautocomplete="given-name"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div class="inputBox__border"></div>\n\t\t\t\t</div>\n\n\t\t\t\t<div data-ui="itemMain itemMainForm itemMainFormAll inputLastName" class="signup__input  inputBox">\n\t\t\t\t\t<input\n\t\t\t\t\t\tdata-ui="lastName"\n\t\t\t\t\t\tname="lastName"\n\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\tclass="inputBox__input"\n\t\t\t\t\t\tplaceholder="' +
                  (null == (__t = copy['signup-field_lastName-label'])
                    ? ''
                    : __t) +
                  '"\n\t\t\t\t\t\tminlength="1"\n\t\t\t\t\t\tmaxlength="35"\n\t\t\t\t\t\tautocomplete="family-name"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div class="inputBox__border"></div>\n\t\t\t\t</div>\n\n\t\t\t\t<div data-ui="itemMain itemMainForm itemMainFormAll inputEmail" class="signup__input  inputBox">\n\t\t\t\t\t<input\n\t\t\t\t\t\tdata-ui="email"\n\t\t\t\t\t\tname="emailAddress"\n\t\t\t\t\t\ttype="email"\n\t\t\t\t\t\tclass="inputBox__input"\n\t\t\t\t\t\tplaceholder="' +
                  (null == (__t = copy['signup-field_email-label']) ? '' : __t) +
                  '"\n\t\t\t\t\t\tminlength="1"\n\t\t\t\t\t\tmaxlength="150"\n\t\t\t\t\t\tautocomplete="email"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div class="inputBox__border"></div>\n\t\t\t\t</div>\n\n\t\t\t\t<div data-ui="itemMain itemMainForm itemMainFormAll inputZip" class="signup__input  inputBox">\n\t\t\t\t\t<input\n\t\t\t\t\t\tdata-ui="zip"\n\t\t\t\t\t\tname="zipPostal"\n\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\tclass="inputBox__input"\n\t\t\t\t\t\tplaceholder="' +
                  (null == (__t = copy['signup-field_zipCode-label'])
                    ? ''
                    : __t) +
                  '"\n\t\t\t\t\t\tminlength="1"\n\t\t\t\t\t\tmaxlength="35"\n\t\t\t\t\t\tautocomplete="postal-code"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div class="inputBox__border"></div>\n\t\t\t\t</div>\n\n\t\t\t\t<div data-ui="itemMain itemMainForm itemMainFormAll" class="signup__terms">\n\t\t\t\t\t<input\n\t\t\t\t\t\tname="optIn"\n\t\t\t\t\t\tclass="signup__checkbox  inputCheckbox"\n\t\t\t\t\t\ttype="checkbox"\n\t\t\t\t\t\tid="checkbox"\n\t\t\t\t\t\tvalue="on"\n\t\t\t\t\t\tchecked\n\t\t\t\t\t/>\n\t\t\t\t\t<div class="signup__sudoCheckbox">\n\t\t\t\t\t\t<svg class="signup__checkboxTick">\n\t\t\t\t\t\t\t<use xlink:href="#tick" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<label class="signup__label" for="checkbox">\n\t\t\t\t\t\t<span class="signup__labelText">' +
                  (null == (__t = copy['signup-optin']) ? '' : __t) +
                  '</span>\n\t\t\t\t\t\t\x3c!-- <a class="signup__termsLink" href="/" target="_blank">TERMS & CONDITIONS</a> --\x3e\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\n\t\t\t\t<div data-ui="itemMain itemMainForm itemMainFormAll" class="signup__text">\n\t\t\t\t\t' +
                  (null == (__t = copy['signup-legal']) ? '' : __t) +
                  '\n\t\t\t\t</div>\n\n\t\t\t\t<button data-ui="itemMain itemMainForm itemMainFormAll" class="btnMain" type="submit">\n\t\t\t\t\t' +
                  (null == (__t = copy['signup-cta']) ? '' : __t) +
                  '\n\t\t\t\t\t<span class="btnMain__border"></span>\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t'),
                desktop && (__p += '\n\t\t</div>\n\t\t'),
                (__p +=
                  '\n\t</div>\n\n\t<div data-ui="sectionResponse" class="signup__response sectionBase">\n\t\t'),
                desktop &&
                  (__p += '\n\t\t<div class="sectionBase__half">\n\t\t\t'),
                (__p += ' '),
                desktop && (__p += '\n\t\t</div>\n\t\t'),
                (__p += ' '),
                desktop &&
                  (__p += '\n\t\t<div class="sectionBase__half">\n\t\t\t'),
                (__p += '\n\t\t\t<div data-ui="itemResponse"></div>\n\t\t\t'),
                desktop && (__p += '\n\t\t</div>\n\t\t'),
                (__p += '\n\t</div>\n</section>\n');
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      409: function (e, t, n) {
        var i = n(410);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      410: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          '/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n.signup {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  position: absolute; }\n\n.signup__response {\n  display: none; }\n\n.desktop .signup__main,\n.tablet .signup__main, .desktop\n.signup__response,\n.tablet\n.signup__response {\n  flex-direction: row;\n  padding: 5.5vh 8.3vw; }\n\n.mobile .signup__main, .mobile\n.signup__response {\n  padding-top: 15rem;\n  padding-bottom: 10rem;\n  overflow: auto;\n  justify-content: flex-start;\n  -webkit-overflow-scrolling: touch;\n  top: 21rem;\n  bottom: 0;\n  height: auto; }\n\n.mobile .signup__response {\n  margin-top: 50rem;\n  justify-content: flex-center; }\n\n.mobile .signup__back {\n  margin-bottom: 6rem; }\n\n.desktop .signup__back,\n.tablet .signup__back {\n  margin-bottom: 2rem; }\n\n.desktop .signup__title,\n.tablet .signup__title {\n  width: 60rem;\n  align-self: flex-start; }\n\n.signup__body {\n  margin: 5rem 0; }\n  .desktop .signup__body,\n  .tablet .signup__body {\n    width: 60rem;\n    align-self: flex-start; }\n\n.signup__spinner {\n  position: absolute;\n  left: 50%;\n  margin-left: -30px;\n  width: 60px;\n  height: 60px;\n  top: 50%;\n  margin-top: -30px;\n  opacity: 0;\n  pointer-events: none; }\n  .mobile .signup__spinner {\n    margin-top: 50px; }\n\n.signup__spinnerInner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-image: url("https://d18jfbjv498ve3.cloudfront.net/images/spinner.png");\n  background-size: 60px 60px;\n  animation: rotating 1.5s linear infinite; }\n\n.mobile .signup__form {\n  width: 100%; }\n\n.desktop .signup__form,\n.tablet .signup__form {\n  width: 48rem; }\n\n.mobile .signup__text {\n  margin: 6rem 0;\n  font-size: 2.7rem; }\n\n.desktop .signup__text,\n.tablet .signup__text {\n  margin: 4rem 0;\n  font-size: 1.4rem; }\n\n.signup__text > a {\n  font-weight: bold;\n  text-decoration: underline; }\n\n.signup__input {\n  margin-bottom: 2rem; }\n\n.signup__terms {\n  display: flex;\n  position: relative; }\n  .mobile .signup__terms {\n    margin: 6rem 0; }\n  .desktop .signup__terms,\n  .tablet .signup__terms {\n    margin: 4rem 0; }\n\n.signup__checkbox {\n  opacity: 0; }\n  .mobile .signup__checkbox {\n    margin-right: 6rem; }\n  .desktop .signup__checkbox,\n  .tablet .signup__checkbox {\n    margin-right: 3rem; }\n\n.signup__sudoCheckbox {\n  top: 0;\n  left: 0;\n  position: absolute;\n  display: flex;\n  opacity: 0.1;\n  pointer-events: none;\n  color: white;\n  border: solid 1px white;\n  border-radius: 0.6rem;\n  background-color: transparent; }\n  .mobile .signup__sudoCheckbox {\n    width: 8rem;\n    height: 8rem; }\n  .desktop .signup__sudoCheckbox,\n  .tablet .signup__sudoCheckbox {\n    width: 4rem;\n    height: 4rem; }\n  .signup__checkbox:checked ~ .signup__sudoCheckbox {\n    opacity: 1; }\n\n.signup__checkbox:checked ~ .signup__sudoCheckbox .signup__checkboxTick {\n  opacity: 1; }\n\n.signup__checkboxTick {\n  fill: white;\n  opacity: 0;\n  margin: auto; }\n  .mobile .signup__checkboxTick {\n    width: 2.4rem;\n    height: 2.2rem; }\n  .desktop .signup__checkboxTick,\n  .tablet .signup__checkboxTick {\n    width: 1.2rem;\n    height: 1.1rem; }\n\n.inputCheckbox:checked ~ .signup__label .signup__labelText {\n  opacity: 1; }\n\n.mobile .signup__label {\n  font-size: 2.7rem; }\n\n.desktop .signup__label,\n.tablet .signup__label {\n  font-size: 1.4rem; }\n\n.signup__labelText {\n  opacity: 0.1; }\n\n.signup__termsLink {\n  position: relative;\n  margin-left: 1rem;\n  opacity: 0.4; }\n  .signup__termsLink:before {\n    content: \'\';\n    top: calc(100% + 1rem);\n    left: 0;\n    position: absolute;\n    width: 100%;\n    height: 1px;\n    background-color: white; }\n',
          '',
        ]);
      },
      411: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              (__p +=
                '<section class="contact">\n\t<div data-ui="sectionMain" class="contact__main  sectionBase">\n\t\t'),
                desktop &&
                  (__p += '\n\t\t<div class="sectionBase__half">\n\t\t\t'),
                (__p +=
                  '\n\t\t\t<div data-ui="itemMain  btnBackMain" class="contact__backMain  btnBack">\n\t\t\t\t<svg class="btnBack__arrow"><use xlink:href="#arrow-back" /></svg>\n\t\t\t</div>\n\t\t\t<h2 data-ui="itemMain itemMainAll" class="contact__title  title2">\n\t\t\t\t' +
                  (null == (__t = copy['seventh-section-cta_two']) ? '' : __t) +
                  '\n\t\t\t</h2>\n\t\t\t<p data-ui="itemMain itemMainAll" class="contact__body">\n\t\t\t\t' +
                  (null == (__t = copy['contact_manager-body']) ? '' : __t) +
                  '\n\t\t\t</p>\n\n\t\t\t'),
                desktop && (__p += '\n\t\t</div>\n\n\t\t'),
                (__p += ' '),
                desktop &&
                  (__p +=
                    '\n\t\t<div class="sectionBase__half">\n\t\t\t<div class="contact__buttons">\n\t\t\t\t'),
                (__p +=
                  '\n\n\t\t\t\t<form data-ui="formMain" class="contact__formMain">\n\t\t\t\t\t<div data-ui="itemMain itemMainAll itemMainForm inputZip" class="contact__input  inputBox">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tdata-ui="zip"\n\t\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\t\tclass="inputBox__input"\n\t\t\t\t\t\t\tplaceholder="' +
                  (null == (__t = copy['contact_manager-field_one-label'])
                    ? ''
                    : __t) +
                  '"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class="inputBox__border"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button data-ui="btnMain itemMain itemMainAll itemMainForm" class="btnMain">\n\t\t\t\t\t\t' +
                  (null == (__t = copy['contact_manager-field-submit'])
                    ? ''
                    : __t) +
                  '\n\t\t\t\t\t\t<span class="btnMain__border"></span>\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\n\t\t\t\t<p data-ui="itemMain itemMainAll itemMainForm itemNoResults" class="contact__noResults">\n\t\t\t\t\tNo results found.\n\t\t\t\t</p>\n\t\t\t\t<div data-ui="itemMainAll spinner" class="contact__spinner">\n\t\t\t\t\t<div class="contact__spinnerInner"></div>\n\t\t\t\t</div>\n\n\t\t\t\t'),
                desktop && (__p += '\n\t\t\t</div>\n\t\t</div>\n\t\t'),
                (__p +=
                  '\n\t</div>\n\n\t<div data-ui="sectionFind" class="contact__find  sectionBase">\n\t\t'),
                desktop &&
                  (__p += '\n\t\t<div class="sectionBase__half">\n\t\t\t'),
                (__p +=
                  '\n\t\t\t<div data-ui="itemFind btnBackResult" class="contact__backResult  btnBack">\n\t\t\t\t<svg class="btnBack__arrow"><use xlink:href="#arrow-back" /></svg>\n\t\t\t\t\x3c!-- <div class="contact__backArrow"></div> --\x3e\n\t\t\t\t<span data-ui="address"></span>\n\t\t\t</div>\n\t\t\t<h2 data-ui="itemFind name" class="contact__title  title2"></h2>\n\t\t\t<h2 data-ui="itemFind role" class="contact__role  title2"></h2>\n\n\t\t\t'),
                desktop && (__p += '\n\t\t</div>\n\n\t\t'),
                (__p += ' '),
                desktop &&
                  (__p +=
                    '\n\t\t<div class="sectionBase__half">\n\t\t\t<div class="contact__buttons">\n\t\t\t\t'),
                (__p +=
                  '\n\n\t\t\t\t\x3c!-- <div data-ui="itemFind btnPhone" class="btnMain">\n\t\t\t\t\t<span data-ui="phone"></span>\n\t\t\t\t\t<span class="btnMain__border"></span>\n\t\t\t\t</div>\n\t\t\t\t<div data-ui="itemFind btnEmail" class="btnMain">\n\t\t\t\t\t<span data-ui="email"></span>\n\t\t\t\t\t<span class="btnMain__border"></span>\n\t\t\t\t</div> --\x3e\n\n\t\t\t\t<div data-ui="itemFind  btnPhone" class="inputBox  isActive">\n\t\t\t\t\t<a data-ui="phone" type="phone" class="inputBox__input" readonly></a>\n\t\t\t\t\t<div class="inputBox__border"></div>\n\t\t\t\t</div>\n\t\t\t\t<div data-ui="itemFind  btnEmail" class="inputBox  isActive">\n\t\t\t\t\t<a data-ui="email" type="email" class="inputBox__input" readonly></a>\n\t\t\t\t\t<div class="inputBox__border"></div>\n\t\t\t\t</div>\n\t\t\t\t'),
                desktop && (__p += '\n\t\t\t</div>\n\t\t</div>\n\t\t'),
                (__p +=
                  '\n\t</div>\n\t<input type="text" data-ui="inputPhone" style="position: absolute; left: -99999px;" />\n</section>\n');
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      412: function (e, t, n) {
        var i = n(413);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      413: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          '/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n@keyframes rotating {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(360deg); } }\n\n.contact {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  position: absolute; }\n\n.mobile .contact__main, .mobile .contact__find {\n  top: 21rem;\n  bottom: 0;\n  height: auto;\n  overflow: hidden;\n  padding: 0 8rem; }\n\n.desktop .contact__main, .tablet .contact__main, .desktop .contact__find, .tablet .contact__find {\n  flex-direction: row;\n  padding: 5.5vh 8.3vw; }\n\n.contact__find {\n  display: none; }\n\n.contact__formMain {\n  width: 100%; }\n\n.mobile .contact__backMain {\n  margin-bottom: 6rem; }\n\n.desktop .contact__backMain, .tablet .contact__backMain {\n  margin-bottom: 2rem; }\n\n.contact__backResult {\n  margin-bottom: 9rem; }\n  .contact__backResult .btnBack__arrow {\n    margin-right: 3rem; }\n\n.contact__buttons {\n  position: relative; }\n  .mobile .contact__buttons {\n    width: 100%; }\n  .desktop .contact__buttons, .tablet .contact__buttons {\n    width: 48rem; }\n\n.contact__spinner {\n  position: absolute;\n  left: 50%;\n  margin-left: -30px;\n  width: 60px;\n  height: 60px;\n  top: 50%;\n  margin-top: -30px;\n  opacity: 0;\n  pointer-events: none; }\n  .mobile .contact__spinner {\n    margin-top: 50px; }\n\n.contact__spinnerInner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-image: url("https://d18jfbjv498ve3.cloudfront.net/images/spinner.png");\n  background-size: 60px 60px;\n  animation: rotating 1.5s linear infinite; }\n\n.contact__title {\n  width: 100%; }\n\n.contact__role {\n  width: 100%;\n  margin-top: 1rem;\n  margin-bottom: 10rem;\n  opacity: 0.3; }\n\n.mobile .contact__body {\n  margin: 9rem 0; }\n\n.desktop .contact__body, .tablet .contact__body {\n  margin: 6rem 0;\n  width: 60rem;\n  align-self: flex-start; }\n\n.contact__noResults {\n  position: absolute;\n  color: rgba(255, 255, 255, 0);\n  transition: 0.5s color; }\n  .mobile .contact__noResults {\n    margin-top: 60rem; }\n  .desktop .contact__noResults {\n    margin: 3rem 0; }\n  .contact__noResults.isVisible {\n    color: white; }\n\n.contact__input, .inputBox {\n  margin-bottom: 2rem; }\n',
          '',
        ]);
      },
      414: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              __p +=
                '<section class="legal sectionBase">\n\t<div data-ui="inner" class="legal__inner">\n\t\t<svg data-ui="itemMain" class="legal__cortevaLogo"><use xlink:href="#corteva-logo" /></svg>\n\n\t\t<p data-ui="itemMain" class="legal__copy body">\n\t\t\tPioneer<sup>Â®</sup> brand products are provided subject to the terms and conditions of purchase \n\t\t\twhich are part of the labeling and purchase documents. <sup>TM Â® SM</sup> Trademarks and service marks of Dow AgroSciences, DuPont or Pioneer, and their affiliated companies or their respective owners. Â© 2020 Corteva.\n\t\t</p>\n\t\t<p data-ui="itemMain" class="legal__copy body">\n\t\t\t[1] Data based on 2018-19 trials. Stress locations include 23 locations with an 83% win-rate, and 219 high-yield locations with an 86% win-rate. Water-limited environments are those in which the water supply/demand ratio during flowering or grain fill was less than 0.66 on a 0-1 scale (1=adequate moisture) using the Pioneer proprietary EnClass<sup>Â®</sup> system and in which the average yield of competitor brand hybrids at the location was less than 150 bu/A. Favorable growing conditions are locations where yield levels were at or above 150 bu/A on average, regardless of water supply/demand ratio. Precipitation levels are interpolated values based on local weather stations. Product performance in water-limited environments is variable and depends on many factors such as the severity and timing of moisture deficiency, heat stress, soil type, management practices and environmental stress as well as disease and pest pressures. All hybrids may exhibit reduced yield under water and heat stress. Individual results may vary.\n\t\t</p>\n\t\t<p data-ui="itemMain" class="legal__copy body">\n\t\t\t[2] Data is based on an average of 2019 comparisons made in the U.S. through Nov. 1, 2019. Comparisons are against all competitors, unless otherwise stated, and within +/- 3 CRM of the competitive brand.\n\t\t</p>\n\t\t<p data-ui="itemMain" class="legal__copy body">\n\t\t\t[3] 2019 comparison data is based on the average of 1,330+ comparisons made in the U.S. through Nov. 1, 2019. Comparisons are against all competitors, technology segment matched, unless otherwise stated, and within +/- 3 CRM of the competitive brand.\n\t\t\tProduct responses are variable and subject to any number of environmental, disease and pest pressures. Individual results may vary. Multi-year and multi-location data are a better predictor of future performance. DO NOT USE THIS OR ANY OTHER DATA FROM A LIMITED NUMBER OF TRIALS AS A SIGNIFICANT FACTOR IN PRODUCT SELECTION. Refer to <a href="https://www.pioneer.com/us/products/corn/traits-technologies/qrome.html" target="_blank">pioneer.com/us/products/corn/traits-technologies/qrome.html</a> or contact a Pioneer sales representative or authorized dealer for the latest and complete listing of traits and scores for each Pioneer<sup>Â®</sup> brand product.\n\t\t</p>\n\t\t<p data-ui="itemMain" class="legal__copy body">\n\t\t\t<strong>Q</strong> (Qrome<sup>Â®</sup>) â€“ Contains a single-bag integrated refuge solution for above- and below-ground insects. The major component contains the Agrisure<sup>Â®</sup> RW trait, the YieldGard<sup>Â®</sup> Corn Borer gene and the Herculex<sup>Â®</sup> XTRA gene. In EPA-designated cotton-growing counties, a 20% separate corn borer refuge must be planted with Qrome<sup>Â®</sup> products. Qrome products are approved for cultivation in the U.S. and Canada. They have also received approval in a number of importing countries, most recently China. For additional information about the status of regulatory authorizations, visit <a href="http://www.biotradestatus.com/" target="_blank">http://www.biotradestatus.com/</a>.\n\t\t</p>\n\n\t\t<div data-ui="itemMain" class="legal__logos">\n\t\t\t<svg class="legal__logo legal__logosA"><use xlink:href="#logo-Agrisure_RW_Brandmark_WH" /></svg>\n\t\t\t\x3c!-- <svg class="legal__logo legal__logosB"><use xlink:href="#logo-HX1_shield_WH" /></svg> --\x3e\n\t\t\t<svg class="legal__logo legal__logosC"><use xlink:href="#logo-RR_COLE_WH" /></svg>\n\t\t\t<svg class="legal__logo legal__logosD"><use xlink:href="#logo-US_AQUAmax_WH" /></svg>\n\t\t\t<svg class="legal__logo legal__logosE"><use xlink:href="#logo-LibertyLink_WH" /></svg>\n\t\t\t<svg class="legal__logo legal__logosF"><use xlink:href="#logo-Qrome_0k" /></svg>\n\t\t\t<svg class="legal__logo legal__logosG"><use xlink:href="#logo-YG_CB_W" /></svg>\n\t\t</div>\n\t</div>\n</section>\n';
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      415: function (e, t, n) {
        var i = n(416);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      416: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          '/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n.mobile .legal__inner {\n  left: 0;\n  top: 21rem;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  padding: 16rem 8rem;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch; }\n\n.desktop .legal__inner, .tablet .legal__inner {\n  width: 110rem; }\n\n.legal__cortevaLogo {\n  display: block; }\n  .mobile .legal__cortevaLogo {\n    margin: 0 auto 7rem;\n    width: 46.2rem;\n    height: 10rem; }\n  .desktop .legal__cortevaLogo, .tablet .legal__cortevaLogo {\n    width: 25rem;\n    height: 4.8rem;\n    margin-bottom: 8rem; }\n\n.mobile .legal__copy {\n  margin: 2.5rem 0;\n  font-size: 3rem;\n  text-align: center; }\n\n.desktop .legal__copy, .tablet .legal__copy {\n  font-size: 1.3rem;\n  margin: 2.5rem 0; }\n\n.legal__logos {\n  display: flex;\n  align-items: center;\n  margin-top: 8rem; }\n  .mobile .legal__logos {\n    justify-content: center; }\n\n.legal__logo {\n  margin-right: 3rem;\n  will-change: opacity; }\n\n.legal__logosA {\n  width: 15rem;\n  height: 3.2rem; }\n\n.legal__logosB {\n  width: 6.2rem;\n  height: 6.4rem; }\n\n.legal__logosC {\n  width: 5.2rem;\n  height: 5.8rem; }\n\n.legal__logosD {\n  width: 12rem;\n  height: 4rem; }\n\n.legal__logosE {\n  width: 8rem;\n  height: 4rem; }\n\n.legal__logosF {\n  width: 7rem;\n  height: 4.4rem; }\n\n.legal__logosG {\n  width: 5.8rem;\n  height: 6.2rem; }\n',
          '',
        ]);
      },
      417: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              (__p +=
                '<div class="rotateOverlay">\n    \x3c!-- <img class="rotateOverlay__bg" src="' +
                (null == (__t = env.CDN) ? '' : __t) +
                'images/overlay-bg.jpg" /> --\x3e\n    <div class="rotateOverlay__bg"></div>\n    <img class="rotateOverlay__icon" src="' +
                (null == (__t = env.CDN) ? '' : __t) +
                'images/rotate-icon.png" />\n    <p class="rotateOverlay__copy">\n        '),
                env.isMobile
                  ? (__p +=
                      ' ' +
                      (null == (__t = copy['rotate-overlay-message-portrait'])
                        ? ''
                        : __t) +
                      ' ')
                  : (__p +=
                      ' ' +
                      (null == (__t = copy['rotate-overlay-message-landscape'])
                        ? ''
                        : __t) +
                      ' '),
                (__p += '\n    </p>\n</div>\n');
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      418: function (e, t, n) {
        var i = n(419);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      419: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          '/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n.rotateOverlay {\n  z-index: 400;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  display: none; }\n  .mobile.landscape .rotateOverlay {\n    display: flex; }\n  .tablet.portrait .rotateOverlay {\n    display: flex; }\n\n.rotateOverlay__bg {\n  z-index: -1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  background-color: #001d11;\n  background-image: linear-gradient(45deg, #00322E 0%, transparent 40%, transparent 60%, #013110); }\n\n.rotateOverlay__icon {\n  width: 20vw; }\n\n.rotateOverlay__copy {\n  font-size: 2.2vw;\n  margin-top: 5vw; }\n',
          '',
        ]);
      },
      420: function (e) {
        e.exports = {
          view: { active: !0, progress: 0.5 },
          bg: {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            baseColor: '#00160a',
            accentColor1: '#004484',
            accentColor2: '#025b15',
            opacity: 1,
          },
          areaBgBlurred: {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 2.67,
            rX: 0,
            rY: -0.17450000000000013,
            rZ: 0,
            v: !0,
            color: '#ffffff',
            o: 0.23,
            particleSizeMin: 1e3,
            particleSizeMax: 1e3,
            radius: 3,
          },
          areaBack1: {
            pX: 2.33,
            pY: -3.0500000000000003,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: -27.745999999980686,
            rZ: 0,
            v: !0,
            color: '#103f0c',
            o: 0.8,
            particleSizeMin: 10,
            particleSizeMax: 200,
            radius: 2,
          },
          areaBack2: {
            pX: 1.4000000000000001,
            pY: -2.82,
            pZ: 0,
            s: 0.6,
            rX: 0,
            rY: -47.968000000046665,
            rZ: 1.84,
            v: !0,
            color: '#b22020',
            o: 1,
            particleSizeMin: 10,
            particleSizeMax: 80,
            radius: 4,
          },
          areaFront: {
            pX: -3.27,
            pY: -2.15,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: -11.196500000002192,
            rZ: 0,
            v: !0,
            color: '#103f42',
            o: 0.58,
            particleSizeMin: 5,
            particleSizeMax: 200,
            radius: 3,
          },
          corn: {
            pX: 0,
            pY: -2.0734781774154625,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0.02519077751012205,
            rZ: -0.2617993877991494,
            v: !0,
            active: !0,
            sceneRotation: 8.852286924294683,
            pointerEased: [0.6926143462147342, 0.3196103832380981],
            motionRotation: [0, 0, 0],
          },
          title: { pX: 0, pY: 0, pZ: 0, s: 1, rX: 0, rY: 0, rZ: 0, v: !0 },
        };
      },
      421: function (e) {
        e.exports = {
          view: {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            vh: 1152,
            visible: !1,
            active: !0,
            progress: 0.5,
          },
          title: {
            pX: -949.62,
            pY: 34.56,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            viewport: { width: 2261, height: 1152 },
            active: !0,
            fontSize: 117.76041666666666,
            width: 706.5624999999999,
            pointerActive: !1,
            height: 230.81041666666667,
          },
          bodyText: {
            pX: -949.62,
            pY: -34.56,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            active: !0,
            fontSize: 23.552083333333332,
            width: 824.3229166666666,
            height: 91.75891666666666,
          },
          hotspot: {
            pX: 565.25,
            pY: 230.4,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            active: !0,
            rotation: 0,
            progress: 0,
            progressStart: 0,
            progressEnd: 1,
            renderActive: !1,
            pointerActive: !1,
            viewport: { width: 2261, height: 1152, scale: 1.1776041666666666 },
            size: 176.64062499999997,
          },
          bg: {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            size: { width: 2261, height: 1152, pixelRatio: 1 },
            baseColor: '#17120f',
            accentColor1: '#4e2e10',
            accentColor2: '#224528',
            opacity: 1,
          },
          dna: {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: -20.55898163397288,
            rZ: 0,
            v: !0,
            startProgress: 0,
            endProgress: 3,
            color: '#ed863b',
            o: 1,
            particleSizeMin: 10,
            particleSizeMax: 35,
          },
          thread: {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 222.60300000010966,
            rZ: 0,
            v: !0,
            color: '#12f9b4',
            o: 0.7000000000000001,
            particleSizeMin: 10,
            particleSizeMax: 50,
            ry: -12.704999999998398,
          },
          thread2: {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: -114.10200000076996,
            rZ: 0,
            v: !0,
            color: '#13ff63',
            o: 0.7000000000000001,
            particleSizeMin: 10,
            particleSizeMax: 50,
          },
          thread3: {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: -130.2220000007553,
            rZ: 0,
            v: !0,
            color: '#38703d',
            o: 0.7000000000000001,
            particleSizeMin: 10,
            particleSizeMax: 50,
          },
          stream: {
            pX: -0.23,
            pY: 5.09,
            pZ: 1.01,
            s: 1.34,
            rX: 0.02,
            rY: 0,
            rZ: -0.66,
            v: !0,
            startProgress: 0,
            endProgress: 0.5,
            color: '#55ffc2',
            o: 0.8,
            particleSizeMin: 15,
            particleSizeMax: 27.18,
          },
          stream2: {
            pX: -2.83,
            pY: 8.82,
            pZ: -8.13,
            s: 4.43,
            rX: 0,
            rY: 0,
            rZ: -0.42,
            v: !0,
            startProgress: 0,
            endProgress: 0.5,
            color: '#21d37d',
            o: 1,
            particleSizeMin: 27.97,
            particleSizeMax: 35,
          },
          area: {
            pX: 0,
            pY: -2.0100000000000002,
            pZ: 0,
            s: 1.02,
            rX: 0,
            rY: -28.798500000195933,
            rZ: -1,
            v: !0,
            color: '#06fcb2',
            o: 2,
            particleSizeMin: 12,
            particleSizeMax: 20,
            radius: 3,
          },
          area2: {
            pX: 3.25,
            pY: -3.29,
            pZ: -1.5,
            s: 1,
            rX: 0,
            rY: -13.545999999789675,
            rZ: -1,
            v: !0,
            color: '#41be91',
            o: 0.3,
            particleSizeMin: 3,
            particleSizeMax: 120,
            radius: 3,
          },
          area3: {
            pX: -1.18,
            pY: 2.58,
            pZ: 1.18,
            s: 0.42,
            rX: 0,
            rY: -148.7724999999351,
            rZ: 0,
            v: !0,
            color: '#00ff75',
            o: 1,
            particleSizeMin: 13.02,
            particleSizeMax: 20,
            radius: 3.16,
          },
          area4: {
            pX: -3.4,
            pY: 3.43,
            pZ: 0,
            s: 0.32,
            rX: 0,
            rY: -149.73699999991513,
            rZ: 0,
            v: !0,
            color: '#06ff78',
            o: 0.4,
            particleSizeMin: 20,
            particleSizeMax: 30,
            radius: 3,
          },
          area5: {
            pX: -0.51,
            pY: -2.86,
            pZ: 1.18,
            s: 1.01,
            rX: 0,
            rY: -149.7509999999148,
            rZ: 0,
            v: !0,
            color: '#e80a5a',
            o: 1,
            particleSizeMin: 10,
            particleSizeMax: 20,
            radius: 3.0300000000000002,
          },
          area6: {
            pX: -6.86,
            pY: 0,
            pZ: -3.72,
            s: 0.85,
            rX: -1.02,
            rY: -128.30750000042187,
            rZ: -0.8,
            v: !0,
            color: '#16ed52',
            o: 0.5,
            particleSizeMin: 20,
            particleSizeMax: 30,
            radius: 3,
          },
          area7: {
            pX: -4.24,
            pY: 1.75,
            pZ: 0,
            s: 0.27,
            rX: -4,
            rY: -123.66050000020107,
            rZ: -1.71,
            v: !0,
            color: '#15f7a6',
            o: 2.54,
            particleSizeMin: 1,
            particleSizeMax: 50,
            radius: 2.83,
          },
          area8: {
            pX: 4.12,
            pY: -0.02,
            pZ: 0,
            s: 0.43,
            rX: -0.93,
            rY: -123.5955000004077,
            rZ: -30,
            v: !0,
            color: '#28d879',
            o: 0.9,
            particleSizeMin: 2,
            particleSizeMax: 100,
            radius: 2.3000000000000003,
          },
          area9: {
            pX: 5.34,
            pY: 2.68,
            pZ: 0,
            s: 2.11,
            rX: 0.2,
            rY: -118.2515000003826,
            rZ: 0.37,
            v: !0,
            color: '#00ff84',
            o: 1.47,
            particleSizeMin: 0.59,
            particleSizeMax: 70,
            radius: 0.27,
          },
        };
      },
      422: function (e) {
        e.exports = {
          frames: [
            { frame: { x: 0, y: 0, w: 256, h: 256 } },
            { frame: { x: 256, y: 0, w: 256, h: 256 } },
            { frame: { x: 512, y: 0, w: 256, h: 256 } },
            { frame: { x: 768, y: 0, w: 256, h: 256 } },
            { frame: { x: 0, y: 256, w: 256, h: 256 } },
            { frame: { x: 256, y: 256, w: 256, h: 256 } },
            { frame: { x: 512, y: 256, w: 256, h: 256 } },
            { frame: { x: 768, y: 256, w: 256, h: 256 } },
            { frame: { x: 0, y: 512, w: 256, h: 256 } },
            { frame: { x: 256, y: 512, w: 256, h: 256 } },
            { frame: { x: 512, y: 512, w: 256, h: 256 } },
            { frame: { x: 768, y: 512, w: 256, h: 256 } },
          ],
          meta: {
            app: 'https://www.codeandweb.com/texturepacker',
            version: '1.0',
            image: 'map-field-diffuse-0.png',
            format: 'RGBA8888',
            size: { w: 1024, h: 1024 },
            scale: '1',
            smartupdate:
              '$TexturePacker:SmartUpdate:3f478c91fdc6c661ac466943041bee81:b8aa5ddea72807b0a608260882d3ea1b:273908c8edda067e8c25f0aa2929203c$',
          },
        };
      },
      423: function (e, t, n) {
        var i = n(424);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      424: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          '.kernel__hotspotCta {\n  left: 50%;\n  bottom: 3vh;\n  position: absolute;\n  transform: translateX(-50%);\n  text-transform: uppercase; }\n',
          '',
        ]);
      },
      425: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            //with (obj || {})
              __p +=
                '<div class="cortevaLogo">\n\t<svg class="cortevaLogo__icon"><use xlink:href="#corteva-logo" /></svg>\n</div> \n';
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      426: function (e, t, n) {
        var i = n(427);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      427: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          '/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n.cortevaLogo {\n  position: absolute;\n  fill: white; }\n  .mobile .cortevaLogo {\n    display: none !important; }\n  .desktop .cortevaLogo, .tablet .cortevaLogo {\n    top: 5.5vh;\n    right: 8.3vw;\n    width: 14.5rem;\n    height: 2.7rem; }\n\n.cortevaLogo__icon {\n  width: 100%;\n  height: 100%;\n  display: block; }\n',
          '',
        ]);
      },
      428: function (e) {
        e.exports = {
          view: {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            vh: 720,
            open: !1,
            visible: !0,
            active: !0,
            menuLayout: { width: 316.66666666666663, height: 33.33333333333333 },
            menuStates: !1,
            pointerClick: 0.1363554055458207,
            resolution: { x: 1280, y: 720 },
            progress: 0.10557959241632979,
          },
          bg: {
            pX: 0,
            pY: 38.00865326987878,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            size: { width: 1280, height: 720, pixelRatio: 2 },
            baseColor: '#001c0c',
            accentColor1: '#0a3a4f',
            accentColor2: '#10421a',
            opacity: 1,
          },
          areaBack1: {
            pX: 1,
            pY: -9.42235832089626,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: -16.014500000007974,
            rZ: 0,
            v: !0,
            color: '#1c6575',
            o: 0.8,
            particleSizeMin: 10,
            particleSizeMax: 100,
            radius: 3,
          },
          termsLink: {
            pX: -537.6,
            pY: -324,
            pZ: 3,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            alpha: 1,
            active: !0,
            fontSize: 9.333333333333332,
            width: 120,
            height: 7.242666666666666,
            pointerClick: 0.1363554055458207,
            pointerPosition: [1107, 429],
            rollover: !1,
          },
        };
      },
      429: function (module, exports, __webpack_require__) {
        const template = function (obj) {
            var __t,
              __p = '',
              __j = Array.prototype.join,
              print = function () {
                __p += __j.call(arguments, '');
              };
            ////with (obj || {})
              __p +=
                '<div class="hideUI">\n\t<div data-ui="inner" class="hideUI__inner">\n\t\t<div data-ui="text" class="hideUI__text">Swipe up to continue</div>\n\t</div>\n</div>\n';
            return __p;
          },
          createDom = __webpack_require__(165).default;
        module.exports = function (e) {
          return createDom(template(e));
        };
      },
      430: function (e, t, n) {
        var i = n(431);
        'string' == typeof i && (i = [[e.i, i, '']]);
        var r = { hmr: !0, transform: void 0, insertInto: void 0 };
        n(85)(i, r);
        i.locals && (e.exports = i.locals);
      },
      431: function (e, t, n) {
        (e.exports = n(84)(!1)).push([
          e.i,
          "/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n/*\n    1. Predefined breakpoints:\n    ---\n    USAGE:\n    @mixin breakpoint( desktop-1680, {\n        background: red;\n    });\n*/\n/*\n    2. Custom breakpoints for width:\n    ---\n    USAGE:\n    @mixin breakpoint-width( $bp-desktop-1280-min, $bp-desktop-1920-min, {\n        background: red;\n    });\n\n    @mixin breakpoint-width-min( 1280px, {\n        background: green;\n    });\n\n    @mixin breakpoint-width-max( $bp-desktop-1440-max, {\n        background: blue;\n    });\n*/\n/*\n    3. Custom breakpoints for height:\n    ---\n    USAGE:\n    @mixin breakpoint-height( 600px, 700px, {\n        background: red;\n    });\n\n    @mixin breakpoint-height-min( 1000px, {\n        background: green;\n    });\n\n    @mixin breakpoint-height-max( 600px, {\n        background: blue;\n    });\n*/\n.hideUI {\n  visibility: hidden;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: calc(100vh + 200px);\n  color: white;\n  z-index: 100; }\n  .hideUI:before {\n    content: '';\n    background: rgba(255, 0, 0, 0);\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: fixed; }\n\n.hideUI__inner {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column; }\n\n.hideUI__text {\n  display: none; }\n",
          '',
        ]);
      },
      432: function (e, t, n) {
        'use strict';
        n.r(t);
        var i = {};
        n.r(i),
          n.d(i, 'setSection', function () {
            return l;
          });
        n(378);
        var r,
          o = n(82),
          a = n(9),
          s = n.n(a),
          u = n(53),
          l =
            (Object(u.a)(),
            function (e) {
              throw new Error('Actions.setSection() is not implemented yet');
            }),
          c = n(10),
          p = n(369),
          h = n(88);
        function f(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function d(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function v(e) {
          window.ga && window.ga('send', { hitType: 'pageview', page: e });
        }
        function m(e, t) {
          var n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : '';
          window.ga &&
            window.ga('send', {
              hitType: 'event',
              eventCategory: e,
              eventAction: t,
              eventLabel: n,
            });
        }
        var g,
          b,
          y,
          w,
          x,
          P,
          _ = Object(u.a)();
        new ((g = (r = (function () {
          function e() {
            !(function (e, t) {
              if (!(e instanceof t))
                throw new TypeError('Cannot call a class as a function');
            })(this, e),
              (this.props = {
                sections: [
                  _,
                  function (e) {
                    return [e.currentSection, e.currentSubSection];
                  },
                ],
                hotspotDna: [
                  _,
                  function (e) {
                    return e.navigation.hotspotDna;
                  },
                ],
                hotspotStalk: [
                  _,
                  function (e) {
                    return e.navigation.hotspotStalk;
                  },
                ],
                hotspotKernel: [
                  _,
                  function (e) {
                    return e.navigation.hotspotKernel;
                  },
                ],
              }),
              (this.prevSectionPath = null);
          }
          var t, n, i;
          return (
            (t = e),
            (n = [
              {
                key: 'setup',
                value: function () {
                  return (
                    this.store && this.store.resume(),
                    this.setupResolve && this.setupResolve(),
                    this
                  );
                },
              },
              {
                key: 'setSections',
                value: function (e) {
                  var t,
                    n = f(e, 2),
                    i = n[0],
                    r = n[1];
                  (t = r.length > 1 ? ''.concat(i, '/').concat(r) : i) !==
                    this.prevSectionPath &&
                    (_.state.inPreloader ||
                      _.state.scroll.autoScrolling ||
                      m('Moved to next section', 'Scroll', t),
                    (this.prevSectionPath = t));
                },
              },
              {
                key: 'onHotspotDna',
                value: function () {
                  m('Section Detail Click', 'Click', p['first-section-cta']);
                },
              },
              {
                key: 'onHotspotStalk',
                value: function () {
                  m('Section Detail Click', 'Click', p['fourth-section-cta']);
                },
              },
              {
                key: 'onHotspotKernel',
                value: function () {
                  m('Section Detail Click', 'Click', p['sixth-section-cta']);
                },
              },
            ]) && d(t.prototype, n),
            i && d(t, i),
            e
          );
        })()).prototype),
        (b = 'setup'),
        (y = [h.a]),
        (w = Object.getOwnPropertyDescriptor(r.prototype, 'setup')),
        (x = r.prototype),
        (P = {}),
        Object.keys(w).forEach(function (e) {
          P[e] = w[e];
        }),
        (P.enumerable = !!P.enumerable),
        (P.configurable = !!P.configurable),
        ('value' in P || P.initializer) && (P.writable = !0),
        (P = y
          .slice()
          .reverse()
          .reduce(function (e, t) {
            return t(g, b, e) || e;
          }, P)),
        x &&
          void 0 !== P.initializer &&
          ((P.value = P.initializer ? P.initializer.call(x) : void 0),
          (P.initializer = void 0)),
        void 0 === P.initializer && (Object.defineProperty(g, b, P), (P = null)),
        r)().setup();
        var k = n(380),
          O = n.n(k),
          S = n(119),
          T = n(35),
          A = n(86),
          M = n(118);
        var j,
          F,
          R = 1 / 0,
          C = navigator.userAgent.toLowerCase().indexOf('firefox') > -1,
          E = function (e) {
            e.cancelable && e.preventDefault();
            var t = e.timeStamp - R;
            (R = e.timeStamp),
              (j = C
                ? 1 === e.deltaMode
                : !(
                    Math.abs(Math.abs(e.deltaY / e.wheelDeltaY) - 1 / 3) < 1e-5 ||
                    (!j && t < 250)
                  ));
            var n = 1;
            return (
              1 === e.deltaMode
                ? (n = 40)
                : 2 === e.deltaMode && (n = window.offsetHeight),
              {
                scrollX: e.deltaX * n,
                scrollY: e.deltaY * n,
                isWheel: j,
                lastWheelTime: R,
                delta: t,
              }
            );
          },
          L = n(32);
        function I(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function D(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        var U,
          z,
          N = Object(u.a)(),
          B = function (e) {
            var t,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : void 0,
              i = Object(S.a)().sections,
              r = s.a.findWhere(i, { name: e });
            if (!r)
              throw new Error(
                "ScrollHandler.getSnapPosition() - Can't find section with name ".concat(
                  e,
                ),
              );
            if (
              !(t =
                void 0 === n
                  ? r.divisions[0]
                  : 'number' == typeof n
                  ? r.divisions[n]
                  : s.a.findWhere(r.divisions, { 0: n }))
            )
              throw new Error(
                "ScrollHandler.getSnapPosition() - Can't find sub section with name ".concat(
                  n,
                ),
              );
            var o = N.state.viewport.height,
              a = t[1];
            return 'middle' === a
              ? (r.offset + r.desktopSize / 2 - 0.5) * o
              : ('start' === a
                  ? (a = (1.05 / 3) * N.state.maxSlope)
                  : 'end' === a &&
                    (a = r.desktopSize - (1 + (1.05 / 3) * N.state.maxSlope)),
                (r.offset + a) * o);
          },
          V = function () {
            return U;
          },
          Y = function (e, t, n, i) {
            var r = Object(S.a)().sections,
              o = e.maxSlope,
              a = e.pageHeight,
              s = e.viewport.height,
              u = n,
              l = e.sectionHeights[i];
            r[i].divisions
              ? r[i].divisions.forEach(function (e) {
                  var n = D(e, 2)[1];
                  if ('middle' === n)
                    t.push(u + l / 2 - s / 2),
                      t.push(u + l / 2 - s / 2 + a),
                      t.push(u + l / 2 - s / 2 - a);
                  else {
                    'start' === n
                      ? (n = (1.05 / 3) * o)
                      : 'end' === n &&
                        (n = r[i].desktopSize - (1 + (1.05 / 3) * o));
                    var c = n * s;
                    t.push(u + c), t.push(u + c + a), t.push(u + c - a);
                  }
                })
              : (t.push(u + l / 2 - s / 2),
                t.push(u + l / 2 - s / 2 + a),
                t.push(u + l / 2 - s / 2 - a));
          },
          H =
            ((function (e, t, n, i, r) {
              var o = {};
              Object.keys(i).forEach(function (e) {
                o[e] = i[e];
              }),
                (o.enumerable = !!o.enumerable),
                (o.configurable = !!o.configurable),
                ('value' in o || o.initializer) && (o.writable = !0),
                (o = n
                  .slice()
                  .reverse()
                  .reduce(function (n, i) {
                    return i(e, t, n) || n;
                  }, o)),
                r &&
                  void 0 !== o.initializer &&
                  ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                  (o.initializer = void 0)),
                void 0 === o.initializer &&
                  (Object.defineProperty(e, t, o), (o = null));
            })(
              (F = (function () {
                function e() {
                  var t = this;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, e),
                    (this.options = {
                      ease: 0.1,
                      wheel: !0,
                      snapping: void 0 === T.a.disableSnap || !T.a.disableSnap,
                      scrollMultiplier: 0.05,
                    }),
                    (this.props = {
                      viewportChange: [
                        N,
                        function (e) {
                          return e.viewport.width * e.viewport.height;
                        },
                      ],
                      pageHeight: [
                        N,
                        function (e) {
                          return e.pageHeight;
                        },
                      ],
                      fullHeight: [
                        N,
                        function (e) {
                          return e.pageHeight + e.viewport.height;
                        },
                      ],
                      active: !0,
                      snapPositions: [
                        N,
                        function (e) {
                          return t.options.snapping
                            ? e.sectionPositions
                                .reduce(function (t, n, i) {
                                  return Y(e, t, n, i), t;
                                }, [])
                                .sort(function (e, t) {
                                  return e - t;
                                })
                            : [];
                        },
                      ],
                    }),
                    (this.target = 0),
                    (this.position = 0),
                    (this.firstViewportHeightHook = !0),
                    (this.wheelMultiplier = c.a.isWindows ? 2 : 1.4);
                }
                var t, n, i;
                return (
                  (t = e),
                  (n = [
                    {
                      key: 'setup',
                      value: function () {
                        var e = this;
                        if (
                          ((this.ui = Object(M.a)(document.body, [
                            'scrollProxy',
                          ])),
                          (U = this),
                          !this.options.wheel && this.options.snapping)
                        )
                          throw new Error(
                            "Can't do snapping when wheel is disabled",
                          );
                        if (
                          (this.options.snapping &&
                            ((this.velocity = 0),
                            (this.position = B('landing', 'b')),
                            (this.target = this.position),
                            (N.state.scroll.position = this.position),
                            (N.state.scroll.positionPrev = this.position)),
                          this.options.wheel)
                        )
                          window.addEventListener('keydown', function (t) {
                            if (!N.state.scrollBlocked) {
                              var n = Math.max(
                                40,
                                (80 / 930) * N.state.viewport.height,
                              );
                              38 === t.keyCode
                                ? (e.velocity -= n)
                                : 40 === t.keyCode && (e.velocity += n);
                            }
                          }),
                            document.body.addEventListener('wheel', function (t) {
                              if (!N.state.scrollBlocked) {
                                var n =
                                    ((E(t).scrollY * e.wheelMultiplier) / 900) *
                                    N.state.viewport.height,
                                  i = s.a.findIndex(
                                    e.props.snapPositions,
                                    function (t) {
                                      return t > e.position;
                                    },
                                  ),
                                  r = e.props.snapPositions[i],
                                  a = e.props.snapPositions[i - 1],
                                  u = Math.abs(r - a),
                                  l = N.state.viewport.height,
                                  c = Object(o.a)(u, 600, 1200, 1, 1.6, !0);
                                if (e.options.snapping) {
                                  var p = Object(o.a)(l, 500, 2e3, 0.9, 1.3, !0);
                                  e.velocity +=
                                    n * e.options.scrollMultiplier * p * c;
                                } else {
                                  var h = e.target + n;
                                  e.target = h;
                                }
                              }
                            });
                        else {
                          var t = c.a.isSafari
                            ? document.body
                            : document.documentElement;
                          window.addEventListener('scroll', function () {
                            var n = t.scrollTop;
                            e.target = n;
                          });
                        }
                        return this.store.resume(), this;
                      },
                    },
                    {
                      key: 'whileActive',
                      value: function () {
                        if (this.options.snapping) {
                          var e = this.position + 17 * this.velocity;
                          this.currentSnap = this.findSnapPosition(e);
                          var t = this.currentSnap[1] - this.position,
                            n = Object(A.a)(0.0025 * t, -10, 10);
                          (this.velocity *= 0.89),
                            (this.velocity += n),
                            (this.position += this.velocity),
                            Math.abs(this.currentSnap[1] - this.position) <
                              0.05 &&
                              ((this.position = this.currentSnap[1]),
                              (this.target = this.position)),
                            this.position >=
                              N.state.pageHeight -
                                0.5 * N.state.viewport.height &&
                              'down' === N.state.scrollDirection &&
                              ((this.position -= N.state.pageHeight),
                              null !== this.target &&
                                (this.target -= N.state.pageHeight)),
                            this.position < 0.5 * -N.state.viewport.height &&
                              'up' === N.state.scrollDirection &&
                              ((this.position += N.state.pageHeight),
                              null !== this.target &&
                                (this.target += N.state.pageHeight)),
                            (N.state.scroll.positionPrev =
                              N.state.scroll.position),
                            (N.state.scroll.position = this.position);
                        } else
                          this.position >=
                            N.state.pageHeight - N.state.viewport.height + 10 &&
                            'down' === N.state.scrollDirection &&
                            ((this.position -= N.state.pageHeight),
                            null !== this.target &&
                              (this.target -= N.state.pageHeight)),
                            this.position < 10 &&
                              'up' === N.state.scrollDirection &&
                              ((this.position += N.state.pageHeight),
                              null !== this.target &&
                                (this.target += N.state.pageHeight)),
                            (this.position +=
                              (this.target - this.position) * this.options.ease),
                            (N.state.scroll.positionPrev =
                              N.state.scroll.position),
                            (N.state.scroll.position = this.position);
                      },
                    },
                    {
                      key: 'setFullHeight',
                      value: function (e) {
                        this.options.wheel ||
                          (this.ui.scrollProxy.style.height = ''.concat(e, 'px'));
                      },
                    },
                    {
                      key: 'findSnapPosition',
                      value: function (e) {
                        return s.a.min(
                          this.props.snapPositions.map(function (e, t) {
                            return [t, e];
                          }),
                          function (t) {
                            return Math.abs(t[1] - e);
                          },
                        );
                      },
                    },
                    {
                      key: 'scrollTo',
                      value: function (e) {
                        var t =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : {},
                          n = t.delay,
                          i = void 0 === n ? 0 : n,
                          r = t.direct,
                          o = void 0 !== r && r;
                        if ((L.b.killTweensOf(this), o))
                          (N.state.scroll.autoScrolling = !1),
                            (N.state.scroll.positionPrev =
                              N.state.scroll.position),
                            (this.position = e),
                            (N.state.scroll.position = e);
                        else {
                          N.state.scroll.autoScrolling = !0;
                          var a = Object(A.a)(
                            Math.abs(e - this.position) / N.state.viewport.height,
                            2,
                            2,
                          );
                          L.b.to(this, a, {
                            delay: i,
                            position: e,
                            ease: 'easeInOutCubic',
                            onComplete: function () {
                              N.state.scroll.autoScrolling = !1;
                              var e = N.state,
                                t = e.currentSection,
                                n = e.currentSubSection;
                              m(
                                'Moved to next section',
                                'Scroll',
                                n.length > 1 ? ''.concat(t, '/').concat(n) : t,
                              );
                            },
                          });
                        }
                      },
                    },
                    {
                      key: 'scrollToNextSection',
                      value: function () {
                        var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {};
                        e.delay, e.direct;
                        console.warn('Scroll to next section not implemented!');
                      },
                    },
                    {
                      key: 'setViewportChange',
                      value: function () {
                        this.firstViewportHeightHook
                          ? (this.firstViewportHeightHook = !1)
                          : this.scrollTo(
                              B(
                                N.state.currentSection,
                                N.state.currentSubSection || void 0,
                              ),
                              { direct: !0 },
                            );
                      },
                    },
                  ]) && I(t.prototype, n),
                  i && I(t, i),
                  e
                );
              })()).prototype,
              'setup',
              [h.a],
              Object.getOwnPropertyDescriptor(F.prototype, 'setup'),
              F.prototype,
            ),
            F),
          X = n(368);
        function G(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function W(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        function Q(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        var q,
          Z,
          K = Object(u.a)(),
          $ = function () {
            return q;
          },
          J = function (e, t) {
            var n,
              i = Object(S.a)().sections,
              r = s.a.findWhere(i, { name: e });
            if (!r)
              throw new Error(
                "SwipeHandler.getSnapPosition() - Can't find section with name ".concat(
                  e,
                ),
              );
            if (
              !(n =
                void 0 === t
                  ? r.divisions[0]
                  : 'number' == typeof t
                  ? r.divisions[t]
                  : s.a.findWhere(r.divisions, { 0: t }))
            )
              throw new Error(
                "SwipeHandler.getSnapPosition() - Can't find sub section with name ".concat(
                  t,
                ),
              );
            var o = K.state.viewport.height,
              a = n[1];
            return 'middle' === a
              ? (r.offset + r.mobileSize / 2 - 0.5) * o
              : ('start' === a
                  ? (a = (1.05 / 3) * K.state.maxSlope)
                  : 'end' === a &&
                    (a = r.mobileSize - (1 + (1.05 / 3) * K.state.maxSlope)),
                (r.offset + a) * o);
          },
          ee = function (e, t, n, i) {
            var r = Object(S.a)().sections,
              o = n,
              a = e.sectionHeights[i],
              s = e.viewport.height;
            r[i].divisions
              ? r[i].divisions.forEach(function (n) {
                  var u = Q(n, 2)[1];
                  if ('middle' === u)
                    t.push(o + a / 2 - s / 2),
                      t.push(o + a / 2 - s / 2 + e.pageHeight),
                      t.push(o + a / 2 - s / 2 - e.pageHeight);
                  else {
                    'start' === u
                      ? (u = (1.05 / 3) * e.maxSlope)
                      : 'end' === u &&
                        (u = r[i].mobileSize - (1 + (1.05 / 3) * e.maxSlope));
                    var l = u * s;
                    t.push(o + l),
                      t.push(o + l + e.pageHeight),
                      t.push(o + l - e.pageHeight);
                  }
                })
              : (t.push(o + a / 2 - s / 2),
                t.push(o + a / 2 - s / 2 + e.pageHeight),
                t.push(o + a / 2 - s / 2 - e.pageHeight));
          },
          te =
            (W(
              (z = (function () {
                function e() {
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, e),
                    (this.props = {
                      active: !0,
                      snapPositions: [
                        K,
                        function (e) {
                          return e.sectionPositions
                            .reduce(function (t, n, i) {
                              return ee(e, t, n, i), t;
                            }, [])
                            .sort(function (e, t) {
                              return e - t;
                            });
                        },
                      ],
                    });
                }
                var t, n, i;
                return (
                  (t = e),
                  (n = [
                    {
                      key: 'setup',
                      value: function (e) {
                        (this.position = 0),
                          (this.target = 0),
                          (this.sliding = !1),
                          (this.f = 0),
                          (this.vel = 0),
                          (this.dragging = !1),
                          (this.k = 5.5),
                          (this.b = -0.04),
                          (this.mass = 0.0098),
                          (q = this),
                          e.el.addEventListener('touchstart', this.onTouchStart),
                          e.el.addEventListener('touchmove', this.onTouchMove),
                          e.el.addEventListener('touchend', this.onTouchEnd),
                          (this.position = J('landing', 'a')),
                          (this.target = this.position),
                          (K.state.scroll.position = this.position),
                          this.store.resume();
                      },
                    },
                    {
                      key: 'whileActive',
                      value: function (e) {
                        this.tickPosition(e),
                          this.position >=
                            K.state.pageHeight - K.state.viewport.height + 10 &&
                            'down' === K.state.scrollDirection &&
                            ((this.position -= K.state.pageHeight),
                            null !== this.target &&
                              (this.target -= K.state.pageHeight)),
                          this.position < 10 &&
                            'up' === K.state.scrollDirection &&
                            ((this.position += K.state.pageHeight),
                            null !== this.target &&
                              (this.target += K.state.pageHeight)),
                          (K.state.scroll.positionPrev = K.state.scroll.position),
                          (K.state.scroll.position = this.position);
                      },
                    },
                    {
                      key: 'tickPosition',
                      value: function (e) {
                        var t = Object(A.a)(e, 0, 30),
                          n = 0;
                        if (this.dragging) {
                          var i = (this.target - this.position) * t * 8;
                          Math.abs(i) < 1e4 &&
                            (this.vel =
                              i * (1 - 1 / 1.5) + this.vel * (1 - (1 - 1 / 1.5))),
                            (this.position = this.target);
                        } else {
                          var r = this.target - this.position;
                          n = this.k * r;
                          var o = this.b * this.vel;
                          (this.f = (n + o) / this.mass),
                            (this.f = Object(A.a)(this.f, -1e5, 1e5)),
                            (this.vel += (this.f * t) / 1e3),
                            (this.position += (this.vel * t) / 1e3);
                        }
                      },
                    },
                    {
                      key: 'onTouchStart',
                      value: function (e) {
                        if (!K.state.scrollBlocked) {
                          (this.b = -0.025), (this.k = 5.5);
                          var t = e.touches[0].screenY;
                          (this.dragging = !0),
                            (this.touchOrigin = t),
                            (this.positionOrigin = this.position),
                            (this.target = this.position),
                            (this.sliding = !1),
                            (this.vel = 0);
                        }
                      },
                    },
                    {
                      key: 'onTouchMove',
                      value: function (e) {
                        if (
                          !K.state.scrollBlocked &&
                          (e.preventDefault(), this.dragging)
                        ) {
                          var t = e.touches[0].screenY - this.touchOrigin;
                          this.target = this.positionOrigin - 1 * t;
                        }
                      },
                    },
                    {
                      key: 'onTouchEnd',
                      value: function (e) {
                        if (!K.state.scrollBlocked) {
                          e.preventDefault(),
                            (this.b = -0.35),
                            (this.k = 1.5),
                            (this.dragging = !1),
                            (this.target = null),
                            (this.sliding = !0);
                          var t = this.position + (0.2 * this.vel) / 0.8,
                            n = this.findSnapPosition(this.position)[0],
                            i = this.findSnapPosition(t)[0];
                          this.target = this.props.snapPositions[
                            (n + Object(A.a)(i - n, -1, 1)) %
                              this.props.snapPositions.length
                          ];
                        }
                      },
                    },
                    {
                      key: 'findSnapPosition',
                      value: function (e) {
                        return s.a.sortBy(
                          this.props.snapPositions.map(function (e, t) {
                            return [t, e];
                          }),
                          function (t) {
                            return Math.abs(t[1] - e);
                          },
                        )[0];
                      },
                    },
                    {
                      key: 'scrollTo',
                      value: function (e) {
                        var t =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : {},
                          n = t.delay,
                          i = void 0 === n ? 0 : n,
                          r = t.direct,
                          o = void 0 !== r && r,
                          a = t.forceForward;
                        void 0 !== a &&
                          a &&
                          e < this.target &&
                          (e = K.state.pageHeight + e);
                        var s = Object(A.a)(
                          Math.abs(e - this.target) / K.state.viewport.height,
                          2,
                          2,
                        );
                        (K.state.scroll.autoScrolling = !0),
                          L.b.killTweensOf(this),
                          L.b.to(this, o ? 0 : s, {
                            delay: o ? 0 : i,
                            position: e,
                            target: e,
                            ease: 'easeInOutCubic',
                            onComplete: function () {
                              K.state.scroll.autoScrolling = !1;
                              var e = K.state,
                                t = e.currentSection,
                                n = e.currentSubSection;
                              m(
                                'Moved to next section',
                                'Scroll',
                                n.length > 1 ? ''.concat(t, '/').concat(n) : t,
                              );
                            },
                          });
                      },
                    },
                    {
                      key: 'scrollToNextSection',
                      value: function () {
                        var e,
                          t,
                          n =
                            arguments.length > 0 && void 0 !== arguments[0]
                              ? arguments[0]
                              : {},
                          i = n.delay,
                          r = void 0 === i ? 0 : i,
                          o = n.direct,
                          a = void 0 !== o && o,
                          s = K.state.currentSection,
                          u = K.state.currentSubSection;
                        'landing' === s
                          ? ((e = 'science'), (t = 'dna'))
                          : 'science' === s
                          ? 'dna' === u
                            ? ((e = 'science'), (t = 'data'))
                            : 'data' === u
                            ? ((e = 'science'), (t = 'pot'))
                            : (e = 'stalk')
                          : 'stalk' === s
                          ? (e = 'field')
                          : 'field' === s
                          ? (e = 'result')
                          : 'kernel' === u
                          ? ((e = 'result'), (t = 'footer'))
                          : (e = 'landing');
                        var l = e;
                        t && (l = ''.concat(e, '/').concat(t)),
                          m('Moved to next section', 'Click', l),
                          this.scrollTo(J(e, t), {
                            delay: r,
                            direct: a,
                            forceForward: !0,
                          });
                      },
                    },
                  ]) && G(t.prototype, n),
                  i && G(t, i),
                  e
                );
              })()).prototype,
              'setup',
              [h.a],
              Object.getOwnPropertyDescriptor(z.prototype, 'setup'),
              z.prototype,
            ),
            W(
              z.prototype,
              'onTouchStart',
              [X.a],
              Object.getOwnPropertyDescriptor(z.prototype, 'onTouchStart'),
              z.prototype,
            ),
            W(
              z.prototype,
              'onTouchMove',
              [X.a],
              Object.getOwnPropertyDescriptor(z.prototype, 'onTouchMove'),
              z.prototype,
            ),
            W(
              z.prototype,
              'onTouchEnd',
              [X.a],
              Object.getOwnPropertyDescriptor(z.prototype, 'onTouchEnd'),
              z.prototype,
            ),
            z);
        function ne(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        var ie,
          re = Object(u.a)(),
          oe = 0,
          ae =
            ((function (e, t, n, i, r) {
              var o = {};
              Object.keys(i).forEach(function (e) {
                o[e] = i[e];
              }),
                (o.enumerable = !!o.enumerable),
                (o.configurable = !!o.configurable),
                ('value' in o || o.initializer) && (o.writable = !0),
                (o = n
                  .slice()
                  .reverse()
                  .reduce(function (n, i) {
                    return i(e, t, n) || n;
                  }, o)),
                r &&
                  void 0 !== o.initializer &&
                  ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                  (o.initializer = void 0)),
                void 0 === o.initializer &&
                  (Object.defineProperty(e, t, o), (o = null));
            })(
              (Z = (function () {
                function e() {
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, e),
                    (this.router = void 0),
                    (this.props = {
                      category: [
                        re,
                        function (e) {
                          return e.currentCategory;
                        },
                      ],
                      started: [
                        re,
                        function (e) {
                          return e.started;
                        },
                      ],
                      autoScrolling: [
                        re,
                        function (e) {
                          return e.scroll.autoScrolling;
                        },
                      ],
                    });
                }
                var t, n, i;
                return (
                  (t = e),
                  (n = [
                    {
                      key: 'setup',
                      value: function () {
                        var e = this,
                          t = window.location,
                          n = t.protocol,
                          i = t.host;
                        this.firstPageTrack = !0;
                        var r = {},
                          o = Object(S.a)().sections;
                        o.forEach(function (e) {
                          e.route &&
                            !r[e.route] &&
                            (r[e.route] = {
                              as: e.category,
                              uses: function () {
                                if (re.state.currentCategory !== e.category) {
                                  var t = '' === re.state.navigation.route;
                                  c.a.isMobile || c.a.isTablet
                                    ? $().scrollTo(J(e.name), { direct: t })
                                    : V().scrollTo(B(e.name), { direct: t });
                                }
                                (0 === oe && 'landing' === e.name) ||
                                  re.state.scroll.autoScrolling ||
                                  v(e.route),
                                  (re.state.navigation.routePrev =
                                    re.state.navigation.route),
                                  (re.state.navigation.route = e.route),
                                  (oe += 1);
                              },
                            });
                        });
                        var a = s.a.findWhere(o, { default: !0 });
                        return (
                          (this.router = new O.a(
                            ''.concat(n, '//').concat(i),
                            !0,
                          )),
                          this.router.notFound(function () {
                            e.router.navigate(e.router.generate(a.name));
                          }),
                          this.router.on(r),
                          this.store && this.store.resume(),
                          this
                        );
                      },
                    },
                    {
                      key: 'onStarted',
                      value: function () {
                        this.router.resolve();
                      },
                    },
                    {
                      key: 'setCategory',
                      value: function (e) {
                        var t = this.router.lastRouteResolved();
                        e &&
                          t &&
                          e !== t.name &&
                          this.router.navigate(
                            this.router.generate(e) + window.location.search,
                          );
                      },
                    },
                    {
                      key: 'offAutoScrolling',
                      value: function () {
                        this.firstPageTrack
                          ? (this.firstPageTrack = !1)
                          : v(re.state.navigation.route);
                      },
                    },
                  ]) && ne(t.prototype, n),
                  i && ne(t, i),
                  e
                );
              })()).prototype,
              'setup',
              [h.a],
              Object.getOwnPropertyDescriptor(Z.prototype, 'setup'),
              Z.prototype,
            ),
            Z),
          se = n(87),
          ue = n(31),
          le = n(67),
          ce = n(121),
          pe = n.n(ce),
          he = new pe.a(),
          fe = n(372),
          de = n(381),
          ve = n.n(de),
          me = n(382),
          ge = n.n(me),
          be = n(383),
          ye = n.n(be);
        n(384);
        function we(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        function xe(e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        }
        function Pe(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function _e(e, t, n) {
          return t && Pe(e.prototype, t), n && Pe(e, n), e;
        }
        function ke(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Oe(e) {
          return (Oe = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Se(e, t) {
          if ('function' != typeof t && null !== t)
            throw new TypeError(
              'Super expression must either be null or a function',
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t && Te(e, t);
        }
        function Te(e, t) {
          return (Te =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Ae = '------------------------------',
          Me = (function (e) {
            function t() {
              var e, n;
              xe(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = ke(
                  this,
                  (e = Oe(t)).call.apply(e, [this].concat(r)),
                )).el = void 0),
                (n.ui = void 0),
                (n.title = void 0),
                n
              );
            }
            return (
              Se(t, le['a']),
              _e(t, [
                {
                  key: 'onSetup',
                  value: function (e) {
                    return (
                      (this.el = e.parent.appendChild(ye()({}))),
                      (this.ui = Object(M.a)(this.el, ['title', 'dashes'])),
                      (this.title = e.title),
                      (this.ui.title.innerText = this.title),
                      (this.ui.dashes.innerText = Ae.substr(
                        0,
                        Ae.length - this.title.length,
                      )),
                      this
                    );
                  },
                },
              ]),
              t
            );
          })(),
          je =
            (we(
              (ie = (function (e) {
                function t() {
                  var e, n;
                  xe(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = ke(
                      this,
                      (e = Oe(t)).call.apply(e, [this].concat(r)),
                    )).el = void 0),
                    (n.ui = void 0),
                    (n.key = void 0),
                    (n.label = void 0),
                    (n.view = void 0),
                    n
                  );
                }
                return (
                  Se(t, le['a']),
                  _e(t, [
                    {
                      key: 'onSetup',
                      value: function (e) {
                        (this.el = e.parent.appendChild(ge()({}))),
                          (this.ui = Object(M.a)(this.el, ['label', 'value'])),
                          (this.passedStore = e.store),
                          (this.key = e.key),
                          (this.label = e.label),
                          (this.ui.label.innerText = this.label);
                        var t = this.passedStore.isComputed(this.key);
                        e.isBase && !t && this.makeInteractive(),
                          t && this.el.classList.add('computed');
                      },
                    },
                    {
                      key: 'setValue',
                      value: function (e) {
                        var t = e;
                        if (s.a.isBoolean(t))
                          this.ui.value.innerText = t ? 'âœ”ï¸Ž' : 'âœ˜';
                        else if (s.a.isNumber(t))
                          this.ui.value.innerText = t.toFixed(3);
                        else if (s.a.isString(t)) this.ui.value.innerText = t;
                        else if (s.a.isNumber(t.length) && s.a.isArray(t))
                          t.length > 0 && t.length <= 3
                            ? (this.ui.value.innerText = t
                                .reduce(function (e, t) {
                                  return ''
                                    .concat(e)
                                    .concat(
                                      s.a.isNumber(t)
                                        ? t.toFixed(2)
                                        : s.a.isString(t)
                                        ? t
                                        : typeof t,
                                      ', ',
                                    );
                                }, '[')
                                .replace(/..$/, ']'))
                            : (this.ui.value.innerText = 'array');
                        else {
                          var n = typeof t;
                          this.ui.value.innerText = 'object' !== n ? n : '';
                        }
                      },
                    },
                    {
                      key: 'makeInteractive',
                      value: function () {
                        (this.ui.value.style.cursor = 'ew-resize'),
                          this.ui.value.addEventListener(
                            'mousedown',
                            this.onMouseDown,
                          );
                      },
                    },
                    {
                      key: 'onMouseDown',
                      value: function (e) {
                        if (
                          (e.stopPropagation(), s.a.isBoolean(this.props.value))
                        )
                          this.passedStore.state[this.key] = !this.props.value;
                        else {
                          window.addEventListener('mousemove', this.onMouseMove),
                            window.addEventListener('mouseup', this.onMouseUp),
                            window.addEventListener('leave', this.onMouseUp),
                            (this.startVal = this.props.value);
                          var t = window.innerWidth;
                          this.startX = (e.pageX / t) * 2 - 1;
                        }
                      },
                    },
                    {
                      key: 'onMouseMove',
                      value: function (e) {
                        var t = window.innerWidth,
                          n = (e.pageX / t) * 2 - 1 - this.startX;
                        this.passedStore.state[this.key] = this.startVal + n;
                      },
                    },
                    {
                      key: 'onMouseUp',
                      value: function () {
                        window.removeEventListener('mousemove', this.onMouseMove),
                          window.removeEventListener('mouseup', this.onMouseUp),
                          window.removeEventListener('leave', this.onMouseUp);
                      },
                    },
                  ]),
                  t
                );
              })()).prototype,
              'onMouseDown',
              [fe.a],
              Object.getOwnPropertyDescriptor(ie.prototype, 'onMouseDown'),
              ie.prototype,
            ),
            we(
              ie.prototype,
              'onMouseMove',
              [fe.a],
              Object.getOwnPropertyDescriptor(ie.prototype, 'onMouseMove'),
              ie.prototype,
            ),
            we(
              ie.prototype,
              'onMouseUp',
              [fe.a],
              Object.getOwnPropertyDescriptor(ie.prototype, 'onMouseUp'),
              ie.prototype,
            ),
            ie),
          Fe = (function (e) {
            function t() {
              return xe(this, t), ke(this, Oe(t).apply(this, arguments));
            }
            return (
              Se(t, le['a']),
              _e(t, [
                {
                  key: 'onSetup',
                  value: function (e) {
                    var t = this;
                    return (
                      (this.el = e.parent.appendChild(ve()({}))),
                      new Me().setup({ parent: this.el, title: 'Store State' }),
                      Object.keys(e.store.state).forEach(function (n) {
                        new je().setup({
                          parent: t.el,
                          store: e.store,
                          key: n,
                          label: n,
                          isBase: !0,
                          props: {
                            value: [
                              e.store,
                              function (e) {
                                return e[n];
                              },
                            ],
                          },
                        });
                        var i = '0' === Object.keys(e.store.state[n])[0];
                        s.a.isObject(e.store.state[n]) &&
                          !i &&
                          Object.keys(e.store.state[n]).forEach(function (i) {
                            new je().setup({
                              parent: t.el,
                              store: e.store,
                              key: null,
                              label: 'Â  â†³  '.concat(i),
                              isBase: !0,
                              props: {
                                value: [
                                  e.store,
                                  function (e) {
                                    return e[n][i];
                                  },
                                ],
                              },
                            });
                          });
                      }),
                      window.addEventListener('keydown', function (e) {
                        if ('s' === e.key) {
                          var n = t.el.style;
                          n.display = 'none' === n.display ? 'block' : 'none';
                        }
                      }),
                      this
                    );
                  },
                },
              ]),
              t
            );
          })();
        function Re(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ce(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Ee(e) {
          return (Ee = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Le(e, t) {
          return (Le =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Ie = Object(u.a)(),
          De = (function (e) {
            function t() {
              var e, n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = Ce(
                  this,
                  (e = Ee(t)).call.apply(e, [this].concat(r)),
                )).props = {
                  width: 160,
                  height: 0,
                  pageHeight: [
                    Ie,
                    function (e) {
                      return e.pageHeight;
                    },
                  ],
                  vh: [
                    Ie,
                    function (e) {
                      return e.viewport.height;
                    },
                  ],
                  active: !0,
                }),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Le(e, t);
              })(t, le['a']),
              (n = t),
              (i = [
                {
                  key: 'onSetup',
                  value: function (e) {
                    var t = e.parent;
                    (this.canvas = document.createElement('canvas')),
                      (this.canvas.className = 'scroll-devtool'),
                      Object.assign(this.canvas.style, {
                        position: 'fixed',
                        right: '10px',
                        top: '10px',
                        'pointer-events': 'none',
                        'transform-origin': 'top right',
                        'z-index': 99,
                      }),
                      (this.ctx = this.canvas.getContext('2d')),
                      t.appendChild(this.canvas);
                  },
                },
                {
                  key: 'setPageHeight',
                  value: function () {
                    this.setSize();
                  },
                },
                {
                  key: 'setWidth',
                  value: function () {
                    this.setSize();
                  },
                },
                {
                  key: 'setVh',
                  value: function () {
                    this.setSize();
                  },
                },
                {
                  key: 'setSize',
                  value: function () {
                    var e = Ie.state.viewport.width / Ie.state.pageHeight;
                    (this.canvas.width = this.props.width),
                      (this.props.height = this.props.width / e),
                      (this.canvas.height = this.props.height),
                      (this.canvas.style.transform = 'scale('.concat(
                        (0.75 * Ie.state.viewport.height) / this.props.height,
                        ')',
                      ));
                  },
                },
                {
                  key: 'whileActive',
                  value: function () {
                    var e = this,
                      t = this.props.width / Ie.state.viewport.width,
                      n = this.props.width,
                      i = Ie.state.viewport.height * t;
                    (this.ctx.fillStyle = '#222'),
                      this.ctx.fillRect(
                        0,
                        0,
                        this.props.width,
                        this.props.height,
                      ),
                      Ie.state.sectionPositions.forEach(function (i, r) {
                        var o = Math.round(i * t),
                          a = Math.round((i + Ie.state.sectionHeights[r]) * t),
                          s =
                            Ie.state.sectionOuterProgresses[r] > 0 &&
                            Ie.state.sectionOuterProgresses[r] < 1;
                        0 !== r &&
                          ((e.ctx.fillStyle = '#444'),
                          e.ctx.fillRect(0, o, n, 1));
                        var u = Ie.state.sectionVisibilityList[r]
                          ? [255, 0, 0]
                          : [255, 255, 255];
                        (e.ctx.font = 'bold 20px Helvetica'),
                          (e.ctx.textAlign = 'left'),
                          (e.ctx.textAlign = 'right'),
                          (e.ctx.fillStyle = 'rgba('
                            .concat(u.join(','), ', ')
                            .concat(s ? 1 : 0.5, ' )')),
                          Math.abs(Ie.state.sectionOuterProgresses[r]) !==
                            1 / 0 &&
                            e.ctx.fillText(
                              Ie.state.sectionOuterProgresses[r].toFixed(2),
                              n - 15,
                              a - 30,
                            );
                      }),
                      (this.ctx.strokeStyle = 'red'),
                      (this.ctx.lineWidth = 4),
                      [0, Ie.state.pageHeight].forEach(function (r) {
                        var o = r;
                        (o *= t),
                          e.ctx.strokeRect(
                            1,
                            Ie.state.scroll.position * t - o,
                            n - 2,
                            i,
                          );
                      });
                  },
                },
              ]) && Re(n.prototype, i),
              r && Re(n, r),
              t
            );
          })(),
          Ue = n(65),
          ze = n(386),
          Ne = n.n(ze);
        n(387);
        function Be(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Ve(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ye(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function He(e) {
          return (He = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Xe(e, t) {
          return (Xe =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Ge = Object(u.a)(),
          We = (function (e) {
            function t() {
              var e, n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = Ye(
                  this,
                  (e = He(t)).call.apply(e, [this].concat(r)),
                )).el = void 0),
                (n.props = { visible: !1 }),
                (n.anim = { showDelay: 0 }),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Xe(e, t);
              })(t, le['a']),
              (n = t),
              (i = [
                {
                  key: 'onSetup',
                  value: (function () {
                    var e,
                      t =
                        ((e = regeneratorRuntime.mark(function e(t) {
                          var n;
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    (this.el = t.parent.appendChild(Ne()())),
                                      (n =
                                        c.a.isMobile || c.a.isTablet
                                          ? 'touchend'
                                          : 'click'),
                                      this.el.addEventListener(n, function (e) {
                                        e.preventDefault(),
                                          (Ge.state.navigation.hotspotDna = !1),
                                          (Ge.state.navigation.hotspotStalk = !1),
                                          (Ge.state.navigation.hotspotKernel = !1),
                                          c.a.isMobile || c.a.isTablet
                                            ? $().scrollTo(J('landing', 'a'))
                                            : V().scrollTo(B('landing', 'b'));
                                      }),
                                      this.setInitState();
                                  case 4:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        })),
                        function () {
                          var t = this,
                            n = arguments;
                          return new Promise(function (i, r) {
                            var o = e.apply(t, n);
                            function a(e) {
                              Be(o, i, r, a, s, 'next', e);
                            }
                            function s(e) {
                              Be(o, i, r, a, s, 'throw', e);
                            }
                            a(void 0);
                          });
                        });
                    return function (e) {
                      return t.apply(this, arguments);
                    };
                  })(),
                },
                {
                  key: 'setInitState',
                  value: function () {
                    this.el.style.display = 'none';
                  },
                },
                {
                  key: 'onVisible',
                  value: function () {
                    this.el.style.display = 'block';
                    var e = this.anim.showDelay;
                    L.b.killTweensOf(this.el),
                      L.b.set(this.el, { alpha: 0, y: 0 }),
                      L.b.to(this.el, 2, {
                        alpha: 1,
                        y: 0,
                        ease: 'easeOutQuart',
                        delay: e,
                      });
                  },
                },
                {
                  key: 'offVisible',
                  value: function () {
                    var e = this;
                    L.b.killTweensOf(this.el),
                      L.b.to(this.el, 0.3, {
                        alpha: 0,
                        y: 0,
                        ease: 'easeInSine',
                        onComplete: function () {
                          e.el.style.display = 'none';
                        },
                      });
                  },
                },
              ]) && Ve(n.prototype, i),
              r && Ve(n, r),
              t
            );
          })(),
          Qe = function (e) {
            void 0 === e.prototype.verboseMemoryLeak ||
            void 0 === e.prototype._maxListeners
              ? Object.assign(e.prototype, pe.a.prototype)
              : console.warn(
                  'Class',
                  e.name,
                  'is already decorated with EventEmitter',
                );
          };
        function qe(e, t, n) {
          return (e - t) * (e - n) <= 0;
        }
        var Ze = Object(u.a)(),
          Ke = function (e) {
            var t = Ze.state.viewport,
              n = t.width,
              i = t.height,
              r = Ze.state.pointer.position,
              a = Object(o.a)(r[0], 0, n, -n / 2, n / 2, !0),
              s = Object(o.a)(r[1], 0, i, i / 2, -i / 2, !0);
            return qe(a, e.min.x, e.max.x) && qe(s, e.min.y, e.max.y);
          },
          $e = n(367),
          Je =
            '#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n}',
          et = new $e.PlaneBufferGeometry(1, 1, 1, 1),
          tt = new $e.MeshBasicMaterial({ color: 'blue', transparent: !0 });
        var nt,
          it = n(163),
          rt = {
            props: { pX: 0, pY: 0, pZ: 0, s: 1, rX: 0, rY: 0, rZ: 0, v: !0 },
            onBeforeSetup() {
              this.object = new $e.Object3D();
            },
            onAfterSetup() {
              this.options.name && (this.object.name = this.options.name);
            },
            setPX() {
              this.setPosition();
            },
            setPY() {
              this.setPosition();
            },
            setPZ() {
              this.setPosition();
            },
            setPosition() {
              this.object.position.set(
                this.props.pX,
                this.props.pY,
                this.props.pZ,
              );
            },
            setS(e) {
              var t = Math.max(0.01, e);
              this.object.scale.setScalar(t);
            },
            setRX() {
              this.setR();
            },
            setRY() {
              this.setR();
            },
            setRZ() {
              this.setR();
            },
            setR() {
              this.object.rotation.set(
                this.props.rX,
                this.props.rY,
                this.props.rZ,
              );
            },
            setV() {
              this.object.visible = this.props.v;
            },
          };
        function ot(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function at(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function st(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function ut(e) {
          return (ut = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function lt(e, t) {
          return (lt =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var ct,
          pt,
          ht = Object(u.a)(),
          ft =
            Qe(
              (nt =
                Object(it.a)(rt)(
                  (nt = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = st(
                          this,
                          (e = ut(t)).call.apply(e, [this].concat(r)),
                        )).options = {}),
                        (n.props = {
                          visible: !1,
                          render: !1,
                          rotation: 0,
                          progress: 0,
                          progressStart: 0,
                          progressEnd: 1,
                          renderActive: !1,
                          pointerClick: [
                            ht,
                            function (e) {
                              return e.pointer.click;
                            },
                          ],
                          pointerPosition: [
                            ht,
                            function (e) {
                              return e.pointer.position;
                            },
                          ],
                          rollover: !1,
                          cursorDefault: 'default',
                          viewport: [
                            ht,
                            function (e) {
                              return s.a.pick(
                                e.viewport,
                                'width',
                                'height',
                                'scale',
                              );
                            },
                          ],
                          size: function (e) {
                            return (c.a.isMobile ? 100 : 60) * e.viewport.scale;
                          },
                        }),
                        (n.anim = { showDelay: 0, hideDelay: 0 }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && lt(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e,
                              t =
                                ((e = regeneratorRuntime.mark(function e() {
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            (this.tweens = {
                                              rotation: 0,
                                              inProgress: 0,
                                              startProgress: 0,
                                              endProgress: 0,
                                            }),
                                              (this.scalePrVel = 0),
                                              (this.scalePr = 0),
                                              (this.time = 0),
                                              (this.angle = 0),
                                              (this.progress = 0),
                                              (this.bbox = new $e.Box3()),
                                              this.setupRings();
                                          case 8:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                })),
                                function () {
                                  var t = this,
                                    n = arguments;
                                  return new Promise(function (i, r) {
                                    var o = e.apply(t, n);
                                    function a(e) {
                                      ot(o, i, r, a, s, 'next', e);
                                    }
                                    function s(e) {
                                      ot(o, i, r, a, s, 'throw', e);
                                    }
                                    a(void 0);
                                  });
                                });
                            return function () {
                              return t.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupRings',
                          value: function () {
                            var e = new $e.ShaderMaterial({
                              uniforms: {
                                uRotation: { value: 0 },
                                uProgress: { value: 0 },
                                uScaleUpPr: { value: 0 },
                                uProgressEdges: { value: new $e.Vector2(0, 1) },
                                uStrokeWidth: {
                                  value: 1.5 * ht.state.viewport.pixelRatio,
                                },
                              },
                              extensions: { derivatives: !0 },
                              transparent: !0,
                              vertexShader: Je,
                              fragmentShader:
                                '#define GLSLIFY 1\n#define PI 3.141592653589793\n\nuniform float uProgress;\nuniform float uScaleUpPr;\nuniform float uStrokeWidth;\nuniform float uRotation;\nuniform vec2 uProgressEdges;\n\nvarying vec2 vUv;\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat toRadians(float deg) {\n\treturn deg * (3.141592653589793 / 180.0);\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s) {\n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(uv - 0.5) * scale;\n    \n    // Calculate edge antialias feather\n    float distance = length(center);\n    float edgeFeather = fwidth(distance) * feather;\n\n    // Calculate fixed stroke width regardless of scale\n    float dx = dFdx(uv.x);\n    strokeWidth = dx * strokeWidth;\n  \n    float innerRadius = radius - strokeWidth;\n    float outerRadius = radius;\n    float value = smoothstep(innerRadius - edgeFeather, innerRadius, distance) * \n                  smoothstep(outerRadius, outerRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s, float alignStroke) {\n    // alignStroke values: 0 = innner, 0.5 = center,  1 = outer\n    \n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeWidth = dDistance * feather;\n    float innerEdge = mix(1.0, 0.0, alignStroke);\n    float outerEdge = mix(0.0, 1.0, alignStroke);\n\n    // Apply stroke width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float dxStrokeWidth = dx * strokeWidth;\n    float innerRadius = radius - dxStrokeWidth * innerEdge;\n    float outerRadius = radius + dxStrokeWidth * outerEdge;\n    float value = smoothstep(innerRadius - edgeWidth * .5, innerRadius + edgeWidth * .5, distance) * (1. - smoothstep(outerRadius - edgeWidth * .5, outerRadius + edgeWidth * .5, distance));\n\n    return value;\n}\n\nfloat createGradient(vec2 point) {\n    float angleFromPoint = atan(point.x, point.y);\n    return (angleFromPoint + PI) / (PI * 2.0);\n}\n\nfloat createCross() {\n    vec2 crossUv = rotateUV(vUv, toRadians(uRotation + 45.0));\n    \n    float dist = length(crossUv.x - 0.5) + length(crossUv.y - 0.5);\n    float clampAlpha = step(dist, 0.1 * uProgress);\n\n    float dDistance = fwidth(dist);\n    float edgeFeather = dDistance * 0.01;\n    \n    // // Apply stroke width\n    float dx = dFdx(vUv.x);\n\n    float strokeWidth = dx * uStrokeWidth;\n    float edge1 = 0.5 - strokeWidth * 0.5;\n    float edge2 = 0.5 + strokeWidth * 0.5;\n\n    float horiz = smoothstep(edge1 - edgeFeather * 0.5, edge1 + edgeFeather*0.5, crossUv.x) * smoothstep(edge2 + edgeFeather*0.5, edge2 - edgeFeather * 0.5, crossUv.x);\n    float vert = smoothstep(edge1 - edgeFeather * 0.5, edge1 + edgeFeather*0.5, crossUv.y) * smoothstep(edge2 + edgeFeather*0.5, edge2 - edgeFeather * 0.5, crossUv.y);\n    float cross = (horiz + vert) * clampAlpha;\n\n    return cross;\n}\n\nfloat createProgressRing() {\n    vec2 uv = rotateUV(vUv, toRadians(uRotation));\n\n    float scale = 0.5 * mix(1.0, 1.2, uScaleUpPr);\n    float ring = createRing(vUv, uStrokeWidth, scale);\n    float gradient = createGradient(uv - 0.5);\n\n    float start = step(uProgressEdges.x * uProgress, gradient);\n    float end = 1.0 - step(uProgressEdges.y * uProgress, gradient);\n    float progressRing = start * end * ring;\n\n    return progressRing;\n}\n\nvoid main() {\n    vec2 uv = vUv;\n\n    float ring = createProgressRing();\n    float cross = createCross();\n\n    float alpha = ring + cross;\n    \n    gl_FragColor = vec4(vec3(1.0), alpha);\n}\n\n',
                            });
                            (this.ring = new $e.Mesh(et, e)),
                              this.ring.layers.set(this.options.layer),
                              this.object.add(this.ring),
                              (this.object.name = 'Hotspot');
                          },
                        },
                        {
                          key: 'onVisible',
                          value: function () {
                            (this.props.render = !0), (this.props.v = !0);
                            var e = this.ring.material.uniforms.uProgress;
                            L.b.killTweensOf(e),
                              L.b.to(e, 2, {
                                value: 1,
                                delay: this.anim.showDelay,
                                ease: 'easeInOutQuart',
                              }),
                              L.b.killTweensOf(this.tweens),
                              L.b.to(this.tweens, 2, {
                                rotation: 180,
                                delay: this.anim.showDelay,
                                ease: 'easeInOutQuart',
                              });
                          },
                        },
                        {
                          key: 'offVisible',
                          value: function () {
                            var e = this,
                              t = this.ring.material.uniforms.uProgress;
                            (this.props.rollover = !1),
                              L.b.killTweensOf(t),
                              L.b.to(t, 2, {
                                value: 0,
                                delay: this.anim.hideDelay,
                                ease: 'easeInOutQuart',
                                onComplete: function () {
                                  (e.props.render = !1), (e.props.v = !1);
                                },
                              }),
                              L.b.killTweensOf(this.tweens),
                              L.b.to(this.tweens, 2, {
                                rotation: 360,
                                delay: this.anim.hideDelay,
                                ease: 'easeInOutQuart',
                              });
                          },
                        },
                        {
                          key: 'setPointerClick',
                          value: function () {
                            this.props.visible &&
                              (this.bbox.setFromObject(this.object),
                              Ke(this.bbox) && this.emit('click'));
                          },
                        },
                        {
                          key: 'setPointerPosition',
                          value: function () {
                            if (this.props.visible) {
                              var e = Ke(this.bbox);
                              this.props.rollover = !!e;
                            }
                          },
                        },
                        {
                          key: 'onRollover',
                          value: function () {
                            (ht.state.cursor = 'pointer'),
                              (this.scalePrVel = 0.2);
                          },
                        },
                        {
                          key: 'offRollover',
                          value: function () {
                            ht.state.cursor = this.props.cursorDefault;
                          },
                        },
                        {
                          key: 'setSize',
                          value: function (e) {
                            this.ring.scale.setScalar(2 * e),
                              this.bbox.setFromObject(this.object);
                          },
                        },
                        {
                          key: 'whileRender',
                          value: function () {
                            (this.scalePrVel =
                              0.008 * (1 - this.scalePr) +
                              0.86 * this.scalePrVel),
                              (this.scalePr += this.scalePrVel),
                              (this.ring.material.uniforms.uScaleUpPr.value = this.scalePr),
                              (this.ring.material.uniforms.uRotation.value = this.tweens.rotation);
                          },
                        },
                      ]) && at(n.prototype, i),
                      r && at(n, r),
                      t
                    );
                  })()),
                ) || nt),
            ) || nt;
        function dt() {
          return 'ontouchstart' in window;
        }
        function vt(e, t, n, i) {
          var r = n - e,
            o = i - t;
          return Math.sqrt(r * r + o * o);
        }
        function mt(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function gt(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var bt,
          yt =
            Qe(
              (gt(
                (pt = (function () {
                  function e(t) {
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, e),
                      (this.el = t.el),
                      (this.startTime = 0),
                      (this.startPos = [0, 0]),
                      (this.pos = [0, 0]),
                      (this.passive = void 0 === t.passive || t.passive),
                      this.addEvents();
                  }
                  var t, n, i;
                  return (
                    (t = e),
                    (n = [
                      {
                        key: 'addEvents',
                        value: function () {
                          dt()
                            ? (this.el.addEventListener(
                                'touchstart',
                                this.onTouchDown,
                                { passive: this.passive },
                              ),
                              this.el.addEventListener(
                                'touchmove',
                                this.onTouchMove,
                                { passive: this.passive },
                              ),
                              document.addEventListener(
                                'touchend',
                                this.onTouchUp,
                                { passive: this.passive },
                              ))
                            : (this.el.addEventListener(
                                'mousedown',
                                this.onMouseDown,
                                { passive: this.passive },
                              ),
                              this.el.addEventListener(
                                'mousemove',
                                this.onMouseMove,
                                { passive: this.passive },
                              ),
                              document.addEventListener(
                                'mouseup',
                                this.onMouseUp,
                                { passive: this.passive },
                              ));
                        },
                      },
                      {
                        key: 'removeEvents',
                        value: function () {
                          dt()
                            ? (this.el.removeEventListener(
                                'touchstart',
                                this.onTouchDown,
                              ),
                              this.el.removeEventListener(
                                'touchmove',
                                this.onTouchMove,
                              ),
                              document.removeEventListener(
                                'touchend',
                                this.onTouchUp,
                              ))
                            : (this.el.removeEventListener(
                                'mousedown',
                                this.onMouseDown,
                              ),
                              this.el.removeEventListener(
                                'mousemove',
                                this.onMouseMove,
                              ),
                              document.removeEventListener(
                                'mouseup',
                                this.onMouseUp,
                              ));
                        },
                      },
                      {
                        key: 'down',
                        value: function (e, t, n) {
                          this.emit('down', e, t, n),
                            (this.isDown = !0),
                            (this.startPos[0] = this.pos[0] = e),
                            (this.startPos[1] = this.pos[1] = t),
                            (this.startTime = performance.now());
                        },
                      },
                      {
                        key: 'move',
                        value: function (e, t, n) {
                          (this.pos[0] = e),
                            (this.pos[1] = t),
                            this.emit('move', e, t, n);
                        },
                      },
                      {
                        key: 'up',
                        value: function (e) {
                          this.emit('up', e);
                          var t = performance.now() - this.startTime,
                            n = vt(
                              this.pos[0],
                              this.pos[1],
                              this.startPos[0],
                              this.startPos[1],
                            );
                          this.isDown &&
                            ((t < 100 && n < 5) || n < 5) &&
                            this.click(e),
                            (this.isDown = !1);
                        },
                      },
                      {
                        key: 'click',
                        value: function (e) {
                          this.emit('click', e);
                        },
                      },
                      {
                        key: 'destroy',
                        value: function () {
                          this.removeEvents();
                        },
                      },
                      {
                        key: 'onMouseDown',
                        value: function (e) {
                          this.down(e.clientX, e.clientY, e);
                        },
                      },
                      {
                        key: 'onMouseMove',
                        value: function (e) {
                          this.move(e.clientX, e.clientY, e);
                        },
                      },
                      {
                        key: 'onMouseUp',
                        value: function (e) {
                          this.up(e);
                        },
                      },
                      {
                        key: 'onTouchDown',
                        value: function (e) {
                          this.down(
                            e.touches[0].clientX,
                            e.touches[0].clientY,
                            e,
                          );
                        },
                      },
                      {
                        key: 'onTouchMove',
                        value: function (e) {
                          this.move(
                            e.touches[0].clientX,
                            e.touches[0].clientY,
                            e,
                          );
                        },
                      },
                      {
                        key: 'onTouchUp',
                        value: function (e) {
                          this.up(e);
                        },
                      },
                    ]) && mt(t.prototype, n),
                    i && mt(t, i),
                    e
                  );
                })()).prototype,
                'onMouseDown',
                [X.a],
                Object.getOwnPropertyDescriptor(pt.prototype, 'onMouseDown'),
                pt.prototype,
              ),
              gt(
                pt.prototype,
                'onMouseMove',
                [X.a],
                Object.getOwnPropertyDescriptor(pt.prototype, 'onMouseMove'),
                pt.prototype,
              ),
              gt(
                pt.prototype,
                'onMouseUp',
                [X.a],
                Object.getOwnPropertyDescriptor(pt.prototype, 'onMouseUp'),
                pt.prototype,
              ),
              gt(
                pt.prototype,
                'onTouchDown',
                [X.a],
                Object.getOwnPropertyDescriptor(pt.prototype, 'onTouchDown'),
                pt.prototype,
              ),
              gt(
                pt.prototype,
                'onTouchMove',
                [X.a],
                Object.getOwnPropertyDescriptor(pt.prototype, 'onTouchMove'),
                pt.prototype,
              ),
              gt(
                pt.prototype,
                'onTouchUp',
                [X.a],
                Object.getOwnPropertyDescriptor(pt.prototype, 'onTouchUp'),
                pt.prototype,
              ),
              (ct = pt)),
            ) || ct,
          wt = n(389),
          xt = n.n(wt);
        n(390);
        function Pt(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function _t(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function kt(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Ot(e) {
          return (Ot = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function St(e, t) {
          return (St =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Tt = Object(u.a)(),
          At =
            Object(it.a)(rt)(
              (bt = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = kt(
                      this,
                      (e = Ot(t)).call.apply(e, [this].concat(r)),
                    )).el = void 0),
                    (n.props = {
                      spacing: [
                        Tt,
                        function (e) {
                          return e.viewport.scale * (c.a.isMobile ? 18 : 6);
                        },
                      ],
                      width: [
                        Tt,
                        function (e) {
                          return e.viewport.scale * (c.a.isMobile ? 75 : 32);
                        },
                      ],
                      visible: [
                        Tt,
                        function (e) {
                          return e.started;
                        },
                      ],
                      open: [
                        Tt,
                        function (e) {
                          return e.navigation.menu;
                        },
                      ],
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && St(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e(t) {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (this.el = t.parent.appendChild(xt()())),
                                          (this.ui = {
                                            lines: this.el.querySelectorAll(
                                              '[data-ui="line"]',
                                            ),
                                          }),
                                          this.setInitState(),
                                          this.addEvents();
                                      case 4:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  Pt(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  Pt(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function (e) {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setInitState',
                      value: function () {
                        L.b.set(this.ui.lines, {
                          x: 1.1 * this.props.width,
                          force3D: !0,
                        });
                      },
                    },
                    {
                      key: 'setSpacing',
                      value: function (e) {
                        L.b.set(this.ui.lines[0], { y: -e }),
                          L.b.set(this.ui.lines[2], { y: e });
                      },
                    },
                    {
                      key: 'addEvents',
                      value: function () {
                        (this.pointerEvents = new yt({ el: this.el })),
                          this.pointerEvents.on('click', t.onClick);
                      },
                    },
                    {
                      key: 'onVisible',
                      value: function () {
                        (this.el.style.pointerEvents = 'auto'),
                          this.showLines({ delay: 3.8 });
                      },
                    },
                    {
                      key: 'offVisible',
                      value: function () {
                        (this.el.style.pointerEvents = 'none'), this.hideLines();
                      },
                    },
                    {
                      key: 'onOpen',
                      value: function () {
                        (this.el.style.pointerEvents = 'none'), this.hideLines();
                      },
                    },
                    {
                      key: 'offOpen',
                      value: function () {
                        this.props.visible &&
                          ((this.el.style.pointerEvents = 'auto'),
                          this.showLines({ delay: 0.5 }));
                      },
                    },
                    {
                      key: 'showLines',
                      value: function () {
                        var e = (arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {}
                          ).delay,
                          t = void 0 === e ? 0 : e;
                        L.b.killTweensOf(this.ui.lines),
                          L.b.set(this.ui.lines, {
                            x: 1.1 * -this.props.width,
                            transformOrigin: 'left center',
                          }),
                          L.b.staggerTo(
                            this.ui.lines,
                            2,
                            { x: 0, ease: 'easeOutExpo', delay: t },
                            0.05,
                          );
                      },
                    },
                    {
                      key: 'hideLines',
                      value: function () {
                        var e = (arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {}
                          ).delay,
                          t = void 0 === e ? 0 : e;
                        L.b.killTweensOf(this.ui.lines),
                          L.b.set(this.ui.lines, {
                            transformOrigin: 'right center',
                          }),
                          L.b.staggerTo(
                            this.ui.lines,
                            1,
                            {
                              x: 1.1 * this.props.width,
                              ease: 'easeOutExpo',
                              delay: t,
                            },
                            0.1,
                          );
                      },
                    },
                  ]),
                  (r = [
                    {
                      key: 'onClick',
                      value: function (e) {
                        e.stopPropagation(),
                          (Tt.state.navigation.menu = !0),
                          (Tt.state.navigation.contact = !1),
                          (Tt.state.navigation.signup = !1),
                          (Tt.state.navigation.legal = !1);
                      },
                    },
                  ]),
                  i && _t(n.prototype, i),
                  r && _t(n, r),
                  t
                );
              })()),
            ) || bt;
        function Mt() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return t[0].raw.reduce(function (e, n, i) {
            return e + n + (t[i + 1] || '');
          }, '');
        }
        function jt(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              i = Object.keys(n);
            'function' == typeof Object.getOwnPropertySymbols &&
              (i = i.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                }),
              )),
              i.forEach(function (t) {
                Ft(e, t, n[t]);
              });
          }
          return e;
        }
        function Ft(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function Rt() {
          var e = Et([
            '\n    precision highp float;\n    uniform sampler2D map;\n    uniform vec2 resolution;\n    varying vec2 vUv;\n\n    void main() {\n        vec2 uv = vUv;\n        gl_FragColor = texture2D(map, uv);\n        // gl_FragColor.r = 1.0;\n    }\n',
          ]);
          return (
            (Rt = function () {
              return e;
            }),
            e
          );
        }
        function Ct() {
          var e = Et([
            '\n    precision highp float;\n    attribute vec2 position;\n    attribute vec2 uv;\n    varying vec2 vUv;\n\n    void main() {\n        gl_Position = vec4(position, 1.0, 1.0);\n        vUv = uv;\n    }\n',
          ]);
          return (
            (Ct = function () {
              return e;
            }),
            e
          );
        }
        function Et(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        function Lt(e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        }
        function It(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Dt(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? Ut(e)
            : t;
        }
        function Ut(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function zt(e) {
          return (zt = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Nt(e, t) {
          if ('function' != typeof t && null !== t)
            throw new TypeError(
              'Super expression must either be null or a function',
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t && Bt(e, t);
        }
        function Bt(e, t) {
          return (Bt =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Vt,
          Yt = Object(u.a)(),
          Ht = new $e.BufferGeometry(),
          Xt = new Float32Array([-1, -1, 3, -1, -1, 3]);
        Ht.addAttribute('position', new $e.BufferAttribute(Xt, 2));
        var Gt = new Float32Array([0, 0, 2, 0, 0, 2]);
        Ht.addAttribute('uv', new $e.BufferAttribute(Gt, 2));
        var Wt = (function (e) {
            function t() {
              var e, n;
              Lt(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = Dt(
                  this,
                  (e = zt(t)).call.apply(e, [this].concat(r)),
                )).options = { scale: 1 }),
                (n.props = {
                  viewport: [
                    Yt,
                    function (e) {
                      var t = e.viewport;
                      return {
                        width: t.width,
                        height: t.height,
                        pixelRatio: t.pixelRatio,
                      };
                    },
                  ],
                }),
                n
              );
            }
            var n, i, r;
            return (
              Nt(t, le['a']),
              (n = t),
              (i = [
                {
                  key: 'onSetup',
                  value: function (e) {
                    var t = e.fragmentShader,
                      n = e.uniforms;
                    (this.target = new $e.WebGLRenderTarget(1, 1, {
                      format: $e.RGBFormat,
                      stencilBuffer: !1,
                      depthBuffer: !1,
                    })),
                      (this.material = new Vt({
                        fragmentShader: t,
                        map: this.target.texture,
                        uniforms: n,
                      })),
                      (this.mesh = new $e.Mesh(Ht, this.material)),
                      (this.mesh.frustumCulled = !1),
                      (this.scene = new $e.Scene()),
                      this.scene.add(this.mesh),
                      this.options.size &&
                        (this.target.setSize(
                          this.options.size,
                          this.options.size,
                        ),
                        this.material.resolution.set(
                          this.options.size,
                          this.options.size,
                        ));
                  },
                },
                {
                  key: 'setViewport',
                  value: function (e) {
                    var t = e.width,
                      n = e.height,
                      i = e.pixelRatio;
                    this.target.setSize(
                      t * this.options.scale * i,
                      n * this.options.scale * i,
                    ),
                      this.material.resolution.set(
                        t * this.options.scale * i,
                        n * this.options.scale * i,
                      );
                  },
                },
                {
                  key: 'tick',
                  value: function () {
                    this.material.time && (this.material.time += 0.2);
                  },
                },
              ]) && It(n.prototype, i),
              r && It(n, r),
              t
            );
          })(),
          Qt = Mt(Ct()),
          qt = Mt(Rt());
        function Zt() {
          var e = (function (e, t) {
            t || (t = e.slice(0));
            return Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            );
          })([
            '\n    // float split = step(1.0 - edge, gl_FragCoord.y / resolution.y);\n\n    // float x = -1.0 + (gl_FragCoord.x / resolution.x) * 2.0;\n    // float y = gl_FragCoord.y / resolution.y;\n    // float edgeSlope = (1.0 - edge) + x * slope;\n    // float split = smoothstep(edgeSlope, edgeSlope + 0.001, y);\n\n    // color *= abs(1.0 - top - split);\n\n    // float y = gl_FragCoord.y / resolution.y;\n    // float value = step(edgeTop, y) - step(edgeBottom, y);\n    // color *= vec4(value);\n\n    float feather = 0.001;\n    float x = -1.0 + (gl_FragCoord.x / resolution.x) * 2.0;\n    float y = 1.0 - (gl_FragCoord.y / resolution.y);\n    float newEdgeTop = edgeTop + x * slopeTop * -1.0;\n    float newEdgeBottom = edgeBottom + x * slopeBottom * -1.0;\n    float value = smoothstep(newEdgeTop, newEdgeTop + feather, y) - smoothstep(newEdgeBottom, newEdgeBottom + feather, y);\n    color *= vec4(value);\n',
          ]);
          return (
            (Zt = function () {
              return e;
            }),
            e
          );
        }
        Vt = (function (e) {
          function t(e) {
            var n,
              i = e.fragmentShader,
              r = void 0 === i ? qt : i,
              o = e.map,
              a = e.uniforms;
            return (
              Lt(this, t),
              ((n = Dt(
                this,
                zt(t).call(this, {
                  uniforms: jt(
                    {
                      map: { value: o },
                      resolution: { value: new $e.Vector2() },
                    },
                    a,
                  ),
                  vertexShader: Qt,
                  fragmentShader: r,
                  transparent: !0,
                  depthTest: !1,
                }),
              )).type = 'PostProcessingBasicMaterial'),
              s.a.each(n.uniforms, function (e, t) {
                Object.defineProperty(Ut(n), t, {
                  get: function () {
                    return n.uniforms[t].value;
                  },
                  set: function (e) {
                    n.uniforms[t].value = e;
                  },
                });
              }),
              n
            );
          }
          return Nt(t, $e['RawShaderMaterial']), t;
        })();
        var Kt = Mt(Zt()),
          $t =
            '#define GLSLIFY 1\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\n';
        function Jt() {
          var e = (function (e, t) {
            t || (t = e.slice(0));
            return Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            );
          })([
            '\n    \n    // vec2 uvIn = rotateUV(uv, -0.5);\n    // vec2 uvIn = rotateUV(uv, mix(0., -0.5, 1. - inProgress), 0.5);\n    // uvIn.y += 0.5;\n    \n    // float b = smoothstep(0., .5, uvIn.y * inProgress);\n    float b = inProgress;\n    color *= b;\n',
          ]);
          return (
            (Jt = function () {
              return e;
            }),
            e
          );
        }
        var en = Mt(Jt());
        function tn(e) {
          return (tn = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function nn(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function rn(e, t) {
          return (rn =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function on() {
          var e = sn([
            '\n    precision highp float;\n\n    uniform sampler2D map;\n    uniform vec2 resolution;\n    uniform float edgeTop;\n    uniform float edgeBottom;\n    uniform float slopeTop;\n    uniform float slopeBottom;\n    uniform float opacity;\n    uniform float inProgress;\n\n    float random (vec2 st) { return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123); }\n\n    void main() {\n\n        vec2 uv = gl_FragCoord.xy / resolution.xy;\n        \n        vec4 color = texture2D(map, uv);\n\n        float r = random( uv );\n        float rStr = 0.03;\n        color += mix(-rStr/2.0, rStr/2.0, r);\n    \n        ',
            '\n        ',
            '\n\n        gl_FragColor = vec4(\n            vec3( ( color.rgb * b ) / color.a ), \n            color.a * opacity\n        );\n    }\n',
          ]);
          return (
            (on = function () {
              return e;
            }),
            e
          );
        }
        function an() {
          var e = sn([
            '\n    precision highp float;\n    attribute vec2 position;\n\n    void main() {\n        gl_Position = vec4(position, 1.0, 1.0);\n    }\n',
          ]);
          return (
            (an = function () {
              return e;
            }),
            e
          );
        }
        function sn(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var un = Mt(an()),
          ln = Mt(on(), en, Kt),
          cn = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.map,
                a = r.resolution,
                u = void 0 === a ? new $e.Vector2() : a;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = tn(t).call(this, {
                  uniforms: {
                    map: { value: o },
                    resolution: { value: u },
                    edgeTop: { value: 0 },
                    edgeBottom: { value: 0 },
                    slopeTop: { value: 0 },
                    slopeBottom: { value: 0 },
                    opacity: { value: 1 },
                    inProgress: { value: 1 },
                  },
                  vertexShader: un,
                  fragmentShader: ln,
                  depthTest: !1,
                  transparent: !0,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? nn(n)
                    : i).type = 'MaskedPostProcessingMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(nn(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && rn(e, t);
              })(t, $e['RawShaderMaterial']),
              t
            );
          })();
        function pn() {
          var e = dn([
            '\n    precision highp float;\n    uniform float radius;\n    uniform float time;\n    uniform vec2 resolution;\n\n    uniform sampler2D map;\n\n    varying vec2 vUv;\n\n    const vec2 blurdir = vec2( 1.0, 0.0 );\n\n    const float blurdist_px = 8.0;\n    const int NUM_SAMPLES = 8;\n\n    vec3 srgb2lin(vec3 c) { return c*c; }\n    vec3 lin2srgb(vec3 c) { return sqrt(c); }\n\n    //note: uniform pdf rand [0;1[\n    float hash12n(vec2 p) {\n        p  = fract(p * vec2(5.3987, 5.4421));\n        p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n        return fract(p.x * p.y * 95.4307);\n    }\n\n\n    void main( ) {\n        vec2 uv = vUv;\n\n        float blur_r = radius;\n        blur_r *= 2.0; //empiric constant...\n\n        float da = 6.283 / float(NUM_SAMPLES);\n        float a = da * hash12n(uv+fract(time) + 4.2);\n\n\n        vec3 sumcol = vec3(0.0);\n        for (int i=0;i<NUM_SAMPLES;++i) {\n        vec2 ofs = vec2( cos(a), sin(a) ) / resolution.xy * blur_r ;\n        vec2 p = uv + ofs;\n        sumcol += srgb2lin(texture2D(map, p, -0.0).rgb);\n        a += da;\n        }\n        sumcol /= float(NUM_SAMPLES);\n        sumcol = max( sumcol, 0.0 );\n\n        gl_FragColor = vec4( lin2srgb( sumcol ), 1.0 );\n\n    }\n',
          ]);
          return (
            (pn = function () {
              return e;
            }),
            e
          );
        }
        function hn() {
          var e = dn([
            '\n    precision highp float;\n    uniform float radius;\n    uniform float time;\n    uniform vec2 resolution;\n\n    uniform sampler2D map;\n\n    varying vec2 vUv;\n\n    const vec2 blurdir = vec2( 1.0, 0.0 );\n\n    const float blurdist_px = 8.0;\n    const int NUM_SAMPLES = 8;\n\n    vec3 srgb2lin(vec3 c) { return c*c; }\n    vec3 lin2srgb(vec3 c) { return sqrt(c); }\n\n    //note: uniform pdf rand [0;1[\n    float hash12n(vec2 p) {\n        p  = fract(p * vec2(5.3987, 5.4421));\n        p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n        return fract(p.x * p.y * 95.4307);\n    }\n\n\n    void main( ) {\n        vec2 uv = vUv;\n\n        float blur_r = radius;\n        blur_r *= sqrt(2.0); //empiric constant...\n\n        float da = 6.283 / float(NUM_SAMPLES);\n        float a = da * hash12n(uv+fract(time)+1.337);\n\n        vec3 sumcol = vec3(0.0);\n        for (int i=0;i<NUM_SAMPLES;++i) {\n            vec2 ofs = vec2( cos(a), sin(a) ) / resolution.xy * blur_r ;\n            vec2 p = uv + ofs;\n            sumcol += srgb2lin(texture2D(map, p, 0.0).rgb);\n            a += da;\n        }\n        sumcol /= float(NUM_SAMPLES);\n        sumcol = max( sumcol, 0.0 );\n\n        gl_FragColor = vec4( lin2srgb( sumcol ), 1.0 );\n    }\n',
          ]);
          return (
            (hn = function () {
              return e;
            }),
            e
          );
        }
        function fn() {
          var e = dn([
            '\n    precision highp float;\n    uniform float radius;\n    uniform float time;\n    uniform vec2 resolution;\n\n    uniform sampler2D map;\n\n    varying vec2 vUv;\n\n\n    const int NUM_SAMPLES = 8;\n\n    const float THRESHOLD = 0.0;\n    const float MULT = 1.0;\n\n    vec3 srgb2lin(vec3 c) { return c*c; }\n    vec3 lin2srgb(vec3 c) { return sqrt(c); }\n\n    //note: uniform pdf rand [0;1[\n    float hash12n(vec2 p) {\n        p  = fract(p * vec2(5.3987, 5.4421));\n        p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n        return fract(p.x * p.y * 95.4307);\n    }\n\n    void main() {\n        vec2 suv = vUv;\n        vec2 uv = vUv;\n\n        float blurdist = radius;\n\n        float da = 6.283 / float(NUM_SAMPLES);\n        float a = da * hash12n(uv+fract(time));\n\n        vec3 sumcol = vec3(0.0);\n        for (int i=0;i<NUM_SAMPLES;++i)\n        {\n            vec2 ofs = vec2( cos(a), sin(a) ) / resolution.x * blurdist ;\n            vec2 p = uv + ofs;\n\n            vec3 sampleTex = srgb2lin( texture2D( map, p, 0.0 ).rgb );\n            vec3 smpl = (sampleTex - THRESHOLD) / (1.0-THRESHOLD);\n            sumcol +=  smpl;\n\n           a += da;\n        }\n        sumcol /= float(NUM_SAMPLES);\n        sumcol = max( sumcol, 0.0 );\n\n        gl_FragColor = vec4( lin2srgb( sumcol * MULT ), 1.0 );\n    }\n',
          ]);
          return (
            (fn = function () {
              return e;
            }),
            e
          );
        }
        function dn(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var vn,
          mn = Mt(fn()),
          gn = Mt(hn()),
          bn = Mt(pn());
        function yn(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function wn(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function xn(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                wn(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                wn(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Pn(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function _n(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function kn(e) {
          return (kn = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function On(e, t) {
          return (On =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Sn,
          Tn = Object(u.a)(),
          An = c.a.isMobile ? 20 : 100,
          Mn = new $e.BufferGeometry(),
          jn = new Float32Array([-1, -1, 3, -1, -1, 3]);
        Mn.addAttribute('position', new $e.BufferAttribute(jn, 2));
        var Fn =
            Qe(
              (vn = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = _n(
                      this,
                      (e = kn(t)).call.apply(e, [this].concat(r)),
                    )).props = {
                      active: !0,
                      pointerPosition: [
                        Tn,
                        function (e) {
                          return e.pointerPositionMapped;
                        },
                      ],
                      controls: !1,
                      menuStates: [
                        Tn,
                        function (e) {
                          return e.menuStates;
                        },
                      ],
                      blurRadius: [
                        Tn,
                        function (e) {
                          return ['menu', 'signup', 'contact'].find(function (t) {
                            return e.navigation[t];
                          })
                            ? e.viewport.width / 5
                            : 0;
                        },
                      ],
                      viewport: [
                        Tn,
                        function (e) {
                          return {
                            width: e.viewport.width,
                            height: e.viewport.height,
                            pixelRatio: e.viewport.pixelRatio,
                          };
                        },
                      ],
                      appStart: [
                        Tn,
                        function (e) {
                          return e.started;
                        },
                      ],
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && On(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = xn(
                          regeneratorRuntime.mark(function e(t) {
                            var n,
                              i = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (n = t.parent),
                                        (this.el = document.createElement(
                                          'canvas',
                                        )),
                                        (this.el.style.position = 'absolute'),
                                        (this.el.style.top = 0),
                                        (this.el.style.left = 0),
                                        n.appendChild(this.el),
                                        (this.renderer = new $e.WebGLRenderer({
                                          canvas: this.el,
                                        })),
                                        (this.renderer.autoClear = !1),
                                        this.renderer.setPixelRatio(
                                          Tn.state.viewport.pixelRatio,
                                        ),
                                        this.renderer.setClearColor('black', 0),
                                        (this.scene = new $e.Scene()),
                                        (this.targets = Array(3)
                                          .fill()
                                          .map(function () {
                                            var e = new $e.WebGLRenderTarget(),
                                              t = new $e.Mesh(Mn);
                                            return (
                                              (t.frustumCulled = !1),
                                              i.scene.add(t),
                                              { target: e, quad: t }
                                            );
                                          })),
                                        (this.targetsUi = Array(3)
                                          .fill()
                                          .map(function () {
                                            var e = new $e.WebGLRenderTarget(),
                                              t = new $e.Mesh(
                                                Mn,
                                                new cn({ map: e.texture }),
                                              );
                                            return (
                                              (t.frustumCulled = !1),
                                              i.scene.add(t),
                                              { target: e, quad: t }
                                            );
                                          })),
                                        (this.camera = new $e.PerspectiveCamera(
                                          45,
                                          1,
                                          1,
                                          700,
                                        )),
                                        (this.camera.position.z = 10),
                                        (this.cameraTarget = new $e.PerspectiveCamera(
                                          45,
                                          1,
                                          1,
                                          700,
                                        )),
                                        this.scene.add(this.camera),
                                        (this.orthoCamera = new $e.OrthographicCamera(
                                          1,
                                          1,
                                          1,
                                          1,
                                          0,
                                          1e3,
                                        )),
                                        (this.orthoCamera.position.z = 10),
                                        this.orthoCamera.layers.set(1),
                                        this.scene.add(this.orthoCamera),
                                        (Sn = this),
                                        (e.next = 24),
                                        this.setupBlur()
                                      );
                                    case 24:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function (t) {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupBlur',
                      value: (function () {
                        var e = xn(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (e.next = 2),
                                        new Wt().setup({
                                          options: { scale: 1 },
                                          fragmentShader: mn,
                                          uniforms: {
                                            radius: { value: 80 },
                                            time: { value: 0 },
                                          },
                                        })
                                      );
                                    case 2:
                                      return (
                                        (this.blurPass1 = e.sent),
                                        (e.next = 5),
                                        new Wt().setup({
                                          options: { scale: 0.2 },
                                          fragmentShader: gn,
                                          uniforms: {
                                            radius: { value: 80 },
                                            time: { value: 0 },
                                          },
                                        })
                                      );
                                    case 5:
                                      return (
                                        (this.blurPass2 = e.sent),
                                        (e.next = 8),
                                        new Wt().setup({
                                          options: { scale: 0.2 },
                                          fragmentShader: bn,
                                          uniforms: {
                                            radius: { value: 80 },
                                            time: { value: 0 },
                                          },
                                        })
                                      );
                                    case 8:
                                      (this.blurPass3 = e.sent),
                                        (this.blurPasses = [
                                          this.blurPass1,
                                          this.blurPass2,
                                          this.blurPass3,
                                        ]);
                                    case 10:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'whileActive',
                      value: function () {
                        (this.ms = performance.now()),
                          this.props.controls || this.updateCamera(),
                          this.blurPass1.material.radius <= 1
                            ? this.render()
                            : this.renderWithBlur();
                      },
                    },
                    {
                      key: 'onMenuStates',
                      value: function () {
                        this.blurPasses.forEach(function (e) {
                          var t = e.material;
                          L.b.killTweensOf(t, { radius: !0 }),
                            L.b.to(t, 1, {
                              radius: An * e.options.scale,
                              ease: 'easeInOutSine',
                            });
                        }),
                          this.targetsUi
                            .map(function (e) {
                              return e.quad.material;
                            })
                            .forEach(function (e) {
                              L.b.killTweensOf(e, { opacity: !0 }),
                                L.b.to(e, 0.4, {
                                  opacity: 0,
                                  ease: 'easeInOutSine',
                                });
                            });
                      },
                    },
                    {
                      key: 'offMenuStates',
                      value: function () {
                        this.blurPasses.forEach(function (e) {
                          var t = e.material;
                          L.b.killTweensOf(t, { radius: !0 }),
                            L.b.to(t, 1, { radius: 0, ease: 'easeInOutSine' });
                        }),
                          this.targetsUi
                            .map(function (e) {
                              return e.quad.material;
                            })
                            .forEach(function (e) {
                              L.b.killTweensOf(e, { opacity: !0 }),
                                L.b.to(e, 1, {
                                  opacity: 1,
                                  ease: 'easeInOutSine',
                                  delay: 0.8,
                                });
                            });
                      },
                    },
                    { key: 'onAppStart', value: function () {} },
                    {
                      key: 'render',
                      value: function () {
                        var e = this,
                          t = window.performance.now();
                        this.targets.forEach(function (t) {
                          var n = t.target;
                          e.renderer.setRenderTarget(n), e.renderer.clear();
                        }),
                          this.targetsUi.forEach(function (t) {
                            var n = t.target;
                            e.renderer.setRenderTarget(n), e.renderer.clear();
                          }),
                          this.emit('render', {
                            renderer: this.renderer,
                            ortho: this.orthoCamera,
                            targets: this.targets,
                          }),
                          this.emit('renderUi', {
                            renderer: this.renderer,
                            ortho: this.orthoCamera,
                            targets: this.targetsUi,
                          }),
                          this.renderer.setRenderTarget(null),
                          this.renderer.clear(),
                          this.orthoCamera.layers.set(1),
                          this.renderer.render(this.scene, this.orthoCamera),
                          this.orthoCamera.layers.set(2),
                          this.renderer.render(this.scene, this.orthoCamera),
                          this.emit('renderUiTop', {
                            renderer: this.renderer,
                            ortho: this.orthoCamera,
                            targets: this.targetsUi,
                          }),
                          this.targets.forEach(function (e) {
                            e.quad.layers.set(-1);
                          }),
                          this.targetsUi.forEach(function (e) {
                            e.quad.layers.set(-1);
                          }),
                          (Tn.state.lastRenderDuration =
                            window.performance.now() - t);
                      },
                    },
                    {
                      key: 'renderWithBlur',
                      value: function () {
                        var e = this;
                        this.targets.forEach(function (t) {
                          var n = t.target;
                          e.renderer.setRenderTarget(n), e.renderer.clear();
                        }),
                          this.targetsUi.forEach(function (t) {
                            var n = t.target;
                            e.renderer.setRenderTarget(n), e.renderer.clear();
                          }),
                          this.emit('render', {
                            renderer: this.renderer,
                            ortho: this.orthoCamera,
                            targets: this.targets,
                          }),
                          this.emit('renderUi', {
                            renderer: this.renderer,
                            ortho: this.orthoCamera,
                            targets: this.targetsUi,
                          }),
                          this.renderer.setRenderTarget(this.blurPass1.target),
                          this.renderer.clear(),
                          this.orthoCamera.layers.set(1),
                          this.renderer.render(this.scene, this.orthoCamera),
                          this.orthoCamera.layers.set(2),
                          this.renderer.render(this.scene, this.orthoCamera),
                          this.orthoCamera.layers.set(0),
                          this.renderer.setRenderTarget(this.blurPass2.target),
                          this.renderer.clear(),
                          this.renderer.render(
                            this.blurPass1.scene,
                            this.orthoCamera,
                          ),
                          this.renderer.setRenderTarget(this.blurPass3.target),
                          this.renderer.clear(),
                          this.renderer.render(
                            this.blurPass2.scene,
                            this.orthoCamera,
                          ),
                          this.renderer.setRenderTarget(null),
                          this.renderer.clear(),
                          this.renderer.render(
                            this.blurPass3.scene,
                            this.orthoCamera,
                          ),
                          this.emit('renderUiTop', {
                            renderer: this.renderer,
                            ortho: this.orthoCamera,
                            targets: this.targetsUi,
                          }),
                          this.targets.forEach(function (e) {
                            e.quad.layers.set(-1);
                          }),
                          this.targetsUi.forEach(function (e) {
                            e.quad.layers.set(-1);
                          });
                      },
                    },
                    {
                      key: 'updateCamera',
                      value: function () {
                        this.camera.position.add(
                          this.cameraTarget.position
                            .clone()
                            .sub(this.camera.position)
                            .multiplyScalar(
                              0.02 *
                                this.cameraTarget.position.distanceTo(
                                  this.camera.position,
                                ),
                            ),
                        );
                      },
                    },
                    {
                      key: 'setViewport',
                      value: function () {
                        var e = Tn.state.viewport,
                          t = e.width,
                          n = e.height,
                          i = e.pixelRatio,
                          r = e.uiPixelRatio;
                        this.renderer.setSize(t, n),
                          (this.camera.aspect = t / n),
                          this.camera.updateProjectionMatrix(),
                          this.renderer.setPixelRatio(i),
                          (this.orthoCamera.left = -t / 2),
                          (this.orthoCamera.right = t / 2),
                          (this.orthoCamera.top = n / 2),
                          (this.orthoCamera.bottom = -n / 2),
                          this.orthoCamera.updateProjectionMatrix(),
                          this.targets.forEach(function (e) {
                            var r = e.target,
                              o = e.quad;
                            o.material.resolution &&
                              o.material.resolution.set(t * i, n * i),
                              r.setSize(t * i, n * i);
                          }),
                          this.targetsUi.forEach(function (e) {
                            var o = e.target;
                            e.quad.material.resolution.set(t * i, n * i),
                              o.setSize(t * r, n * r);
                          });
                      },
                    },
                    {
                      key: 'onControls',
                      value: function () {
                        (this.controls = new $e.OrbitControls(
                          this.camera,
                          this.renderer.domElement,
                        )),
                          (this.controls.enableKeys = !1);
                      },
                    },
                    {
                      key: 'whileControls',
                      value: function () {
                        this.controls.update();
                      },
                    },
                    {
                      key: 'setPointerPosition',
                      value: function (e) {
                        var t = yn(e, 2),
                          n = t[0],
                          i = t[1];
                        this.cameraTarget.position.set(0, 0, 10),
                          (this.cameraTarget.position.y = 0.75 * i),
                          this.cameraTarget.lookAt(0, 0, 0),
                          (this.cameraTarget.position.x = 0.75 * n);
                      },
                    },
                  ]) && Pn(n.prototype, i),
                  r && Pn(n, r),
                  t
                );
              })()),
            ) || vn,
          Rn = function () {
            if (!Sn) throw new Error('Renderer not initialized yet');
            return Sn;
          },
          Cn = Fn;
        function En(e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : Math.round;
          return Math.pow(2, t(Math.log(e) / Math.LN2));
        }
        function Ln(e) {
          var t = e.width,
            n = e.height,
            i = En(t, Math.ceil),
            r = En(n, Math.ceil),
            o = document.createElement('canvas'),
            a = o.getContext('2d');
          return (o.width = i), (o.height = r), a.drawImage(e, 0, 0, i, r), o;
        }
        ($e.KTXLoader = function (e) {
          $e.CompressedTextureLoader.call(this, e),
            (this._parser = $e.KTXLoader.parse);
        }),
          ($e.KTXLoader.prototype = Object.create(
            $e.CompressedTextureLoader.prototype,
          )),
          ($e.KTXLoader.prototype.constructor = $e.KTXLoader),
          ($e.KTXLoader.parse = function (e, t) {
            var n = new In(e, 1);
            return {
              mipmaps: n.mipmaps(t),
              width: n.pixelWidth,
              height: n.pixelHeight,
              format: n.glInternalFormat,
              isCubemap: 6 === n.numberOfFaces,
              mipmapCount: n.numberOfMipmapLevels,
            };
          });
        var In = (function () {
            function e(t, n, i, r) {
              this.arrayBuffer = t;
              var o = new Uint8Array(this.arrayBuffer, 0, 12);
              if (
                171 === o[0] &&
                75 === o[1] &&
                84 === o[2] &&
                88 === o[3] &&
                32 === o[4] &&
                49 === o[5] &&
                49 === o[6] &&
                187 === o[7] &&
                13 === o[8] &&
                10 === o[9] &&
                26 === o[10] &&
                10 === o[11]
              ) {
                var a = new Int32Array(this.arrayBuffer, 12, 13),
                  s = 16909060 === a[0];
                (this.glType = s ? this.switchEndainness(a[1]) : a[1]),
                  (this.glTypeSize = s ? this.switchEndainness(a[2]) : a[2]),
                  (this.glFormat = s ? this.switchEndainness(a[3]) : a[3]),
                  (this.glInternalFormat = s
                    ? this.switchEndainness(a[4])
                    : a[4]),
                  (this.glBaseInternalFormat = s
                    ? this.switchEndainness(a[5])
                    : a[5]),
                  (this.pixelWidth = s ? this.switchEndainness(a[6]) : a[6]),
                  (this.pixelHeight = s ? this.switchEndainness(a[7]) : a[7]),
                  (this.pixelDepth = s ? this.switchEndainness(a[8]) : a[8]),
                  (this.numberOfArrayElements = s
                    ? this.switchEndainness(a[9])
                    : a[9]),
                  (this.numberOfFaces = s ? this.switchEndainness(a[10]) : a[10]),
                  (this.numberOfMipmapLevels = s
                    ? this.switchEndainness(a[11])
                    : a[11]),
                  (this.bytesOfKeyValueData = s
                    ? this.switchEndainness(a[12])
                    : a[12]),
                  0 === this.glType
                    ? ((this.numberOfMipmapLevels = Math.max(
                        1,
                        this.numberOfMipmapLevels,
                      )),
                      0 !== this.pixelHeight && 0 === this.pixelDepth
                        ? 0 === this.numberOfArrayElements
                          ? this.numberOfFaces === n
                            ? (this.loadType = e.COMPRESSED_2D)
                            : console.warn(
                                'number of faces expected' +
                                  n +
                                  ', but found ' +
                                  this.numberOfFaces,
                              )
                          : console.warn('texture arrays not currently supported')
                        : console.warn('only 2D textures currently supported'))
                    : console.warn('only compressed formats currently supported');
              } else console.error('texture missing KTX identifier');
            }
            return (
              (e.prototype.switchEndainness = function (e) {
                return (
                  ((255 & e) << 24) |
                  ((65280 & e) << 8) |
                  ((e >> 8) & 65280) |
                  ((e >> 24) & 255)
                );
              }),
              (e.prototype.mipmaps = function (t) {
                for (
                  var n = [],
                    i = e.HEADER_LEN + this.bytesOfKeyValueData,
                    r = this.pixelWidth,
                    o = this.pixelHeight,
                    a = t ? this.numberOfMipmapLevels : 1,
                    s = 0;
                  s < a;
                  s++
                ) {
                  for (
                    var u = new Int32Array(this.arrayBuffer, i, 1)[0], l = 0;
                    l < this.numberOfFaces;
                    l++
                  ) {
                    var c = new Uint8Array(this.arrayBuffer, i + 4, u);
                    n.push({ data: c, width: r, height: o }),
                      (i += u + 4),
                      (i += 3 - ((u + 3) % 4));
                  }
                  (r = Math.max(1, 0.5 * r)), (o = Math.max(1, 0.5 * o));
                }
                return n;
              }),
              (e.HEADER_LEN = 64),
              (e.COMPRESSED_2D = 0),
              (e.COMPRESSED_3D = 1),
              (e.TEX_2D = 2),
              (e.TEX_3D = 3),
              e
            );
          })(),
          Dn = n(120);
        function Un(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function zn(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Un(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Un(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        var Nn = new Map(),
          Bn = new $e.KTXLoader();
        function Vn(e) {
          return Yn.apply(this, arguments);
        }
        function Yn() {
          return (Yn = zn(
            regeneratorRuntime.mark(function e(t) {
              return regeneratorRuntime.wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return e.abrupt(
                        'return',
                        new Promise(function (e, n) {
                          Bn.load(
                            t,
                            function (t) {
                              (t.needsUpdate = !0), e(t);
                            },
                            null,
                            n,
                          );
                        }),
                      );
                    case 1:
                    case 'end':
                      return e.stop();
                  }
              }, e);
            }),
          )).apply(this, arguments);
        }
        var Hn = s.a.memoize(function (e) {
          var t = Object.entries({
            astc: e.extensions.get('WEBGL_compressed_texture_astc'),
            s3tc: e.extensions.get('WEBGL_compressed_texture_s3tc'),
            pvrtc: e.extensions.get('WEBGL_compressed_texture_pvrtc'),
          }).filter(function (e) {
            return null !== e[1];
          })[0];
          return (t = t ? t[0] : null);
        });
        function Xn(e) {
          var t = e;
          if (e.pushedToGPU) return e;
          var n = Rn();
          return n && (n.renderer.setTexture2D(e, 0), (t.pushedToGPU = !0)), e;
        }
        function Gn(e) {
          return Wn.apply(this, arguments);
        }
        function Wn() {
          return (Wn = zn(
            regeneratorRuntime.mark(function e(t) {
              var n,
                i,
                r,
                o,
                a,
                u,
                l,
                p,
                h,
                f,
                d = arguments;
              return regeneratorRuntime.wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      if (
                        ((n = d.length > 1 && void 0 !== d[1] && d[1]),
                        (i = !(d.length > 2 && void 0 !== d[2]) || d[2]),
                        (r = se.a.textures.get(t)))
                      ) {
                        e.next = 17;
                        break;
                      }
                      if (
                        (o = s.a.findWhere(
                          Object(Dn.a)(c.a.isMobile).compressed,
                          { id: t },
                        ))
                      ) {
                        e.next = 8;
                        break;
                      }
                      throw new Error(
                        "No image found to create Texture for id '".concat(
                          t,
                          "'",
                        ),
                      );
                    case 8:
                      if (
                        ((a = o.url.replace('[format]', Hn(Rn().renderer))),
                        !Nn.get(a))
                      ) {
                        e.next = 11;
                        break;
                      }
                      return e.abrupt('return', Nn.get(a));
                    case 11:
                      return (e.next = 13), Vn(c.a.CDN + a);
                    case 13:
                      return (
                        Xn((u = e.sent)), Nn.set(a, u), e.abrupt('return', u)
                      );
                    case 17:
                      if (((l = r.data), !(p = Nn.get(l.src)))) {
                        e.next = 22;
                        break;
                      }
                      return (
                        console.warn(
                          "createTexture() - texture for '".concat(
                            t,
                            "' was already created, consider using getTexture() instead",
                          ),
                        ),
                        e.abrupt('return', p)
                      );
                    case 22:
                      return (
                        (h = l),
                        ($e.Math.isPowerOfTwo(l.width) &&
                          $e.Math.isPowerOfTwo(l.height)) ||
                          (console.warn(
                            "createTexture() - '".concat(
                              t,
                              "' image size is not power of 2",
                            ),
                          ),
                          (h = Ln(l))),
                        ((f = new $e.Texture(h)).flipY = i),
                        (f.needsUpdate = !0),
                        n && Xn(f),
                        Nn.set(l.src, f),
                        e.abrupt('return', f)
                      );
                    case 30:
                    case 'end':
                      return e.stop();
                  }
              }, e);
            }),
          )).apply(this, arguments);
        }
        var Qn = function (e) {
            var t = se.a.textures.get(e);
            if (!t)
              throw new Error(
                "getTexture() - no texture found for '".concat(e, "'"),
              );
            return t.texture;
          },
          qn = [
            {
              name: 'science',
              'scroll-target': 'science',
              'menu-title': p['menu-item_one-title'],
              'menu-subtitle': p['menu-item_two-subtitle'],
            },
            {
              name: 'testing',
              'scroll-target': 'stalk',
              'menu-title': p['menu-item_two-title'],
              'menu-subtitle': p['menu-item_three-subtitle'],
            },
            {
              name: 'result',
              'scroll-target': 'result',
              'menu-title': p['menu-item_three-title'],
              'menu-subtitle': p['menu-item_four-label'],
            },
          ];
        function Zn(e) {
          return (e * Math.PI) / 180;
        }
        var Kn = Object.create(Object.prototype, {
            map: {
              get: function () {
                var e = Qn('msdf-manifold');
                return (
                  Object.defineProperty(Kn, 'map', {
                    value: e,
                    configurable: !1,
                  }),
                  e
                );
              },
              configurable: !0,
            },
            json: {
              get: function () {
                var e = se.a.other.get('msdf-manifold-data').data;
                return (
                  Object.defineProperty(Kn, 'json', {
                    value: e,
                    configurable: !1,
                  }),
                  e
                );
              },
              configurable: !0,
            },
          }),
          $n = Object.create(Object.prototype, {
            map: {
              get: function () {
                var e = Qn('msdf-gilroy');
                return (
                  Object.defineProperty($n, 'map', {
                    value: e,
                    configurable: !1,
                  }),
                  e
                );
              },
              configurable: !0,
            },
            json: {
              get: function () {
                var e = se.a.other.get('msdf-gilroy-data').data;
                return (
                  Object.defineProperty($n, 'json', {
                    value: e,
                    configurable: !1,
                  }),
                  e
                );
              },
              configurable: !0,
            },
          }),
          Jn = n(392),
          ei = n(396),
          ti = n(397),
          ni = n(400),
          ii = n(402),
          ri = n(403),
          oi = n(404),
          ai = $e.BufferGeometry;
        function si(e) {
          return new ui(e);
        }
        function ui(e) {
          ai.call(this),
            'string' == typeof e && (e = { text: e }),
            (this._opt = ii({}, e)),
            e && this.update(e);
        }
        ei(ui, ai),
          (ui.prototype.update = function (e) {
            if (
              ('string' == typeof e && (e = { text: e }),
              !(e = ii({}, this._opt, e)).font)
            )
              throw new TypeError('must specify a { font } in options');
            this.layout = Jn(e);
            var t = !1 !== e.flipY,
              n = e.font,
              i = n.common.scaleW,
              r = n.common.scaleH,
              o = this.layout.glyphs.filter(function (e) {
                var t = e.data;
                return t.width * t.height > 0;
              });
            this.visibleGlyphs = o;
            var a = ri.positions(o),
              s = ri.uvs(o, i, r, t),
              u = ti({ clockwise: !0, type: 'uint16', count: o.length });
            if (
              (ni.index(this, u, 1, 'uint16'),
              ni.attr(this, 'position', a, 2),
              ni.attr(this, 'uv', s, 2),
              !e.multipage && 'page' in this.attributes)
            )
              this.removeAttribute('page');
            else if (e.multipage) {
              var l = ri.pages(o);
              ni.attr(this, 'page', l, 1);
            }
          }),
          (ui.prototype.computeBoundingSphere = function () {
            null === this.boundingSphere &&
              (this.boundingSphere = new $e.Sphere());
            var e = this.attributes.position.array,
              t = this.attributes.position.itemSize;
            if (!e || !t || e.length < 2)
              return (
                (this.boundingSphere.radius = 0),
                void this.boundingSphere.center.set(0, 0, 0)
              );
            oi.computeSphere(e, this.boundingSphere),
              isNaN(this.boundingSphere.radius) &&
                console.error(
                  'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                );
          }),
          (ui.prototype.computeBoundingBox = function () {
            null === this.boundingBox && (this.boundingBox = new $e.Box3());
            var e = this.boundingBox,
              t = this.attributes.position.array,
              n = this.attributes.position.itemSize;
            !t || !n || t.length < 2 ? e.makeEmpty() : oi.computeBox(t, e);
          });
        var li, ci;
        function pi(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function hi(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                pi(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                pi(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function fi(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function di(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function vi(e) {
          return (vi = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function mi(e, t) {
          return (mi =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var gi,
          bi = Object(u.a)(),
          yi =
            Qe(
              (li =
                Object(it.a)(rt)(
                  ((function (e, t, n, i, r) {
                    var o = {};
                    Object.keys(i).forEach(function (e) {
                      o[e] = i[e];
                    }),
                      (o.enumerable = !!o.enumerable),
                      (o.configurable = !!o.configurable),
                      ('value' in o || o.initializer) && (o.writable = !0),
                      (o = n
                        .slice()
                        .reverse()
                        .reduce(function (n, i) {
                          return i(e, t, n) || n;
                        }, o)),
                      r &&
                        void 0 !== o.initializer &&
                        ((o.value = o.initializer
                          ? o.initializer.call(r)
                          : void 0),
                        (o.initializer = void 0)),
                      void 0 === o.initializer &&
                        (Object.defineProperty(e, t, o), (o = null));
                  })(
                    (ci = (function (e) {
                      function t() {
                        var e, n;
                        !(function (e, t) {
                          if (!(e instanceof t))
                            throw new TypeError(
                              'Cannot call a class as a function',
                            );
                        })(this, t);
                        for (
                          var i = arguments.length, r = new Array(i), o = 0;
                          o < i;
                          o++
                        )
                          r[o] = arguments[o];
                        return (
                          ((n = di(
                            this,
                            (e = vi(t)).call.apply(e, [this].concat(r)),
                          )).options = {
                            text: 'Text',
                            align: 'left',
                            position: 'center',
                            lineHeight: 1.3,
                            textTransform: 'default',
                            letterSpacing: 3,
                            clickable: !1,
                            font: 'regular',
                            layer: 1,
                          }),
                          (n.props = {
                            v: !0,
                            alpha: 1,
                            active: !1,
                            fontSize: 20,
                            width: 100,
                            height: 100,
                            pointerPosition: [
                              bi,
                              function (e) {
                                return n.options.clickable && e.pointer.position;
                              },
                            ],
                            rollover: !1,
                          }),
                          n
                        );
                      }
                      var n, i, r;
                      return (
                        (function (e, t) {
                          if ('function' != typeof t && null !== t)
                            throw new TypeError(
                              'Super expression must either be null or a function',
                            );
                          (e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                              value: e,
                              writable: !0,
                              configurable: !0,
                            },
                          })),
                            t && mi(e, t);
                        })(t, le['a']),
                        (n = t),
                        (i = [
                          {
                            key: 'onSetup',
                            value: (function () {
                              var e = hi(
                                regeneratorRuntime.mark(function e() {
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (this.tweens = { progress: 0 }),
                                              (this.bbox = new $e.Box3()),
                                              (this.hitbox = new $e.Mesh(et, tt)),
                                              this.object.add(this.hitbox),
                                              (e.next = 6),
                                              this.setupText()
                                            );
                                          case 6:
                                            (this.text = e.sent),
                                              (this.props.pZ = 3),
                                              this.options.clickable &&
                                                he.on(
                                                  'click',
                                                  this.setPointerClick,
                                                );
                                          case 9:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'setupText',
                            value: (function () {
                              var e = hi(
                                regeneratorRuntime.mark(function e() {
                                  var t, n, i, r;
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            (e.t0 = this.options.textTransform),
                                              (e.next =
                                                'uppercase' === e.t0 ? 3 : 5);
                                            break;
                                          case 3:
                                            return (
                                              (this.text = this.options.text.toUpperCase()),
                                              e.abrupt('break', 7)
                                            );
                                          case 5:
                                            return (
                                              (this.text = this.options.text),
                                              e.abrupt('break', 7)
                                            );
                                          case 7:
                                            (e.t1 = this.options.font),
                                              (e.next =
                                                'bold' === e.t1 ? 10 : 12);
                                            break;
                                          case 10:
                                            return (
                                              (this.fontType = Kn),
                                              e.abrupt('break', 14)
                                            );
                                          case 12:
                                            return (
                                              (this.fontType = $n),
                                              e.abrupt('break', 14)
                                            );
                                          case 14:
                                            return (
                                              (this.charLength = this.options.text.replace(
                                                ' ',
                                                '',
                                              ).length),
                                              (this.textScale = 0),
                                              (this.baseFontSize = this.fontType.json.info.size),
                                              (t = si({
                                                width: this.props.width,
                                                align: this.options.align,
                                                font: this.fontType.json,
                                                lineHeight:
                                                  this.fontType.json.common
                                                    .lineHeight *
                                                  this.options.lineHeight,
                                                letterSpacing: this.options
                                                  .letterSpacing,
                                                text: this.text,
                                              })),
                                              ((n = this.fontType.map).minFilter =
                                                $e.LinearFilter),
                                              ((i = new $e.ShaderMaterial({
                                                uniforms: {
                                                  uIsMobile: {
                                                    value: c.a.isMobile,
                                                  },
                                                  uAlpha: {
                                                    value: this.options.alpha,
                                                  },
                                                  uTexSize: {
                                                    value: new $e.Vector2(
                                                      n.image.width,
                                                      n.image.height,
                                                    ),
                                                  },
                                                  uScale: { value: 1 },
                                                  uSmoothstep: {
                                                    value:
                                                      1 ===
                                                      bi.state.viewport.pixelRatio
                                                        ? 0.6
                                                        : 0.2,
                                                  },
                                                  msdfMap: {
                                                    value: this.fontType.map,
                                                  },
                                                  color: {
                                                    value: new $e.Color('white'),
                                                  },
                                                },
                                                transparent: !0,
                                                vertexShader: Je,
                                                fragmentShader:
                                                  "#define GLSLIFY 1\n// uniform bool uIsMobile;\n// uniform float uSmoothstep;\n// uniform vec3 color;\n// uniform sampler2D msdfMap;\n// uniform float uScale;\n// uniform float uAlpha;\n\n// varying vec2 vUv;\n\n// float median(float r, float g, float b) {\n//     return max(min(r, g), min(max(r, g), b));\n// }\n\n// #pragma glslify: map = require('./shader-chunks/map.glsl')\n\n// void main() {\n//     float threshold = uIsMobile ? 0.45 : map(uScale, 0.5, 1.0, 0.4, 0.5, true);\n//     vec3 msdfSample = texture2D(msdfMap, vUv).rgb;\n//     float sigDist = median(msdfSample.r, msdfSample.g, msdfSample.b);\n//     float alpha = smoothstep(threshold - uSmoothstep * 0.5, threshold + uSmoothstep * 0.5, sigDist);\n//     // float sigDist = median(msdfSample.r, msdfSample.g, msdfSample.b) - 0.5;\n//     // float alpha = clamp(sigDist/fwidth(sigDist) + 0.5, 0.0, 1.0);\n\n//     alpha *= uAlpha;\n\n//     gl_FragColor = vec4(color, alpha);\n//     // gl_FragColor = vec4(vec3(color), fill);\n// }\n\nuniform bool uIsMobile;\nuniform float uSmoothstep;\nuniform float uAlpha;\nuniform vec3 color;\nuniform sampler2D msdfMap;\nuniform float uScale;\nuniform vec2 uTexSize;\n\nvarying vec2 vUv;\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\n\nfloat map(float value, float inMin, float inMax, float outMin, float outMax, bool clamped) {\n\tif (clamped) value = min(inMax, max(inMin, value));\n\n\treturn outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\nvoid main() {\n    vec3 msdfSample = texture2D(msdfMap, vUv).rgb;\n\n    float threshold = 0.45;\n    float dx = dFdx(vUv.x) * uTexSize.x;\n    float dy = dFdx(vUv.y) * uTexSize.y;\n    float toPixels = 8.0 * inversesqrt(dx * dx + dy * dy);\n    float sigDist = median(msdfSample.r, msdfSample.g, msdfSample.b);\n    float w = fwidth(sigDist);\n    float alpha = smoothstep(threshold - w, threshold + w, sigDist);\n\n    // float threshold = uIsMobile ? 0.45 : map(uScale, 0.5, 1.0, 0.4, 0.5, true);\n    // // float threshold = 0.45;\n    // vec3 msdfSample = texture2D(msdfMap, vUv).rgb;\n    // float sigDist = median(msdfSample.r, msdfSample.g, msdfSample.b);\n\n    // float feather = 1.5;\n    // float dDistance = fwidth(sigDist);\n    // float edgeFeather = dDistance * feather;\n\n    // // float alpha = smoothstep(threshold - edgeFeather*0.5, threshold + edgeFeather*0.5, sigDist);\n    // float alpha = smoothstep(threshold - uSmoothstep * 0.5, threshold + uSmoothstep * 0.5, sigDist);\n\n    alpha *= uAlpha;\n\n    gl_FragColor = vec4(color, alpha);\n    // gl_FragColor = vec4(vec3(color), fill);\n}",
                                              })).type = 'TextMaterial'),
                                              (i.extensions.derivatives = !0),
                                              ((r = new $e.Mesh(
                                                t,
                                                i,
                                              )).rotation.x = Zn(180)),
                                              r.layers.set(this.options.layer),
                                              (r.renderOrder = 50),
                                              this.object.add(r),
                                              e.abrupt('return', r)
                                            );
                                          case 29:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'setFontSize',
                            value: function (e) {
                              this.updateTitle();
                            },
                          },
                          {
                            key: 'updateTitle',
                            value: function () {
                              var e = this.props.fontSize / this.baseFontSize;
                              this.text.scale.setScalar(e),
                                this.text.geometry.update({
                                  width: this.props.width / e,
                                });
                              var t =
                                  this.text.geometry.layout.width /
                                  this.text.geometry.layout.height,
                                n = this.props.width / 2,
                                i = this.props.width / t / 2;
                              switch (this.options.position) {
                                case 'top-left':
                                  this.text.position.set(0, 2 * -i, 0),
                                    this.hitbox.position.set(n, -i, 0);
                                  break;
                                case 'bottom-left':
                                  this.text.position.set(0, 0, 0),
                                    this.hitbox.position.set(n, i, 0);
                                  break;
                                case 'bottom-right':
                                  this.text.position.set(2 * -n, 0, 0),
                                    this.hitbox.position.set(-n, 0, 0);
                                  break;
                                default:
                                  this.text.position.set(-n, -i, 0);
                              }
                              (this.props.height = 2 * i),
                                this.hitbox.scale.set(
                                  this.props.width,
                                  this.props.height +
                                    30 * bi.state.viewport.scale,
                                  1,
                                ),
                                this.bbox.setFromObject(this.hitbox);
                            },
                          },
                          {
                            key: 'onActive',
                            value: function () {
                              this.bbox.setFromObject(this.hitbox);
                            },
                          },
                          {
                            key: 'setWidth',
                            value: function (e) {
                              (this.text.material.uniforms.uScale.value =
                                bi.state.viewport.scale),
                                this.bbox.setFromObject(this.hitbox);
                            },
                          },
                          {
                            key: 'setAlpha',
                            value: function (e) {
                              this.text.material.uniforms.uAlpha.value = e;
                            },
                          },
                          {
                            key: 'setPointerClick',
                            value: function () {
                              this.props.active &&
                                Ke(this.bbox) &&
                                this.emit('click');
                            },
                          },
                          {
                            key: 'setPointerPosition',
                            value: function () {
                              if (this.props.active) {
                                var e = Ke(this.bbox);
                                this.props.rollover = !!e;
                              }
                            },
                          },
                          {
                            key: 'setRollover',
                            value: function (e) {
                              bi.state.cursor = e ? 'pointer' : 'default';
                            },
                          },
                        ]) && fi(n.prototype, i),
                        r && fi(n, r),
                        t
                      );
                    })()).prototype,
                    'setPointerClick',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      ci.prototype,
                      'setPointerClick',
                    ),
                    ci.prototype,
                  ),
                  (li = ci)),
                ) || li),
            ) || li;
        function wi(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function xi(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                wi(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                wi(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Pi(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function _i(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function ki(e) {
          return (ki = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Oi(e, t) {
          return (Oi =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Si,
          Ti = Object(u.a)(),
          Ai =
            Qe(
              (gi =
                Object(it.a)(rt)(
                  (gi = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = _i(
                          this,
                          (e = ki(t)).call.apply(e, [this].concat(r)),
                        )).props = {
                          render: !1,
                          rotation: 0,
                          progress: [
                            Ti,
                            function (e) {
                              return e.totalProgress;
                            },
                          ],
                          progressStart: 0,
                          progressEnd: 1,
                          pointerClick: [
                            Ti,
                            function (e) {
                              return e.pointer.click;
                            },
                          ],
                          scale: [
                            Ti,
                            function (e) {
                              return e.viewport.scale;
                            },
                          ],
                          currentCategory: [
                            Ti,
                            function (e) {
                              return e.currentCategory;
                            },
                          ],
                          viewport: [
                            Ti,
                            function (e) {
                              return s.a.pick(
                                e.viewport,
                                'width',
                                'height',
                                'scale',
                              );
                            },
                          ],
                          size: function (e) {
                            var t = e.viewport,
                              n = t.scale,
                              i = t.width,
                              r = t.height,
                              o = 150 * n;
                            return (
                              (e.pX = -i / 2 + o / 2 + 80 * n),
                              (e.pY = -0.4 * r),
                              o
                            );
                          },
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && Oi(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'setCurrentCategory',
                          value: function (e) {
                            if (this.prevCategory) {
                              var t = s.a.pluck(Object(S.a)().categories, 'name'),
                                n = t.indexOf(this.prevCategory),
                                i = t.indexOf(e) - n;
                              i < -1 ? this.loop(1) : i > 1 && this.loop(-1);
                            }
                            this.prevCategory = e;
                          },
                        },
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e = xi(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          (window.prRing = this),
                                            (this.tweens = {
                                              rotation: 0,
                                              startEdge: 0,
                                              endEdge: 1,
                                              inProgress: 0,
                                              innerRingProgress: 0,
                                              arrowPr: 0,
                                            }),
                                            (this.currentLabel = null),
                                            (this.prevCategory = null),
                                            (this.currCategory = null),
                                            (this.progress = 0),
                                            (this.progressTg = 0),
                                            (this.bbox = new $e.Box3()),
                                            (this.bboxFromTopLeft = {}),
                                            (this.size = new $e.Vector2()),
                                            this.setupMesh();
                                        case 11:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupLabels',
                          value: (function () {
                            var e = xi(
                              regeneratorRuntime.mark(function e() {
                                var t = this;
                                return regeneratorRuntime.wrap(function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (e.t0 = Promise),
                                          (e.next = 3),
                                          qn.map(
                                            (function () {
                                              var e = xi(
                                                regeneratorRuntime.mark(
                                                  function e(n) {
                                                    var i;
                                                    return regeneratorRuntime.wrap(
                                                      function (e) {
                                                        for (;;)
                                                          switch (
                                                            (e.prev = e.next)
                                                          ) {
                                                            case 0:
                                                              return (
                                                                (e.next = 2),
                                                                new yi()
                                                              );
                                                            case 2:
                                                              return (
                                                                (i = e.sent),
                                                                (e.next = 5),
                                                                i.setup({
                                                                  options: {
                                                                    layer:
                                                                      t.options
                                                                        .layer,
                                                                    text:
                                                                      n[
                                                                        'menu-title'
                                                                      ],
                                                                    align: 'left',
                                                                    category:
                                                                      n.name,
                                                                    textTransform:
                                                                      'uppercase',
                                                                  },
                                                                  props: {
                                                                    alpha: 0,
                                                                    fontSize: [
                                                                      Ti,
                                                                      function (
                                                                        e,
                                                                      ) {
                                                                        return (
                                                                          30 *
                                                                          e
                                                                            .viewport
                                                                            .scale
                                                                        );
                                                                      },
                                                                    ],
                                                                    width: [
                                                                      Ti,
                                                                      function (
                                                                        e,
                                                                      ) {
                                                                        var t =
                                                                          500 *
                                                                          e
                                                                            .viewport
                                                                            .scale;
                                                                        return (
                                                                          (i.props.pX =
                                                                            0.7 *
                                                                            t),
                                                                          t
                                                                        );
                                                                      },
                                                                    ],
                                                                  },
                                                                })
                                                              );
                                                            case 5:
                                                              return (
                                                                t.object.add(
                                                                  i.object,
                                                                ),
                                                                e.abrupt(
                                                                  'return',
                                                                  i,
                                                                )
                                                              );
                                                            case 7:
                                                            case 'end':
                                                              return e.stop();
                                                          }
                                                      },
                                                      e,
                                                    );
                                                  },
                                                ),
                                              );
                                              return function (t) {
                                                return e.apply(this, arguments);
                                              };
                                            })(),
                                          )
                                        );
                                      case 3:
                                        return (
                                          (e.t1 = e.sent),
                                          e.abrupt(
                                            'return',
                                            e.t0.all.call(e.t0, e.t1),
                                          )
                                        );
                                      case 5:
                                      case 'end':
                                        return e.stop();
                                    }
                                }, e);
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupMesh',
                          value: function () {
                            var e = new $e.ShaderMaterial({
                              uniforms: {
                                uRotation: { value: 0 },
                                uProgress: { value: 0 },
                                uInProgress: { value: 0 },
                                uInnerRingProgress: { value: 0 },
                                uProgressEdges: { value: new $e.Vector2(0, 1) },
                                uStrokeWidth: {
                                  value: 1 * Ti.state.viewport.pixelRatio,
                                },
                                uCircleWidth: {
                                  value: 2 * Ti.state.viewport.pixelRatio,
                                },
                              },
                              transparent: !0,
                              vertexShader: Je,
                              fragmentShader:
                                '#define GLSLIFY 1\n#define PI 3.141592653589793\n#define PI_2 6.283185307179586\n\nuniform float uTime;\nuniform float uProgress;\nuniform float uInProgress;\nuniform float uInnerRingProgress;\nuniform float uStrokeWidth;\nuniform float uCircleWidth;\nuniform float uRotation;\nuniform sampler2D uTexture;\nuniform vec2 uArrowSize;\nuniform vec2 uProgressEdges;\n\nvarying vec2 vUv;\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat toRadians(float deg) {\n\treturn deg * (3.141592653589793 / 180.0);\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s) {\n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(uv - 0.5) * scale;\n    \n    // Calculate edge antialias feather\n    float distance = length(center);\n    float edgeFeather = fwidth(distance) * feather;\n\n    // Calculate fixed stroke width regardless of scale\n    float dx = dFdx(uv.x);\n    strokeWidth = dx * strokeWidth;\n  \n    float innerRadius = radius - strokeWidth;\n    float outerRadius = radius;\n    float value = smoothstep(innerRadius - edgeFeather, innerRadius, distance) * \n                  smoothstep(outerRadius, outerRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s, float alignStroke) {\n    // alignStroke values: 0 = innner, 0.5 = center,  1 = outer\n    \n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeWidth = dDistance * feather;\n    float innerEdge = mix(1.0, 0.0, alignStroke);\n    float outerEdge = mix(0.0, 1.0, alignStroke);\n\n    // Apply stroke width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float dxStrokeWidth = dx * strokeWidth;\n    float innerRadius = radius - dxStrokeWidth * innerEdge;\n    float outerRadius = radius + dxStrokeWidth * outerEdge;\n    float value = smoothstep(innerRadius - edgeWidth * .5, innerRadius + edgeWidth * .5, distance) * (1. - smoothstep(outerRadius - edgeWidth * .5, outerRadius + edgeWidth * .5, distance));\n\n    return value;\n}\n\nfloat createCircle(vec2 uv, float s) {\n    float scale = 1.0 / s;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n    float radius = 0.5;\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeFeather = dDistance * feather;\n\n    // Apply radius width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float circleRadius = radius;\n    float value = smoothstep(circleRadius + edgeFeather * .5, circleRadius - edgeFeather * .5, distance);\n    // float value = smoothstep(circleRadius, circleRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createCircle(vec2 uv, float radius, float s) {\n    float scale = 1.0 / s;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeFeather = dDistance * feather;\n\n    // Apply radius width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float circleRadius = dx * radius;\n    float value = smoothstep(circleRadius, circleRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createGradient(vec2 center) {\n    float angleFromCenter = atan(-center.x, -center.y);\n    return (angleFromCenter + PI) / (PI * 2.0);\n}\n\nvoid main() {\n    vec2 uv = vUv;\n\n    uv = rotateUV(uv, toRadians(uRotation) + 0.15);\n\n    vec2 center = uv - 0.5;\n\n    float ring = createRing(vUv, uStrokeWidth, 0.9);\n    float gradient = createGradient(center);\n    float ringInner = createRing(uv, uStrokeWidth, uInnerRingProgress);\n    ringInner *= 1.0 - uInnerRingProgress;\n\n    float progressEnd = uProgress * uProgressEdges.y * uInProgress;\n    vec2 circlePos = vec2(uv.x + sin(progressEnd * PI_2 + PI) * 0.44, uv.y + cos(progressEnd * PI_2 + PI) * 0.44);\n    float circle = createCircle(circlePos, uCircleWidth, 1.0 * uInProgress);\n\n    float baseRing = ring * 0.2 * step(gradient, uInProgress);\n    float start = step(uProgressEdges.x * uProgress * uInProgress, gradient);\n    float end = 1.0 - step(progressEnd, gradient);\n    float progressRing = start * end * ring * uInProgress;\n    \n    float alpha = (baseRing + ringInner + progressRing);// + circle;\n    \n    gl_FragColor = vec4(vec3(1.0), alpha);\n}\n\n',
                              depthTest: !1,
                            });
                            (e.extensions.derivatives = !0),
                              (this.mesh = new $e.Mesh(et, e)),
                              this.mesh.scale.set(this.size.x, this.size.y),
                              this.mesh.layers.set(this.options.layer);
                            var t,
                              n,
                              i,
                              r,
                              o,
                              a = Qn('arrowhead-down');
                            (this.arrow = new $e.Mesh(
                              et,
                              ((n = (t = a).image),
                              (i = t.transparent),
                              (r = void 0 === i || i),
                              ((o = new $e.Texture(n)).needsUpdate = !0),
                              new $e.MeshBasicMaterial({
                                map: o,
                                transparent: r,
                              })),
                            )),
                              this.arrow.layers.set(this.options.layer),
                              this.object.add(this.mesh),
                              this.object.add(this.arrow),
                              (this.object.name = 'ProgressRing');
                          },
                        },
                        {
                          key: 'setPointerClick',
                          value: function () {
                            this.props.render &&
                              Ke(this.bbox) &&
                              $().scrollToNextSection();
                          },
                        },
                        {
                          key: 'setSize',
                          value: function (e) {
                            this.size.set(e, e), this.mesh.scale.set(e, e, 1);
                          },
                        },
                        {
                          key: 'setProgress',
                          value: function (e) {
                            Math.abs(this.progressTg - e);
                            this.progressTg = Object(A.a)(e, 0, 1);
                          },
                        },
                        {
                          key: 'loop',
                          value: function (e) {
                            var t = this;
                            (this.blockTg = e > 0 ? 1 : 0),
                              e < 0
                                ? ((this.progress = this.progressTg),
                                  (this.tweens.startEdge = 1))
                                : (this.blockProgress = !0),
                              L.b.killTweensOf(this.tweens),
                              L.b.to(this.tweens, 2, {
                                rotation: e > 0 ? -180 : 0,
                                startEdge: e > 0 ? 1 : 0,
                                ease: 'easeInOutQuart',
                                onComplete: function () {
                                  e > 0 &&
                                    ((t.progress = 0),
                                    (t.progressTg = 0),
                                    (t.tweens.rotation = 0),
                                    (t.tweens.startEdge = 0)),
                                    (t.blockProgress = !1);
                                },
                              }),
                              L.b.to(this.tweens, 1.5, {
                                innerRingProgress: 1,
                                ease: 'easeInOutQuart',
                                delay: 0.15,
                                onComplete: function () {},
                              });
                          },
                        },
                        {
                          key: 'onActive',
                          value: function () {
                            var e = this;
                            L.b.killTweensOf(this.tweens),
                              L.b.set(this.tweens, { rotation: 180 }),
                              L.b.to(this.tweens, 2, {
                                rotation: 0,
                                inProgress: 1,
                                ease: 'easeInOutQuart',
                                delay: 0.5,
                                onStart: function () {
                                  (e.props.render = !0),
                                    e.bbox.setFromObject(e.object);
                                },
                              }),
                              L.b.fromTo(
                                this.tweens,
                                1.5,
                                { arrowPr: 1 },
                                { arrowPr: 0, ease: 'easeOutExpo', delay: 1.5 },
                              );
                          },
                        },
                        {
                          key: 'offActive',
                          value: function () {
                            var e = this;
                            L.b.killTweensOf(this.tweens),
                              L.b.to(this.tweens, 2, {
                                rotation: 180,
                                inProgress: 0,
                                ease: 'easeInOutQuart',
                                onComplete: function () {
                                  e.props.render = !1;
                                },
                              }),
                              L.b.to(this.tweens, 0.8, {
                                arrowPr: -1,
                                ease: 'easeInQuart',
                              });
                          },
                        },
                        {
                          key: 'whileRender',
                          value: function () {
                            var e = this.blockProgress ? 1 : this.progressTg;
                            (this.progress += 0.1 * (e - this.progress)),
                              (this.mesh.material.uniforms.uProgress.value = this.progress),
                              (this.mesh.material.uniforms.uInProgress.value = this.tweens.inProgress),
                              (this.mesh.material.uniforms.uInnerRingProgress.value = this.tweens.innerRingProgress),
                              (this.mesh.material.uniforms.uProgressEdges.value.x = this.tweens.startEdge),
                              (this.mesh.material.uniforms.uProgressEdges.value.y = this.tweens.endEdge),
                              (this.mesh.material.uniforms.uRotation.value = this.tweens.rotation),
                              (this.arrow.position.y =
                                50 * this.tweens.arrowPr * this.props.scale),
                              (this.arrow.material.opacity =
                                1 - Math.abs(this.tweens.arrowPr));
                            var t = 1 - Math.abs(0.5 * this.tweens.arrowPr);
                            this.arrow.scale.set(14 * t, 14 * t, 1);
                          },
                        },
                      ]) && Pi(n.prototype, i),
                      r && Pi(n, r),
                      t
                    );
                  })()),
                ) || gi),
            ) || gi,
          Mi = function (e, t, n, i) {
            var r = Object.getOwnPropertyDescriptor(e, n),
              o = r.value;
            (r.value = function () {
              if (this[t] !== i) {
                this[t] = i;
                for (
                  var e = arguments.length, n = new Array(e), r = 0;
                  r < e;
                  r++
                )
                  n[r] = arguments[r];
                o.call.apply(o, [this].concat(n));
              }
            }),
              Object.defineProperty(e, n, r);
          },
          ji = function (e, t, n) {
            var i =
              arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            return function (r) {
              var o = '_'.concat(e),
                a = r.prototype;
              (a[o] = i),
                Mi(r.prototype, o, t, !0),
                Mi(r.prototype, o, n, !1),
                (a[e] = function () {
                  return this[o];
                });
            };
          },
          Fi = function (e) {
            return ji('visible', 'show', 'hide', e);
          },
          Ri = n(164);
        function Ci(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Ei(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Ci(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Ci(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Li(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ii(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Di(e) {
          return (Di = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ui(e, t) {
          return (Ui =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var zi,
          Ni,
          Bi = Object(u.a)(),
          Vi =
            Qe(
              (Si =
                Object(it.a)(rt)(
                  (Si = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = Ii(
                          this,
                          (e = Di(t)).call.apply(e, [this].concat(r)),
                        )).props = {
                          active: !1,
                          visible: !1,
                          render: !1,
                          progress: [
                            Bi,
                            function (e) {
                              return e.totalProgress;
                            },
                          ],
                          pointerClick: [
                            Bi,
                            function (e) {
                              return e.pointer.click;
                            },
                          ],
                          pointerPosition: [
                            Bi,
                            function (e) {
                              return e.pointer.position;
                            },
                          ],
                          rollover: !1,
                          cursorDefault: 'default',
                          scale: [
                            Bi,
                            function (e) {
                              return e.viewport.scale;
                            },
                          ],
                          size: [
                            Bi,
                            function (e) {
                              return 40 * e.viewport.scale;
                            },
                          ],
                        }),
                        (n.anim = { showDelay: 0, hideDelay: 0 }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && Ui(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e = Ei(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (window.prRing = this),
                                            (this.tweens = {
                                              rotation: 0,
                                              startEdge: 0,
                                              endEdge: 1,
                                              inProgress: 0,
                                              activeProgress: 0,
                                            }),
                                            (this.progress = 0),
                                            (this.progressTg = 0),
                                            (this.blockedTg = 0),
                                            (this.deltaPr = 0),
                                            (this.bbox = new $e.Box3()),
                                            (this.hitbox = new $e.Mesh(et, tt)),
                                            this.object.add(this.hitbox),
                                            (e.next = 11),
                                            this.setupText()
                                          );
                                        case 11:
                                          this.setupMesh();
                                        case 12:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupText',
                          value: (function () {
                            var e = Ei(
                              regeneratorRuntime.mark(function e() {
                                var t = this;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (e.next = 2), new yi();
                                        case 2:
                                          return (
                                            (this.text = e.sent),
                                            (e.next = 5),
                                            this.text.setup({
                                              options: {
                                                layer: this.options.layer,
                                                text: this.options.category[
                                                  'menu-title'
                                                ],
                                                align: 'right',
                                                textTransform: 'uppercase',
                                                font: 'bold',
                                                letterSpacing: 3,
                                              },
                                              props: {
                                                alpha: 0,
                                                fontSize: [
                                                  Bi,
                                                  function (e) {
                                                    return 16 * e.viewport.scale;
                                                  },
                                                ],
                                                width: [
                                                  Bi,
                                                  function (e) {
                                                    var n =
                                                      250 * e.viewport.scale;
                                                    return (
                                                      (t.text.props.pX =
                                                        0.7 * -n),
                                                      n
                                                    );
                                                  },
                                                ],
                                              },
                                            })
                                          );
                                        case 5:
                                          this.object.add(this.text.object);
                                        case 6:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupMesh',
                          value: function () {
                            var e = new $e.ShaderMaterial({
                              uniforms: {
                                uRotation: { value: 0 },
                                uProgress: { value: 0 },
                                uInProgress: { value: 0 },
                                uActiveProgress: { value: 0 },
                                uProgressEdges: { value: new $e.Vector2(0, 1) },
                                uStrokeWidth: {
                                  value: 1.5 * Bi.state.viewport.pixelRatio,
                                },
                                uCircleRadius: {
                                  value: 3 * Bi.state.viewport.pixelRatio,
                                },
                              },
                              transparent: !0,
                              vertexShader: Je,
                              fragmentShader:
                                '#define GLSLIFY 1\n#define PI 3.141592653589793\n\nuniform float uProgress;\nuniform float uInProgress;\nuniform float uActiveProgress;\nuniform float uStrokeWidth;\nuniform float uCircleRadius;\nuniform float uRotation;\nuniform vec2 uProgressEdges;\n\nvarying vec2 vUv;\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat toRadians(float deg) {\n\treturn deg * (3.141592653589793 / 180.0);\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s) {\n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(uv - 0.5) * scale;\n    \n    // Calculate edge antialias feather\n    float distance = length(center);\n    float edgeFeather = fwidth(distance) * feather;\n\n    // Calculate fixed stroke width regardless of scale\n    float dx = dFdx(uv.x);\n    strokeWidth = dx * strokeWidth;\n  \n    float innerRadius = radius - strokeWidth;\n    float outerRadius = radius;\n    float value = smoothstep(innerRadius - edgeFeather, innerRadius, distance) * \n                  smoothstep(outerRadius, outerRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s, float alignStroke) {\n    // alignStroke values: 0 = innner, 0.5 = center,  1 = outer\n    \n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeWidth = dDistance * feather;\n    float innerEdge = mix(1.0, 0.0, alignStroke);\n    float outerEdge = mix(0.0, 1.0, alignStroke);\n\n    // Apply stroke width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float dxStrokeWidth = dx * strokeWidth;\n    float innerRadius = radius - dxStrokeWidth * innerEdge;\n    float outerRadius = radius + dxStrokeWidth * outerEdge;\n    float value = smoothstep(innerRadius - edgeWidth * .5, innerRadius + edgeWidth * .5, distance) * (1. - smoothstep(outerRadius - edgeWidth * .5, outerRadius + edgeWidth * .5, distance));\n\n    return value;\n}\n\nfloat createCircle(vec2 uv, float s) {\n    float scale = 1.0 / s;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n    float radius = 0.5;\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeFeather = dDistance * feather;\n\n    // Apply radius width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float circleRadius = radius;\n    float value = smoothstep(circleRadius + edgeFeather * .5, circleRadius - edgeFeather * .5, distance);\n    // float value = smoothstep(circleRadius, circleRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createCircle(vec2 uv, float radius, float s) {\n    float scale = 1.0 / s;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeFeather = dDistance * feather;\n\n    // Apply radius width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float circleRadius = dx * radius;\n    float value = smoothstep(circleRadius, circleRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createGradient(vec2 center) {\n    float angleFromCenter = atan(-center.x, -center.y);\n    return (angleFromCenter + PI) / (PI * 2.0);\n}\n\nvoid main() {\n    vec2 uv = vUv;\n\n    uv = rotateUV(uv, toRadians(uRotation));\n\n    vec2 center = uv - 0.5;\n\n    float num = PI;\n    float ring = createRing(vUv, uStrokeWidth, 1.0);\n    float circle = createCircle(vUv, uCircleRadius, uInProgress) * mix(0.5, 1.0, uActiveProgress);\n    float gradient = createGradient(center);\n\n    float baseRing = ring * 0.2 * uActiveProgress;\n    float start = step(uProgressEdges.x * uProgress, gradient);\n    float end = 1.0 - step(uProgressEdges.y * uProgress, gradient);\n    float progressRing = start * end * ring;\n\n    float alpha = circle + baseRing + progressRing;\n\n    gl_FragColor = vec4(vec3(1.0), alpha);\n}\n',
                              depthTest: !1,
                            });
                            (e.extensions.derivatives = !0),
                              (this.mesh = new $e.Mesh(et, e)),
                              this.mesh.layers.set(this.options.layer),
                              this.object.add(this.mesh),
                              (this.object.name = 'SideNavItem');
                          },
                        },
                        {
                          key: 'setPointerClick',
                          value: function () {
                            this.props.visible &&
                              (this.bbox.setFromObject(this.hitbox),
                              Ke(this.bbox) &&
                                (c.a.isMobile || c.a.isTablet
                                  ? $().scrollTo(
                                      J(this.options.category['scroll-target']),
                                    )
                                  : V().scrollTo(
                                      B(this.options.category['scroll-target']),
                                    )));
                          },
                        },
                        {
                          key: 'setPointerPosition',
                          value: function () {
                            if (this.props.visible) {
                              var e = Ke(this.bbox);
                              this.props.rollover = !!e;
                            }
                          },
                        },
                        {
                          key: 'setRollover',
                          value: function (e) {
                            if (e) {
                              Bi.state.cursor = 'pointer';
                              var t = 0.7 * -this.text.props.width;
                              L.b.killTweensOf(this.text.props),
                                L.b.to(this.text.props, 2, {
                                  alpha: 1,
                                  pX: t,
                                  ease: 'easeOutExpo',
                                });
                            } else {
                              Bi.state.cursor = this.props.cursorDefault;
                              var n = 0.7 * -this.text.props.width - 20;
                              L.b.killTweensOf(this.text.props),
                                L.b.to(this.text.props, 0.5, {
                                  alpha: 0,
                                  pX: n,
                                  ease: 'easeOutSine',
                                });
                            }
                          },
                        },
                        {
                          key: 'setSize',
                          value: function (e) {
                            this.mesh.scale.set(e, e, 1),
                              this.hitbox.scale.set(e, e, 1);
                          },
                        },
                        {
                          key: 'setProgress',
                          value: function (e) {
                            (this.deltaPr = this.progressTg - e),
                              (this.progressTg = Object(A.a)(e, 0, 1));
                          },
                        },
                        {
                          key: 'onVisible',
                          value: function () {
                            var e = this;
                            L.b.killTweensOf(this.tweens, {
                              rotation: !0,
                              inProgress: !0,
                            }),
                              L.b.fromTo(
                                this.tweens,
                                2,
                                { rotation: 180 },
                                {
                                  rotation: 0,
                                  inProgress: 1,
                                  ease: 'easeInOutQuart',
                                  delay: this.anim.showDelay,
                                  onStart: function () {
                                    e.props.render = !0;
                                  },
                                },
                              ),
                              this.bbox.setFromObject(this.hitbox),
                              this.props.active && this.onActive();
                          },
                        },
                        {
                          key: 'offVisible',
                          value: function () {
                            var e = this;
                            this.props.render &&
                              (L.b.killTweensOf(this.tweens, {
                                rotation: !0,
                                inProgress: !0,
                                startEdge: !0,
                                activeProgress: !0,
                              }),
                              L.b.to(this.tweens, 1, {
                                rotation: -180,
                                inProgress: 0,
                                startEdge: 1,
                                activeProgress: 0,
                                ease: 'easeInOutQuart',
                                delay: this.anim.hideDelay,
                                onComplete: function () {
                                  e.props.visible || (e.props.render = !1);
                                },
                              }));
                          },
                        },
                        {
                          key: 'onActive',
                          value: function () {
                            (this.blockProgress = !1),
                              L.b.killTweensOf(this.tweens, {
                                startEdge: !0,
                                activeProgress: !0,
                                endEdge: !0,
                                rotation: !0,
                              }),
                              L.b.fromTo(
                                this.tweens,
                                2,
                                { rotation: 180, startEdge: 0, endEdge: 0 },
                                {
                                  activeProgress: 1,
                                  endEdge: 1,
                                  rotation: 0,
                                  ease: 'easeInOutQuart',
                                  delay: this.anim.hideDelay,
                                  onComplete: function () {},
                                },
                              );
                            var e = 0.7 * -this.text.props.width,
                              t = e - 20;
                            L.b.killTweensOf(this.text.props),
                              L.b.fromTo(
                                this.text.props,
                                2,
                                { alpha: 0, pX: t },
                                {
                                  delay: 1,
                                  alpha: 1,
                                  pX: e,
                                  ease: 'easeOutExpo',
                                },
                              ),
                              L.b.to(this.text.props, 0.8, {
                                delay: 3.5,
                                alpha: 0,
                                pX: t,
                                ease: 'easeInQuart',
                              });
                          },
                        },
                        {
                          key: 'offActive',
                          value: function () {
                            var e = this;
                            if (this.props.render) {
                              var t =
                                  s.a
                                    .pluck(qn, 'name')
                                    .indexOf(Bi.state.currentCategory) -
                                  this.options.index,
                                n = t > 0 ? 1 : -1;
                              t < -1 && (n = 1),
                                (this.blockProgress = !0),
                                (this.blockedTg = n > 0 ? 1 : 0),
                                L.b.killTweensOf(this.tweens, {
                                  rotation: !0,
                                  startEdge: !0,
                                  activeProgress: !0,
                                }),
                                (this.outTween = L.b.to(this.tweens, 1, {
                                  rotation: n > 0 ? -180 : 0,
                                  startEdge: n > 0 ? 1 : 0,
                                  activeProgress: 0,
                                  ease: 'easeInOutQuart',
                                  delay: this.anim.hideDelay,
                                  onComplete: function () {
                                    (e.progress = 0),
                                      (e.tweens.rotation = 0),
                                      (e.tweens.startEdge = 0),
                                      (e.tweens.endEdge = 0),
                                      (e.blockProgress = !1);
                                  },
                                }));
                              var i = 0.7 * -this.text.props.width - 20;
                              L.b.killTweensOf(this.text.props),
                                L.b.to(this.text.props, 0.8, {
                                  alpha: 0,
                                  pX: i,
                                  ease: 'easeInQuart',
                                });
                            }
                          },
                        },
                        {
                          key: 'whileRender',
                          value: function () {
                            var e = this.props.progress;
                            this.props.active || (e = 0),
                              this.blockProgress && (e = this.blockedTg),
                              (this.progress += 0.1 * (e - this.progress)),
                              (this.mesh.material.uniforms.uProgress.value = this.progress),
                              (this.mesh.material.uniforms.uInProgress.value = this.tweens.inProgress),
                              (this.mesh.material.uniforms.uActiveProgress.value = this.tweens.activeProgress),
                              (this.mesh.material.uniforms.uProgressEdges.value.x = this.tweens.startEdge),
                              (this.mesh.material.uniforms.uProgressEdges.value.y = this.tweens.endEdge),
                              (this.mesh.material.uniforms.uRotation.value = this.tweens.rotation);
                          },
                        },
                        { key: 'whileVisible', value: function () {} },
                      ]) && Li(n.prototype, i),
                      r && Li(n, r),
                      t
                    );
                  })()),
                ) || Si),
            ) || Si;
        function Yi(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Hi(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Yi(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Yi(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Xi(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Gi(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Wi(e) {
          return (Wi = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Qi(e, t) {
          return (Qi =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var qi = Object(u.a)(),
          Zi =
            (Object(S.a)(),
            Qe(
              (zi =
                Object(it.a)(rt)(
                  ((function (e, t, n, i, r) {
                    var o = {};
                    Object.keys(i).forEach(function (e) {
                      o[e] = i[e];
                    }),
                      (o.enumerable = !!o.enumerable),
                      (o.configurable = !!o.configurable),
                      ('value' in o || o.initializer) && (o.writable = !0),
                      (o = n
                        .slice()
                        .reverse()
                        .reduce(function (n, i) {
                          return i(e, t, n) || n;
                        }, o)),
                      r &&
                        void 0 !== o.initializer &&
                        ((o.value = o.initializer
                          ? o.initializer.call(r)
                          : void 0),
                        (o.initializer = void 0)),
                      void 0 === o.initializer &&
                        (Object.defineProperty(e, t, o), (o = null));
                  })(
                    (Ni = (function (e) {
                      function t() {
                        var e, n;
                        !(function (e, t) {
                          if (!(e instanceof t))
                            throw new TypeError(
                              'Cannot call a class as a function',
                            );
                        })(this, t);
                        for (
                          var i = arguments.length, r = new Array(i), o = 0;
                          o < i;
                          o++
                        )
                          r[o] = arguments[o];
                        return (
                          ((n = Gi(
                            this,
                            (e = Wi(t)).call.apply(e, [this].concat(r)),
                          )).props = {
                            appStared: [
                              qi,
                              function (e) {
                                return e.started;
                              },
                            ],
                            active: !1,
                            render: !1,
                            currentSection: [
                              qi,
                              function (e) {
                                return e.currentSection;
                              },
                            ],
                            viewport: [
                              qi,
                              function (e) {
                                return s.a.pick(
                                  e.viewport,
                                  'width',
                                  'height',
                                  'scale',
                                );
                              },
                            ],
                            pX: [
                              qi,
                              function (e) {
                                return 0.47 * e.viewport.width;
                              },
                            ],
                          }),
                          (n.anim = { showDelay: 0 }),
                          n
                        );
                      }
                      var n, i, r;
                      return (
                        (function (e, t) {
                          if ('function' != typeof t && null !== t)
                            throw new TypeError(
                              'Super expression must either be null or a function',
                            );
                          (e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                              value: e,
                              writable: !0,
                              configurable: !0,
                            },
                          })),
                            t && Qi(e, t);
                        })(t, le['a']),
                        (n = t),
                        (i = [
                          {
                            key: 'onSetup',
                            value: (function () {
                              var e = Hi(
                                regeneratorRuntime.mark(function e() {
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (e.next = 2), this.setupItems()
                                            );
                                          case 2:
                                            (this.items = e.sent),
                                              (this.object.name = 'SideNav');
                                          case 4:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'setupItems',
                            value: (function () {
                              var e = Hi(
                                regeneratorRuntime.mark(function e() {
                                  var t,
                                    n = this;
                                  return regeneratorRuntime.wrap(function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (e.next = 2),
                                            Promise.all(
                                              qn.map(
                                                (function () {
                                                  var e = Hi(
                                                    regeneratorRuntime.mark(
                                                      function e(t, i) {
                                                        var r;
                                                        return regeneratorRuntime.wrap(
                                                          function (e) {
                                                            for (;;)
                                                              switch (
                                                                (e.prev = e.next)
                                                              ) {
                                                                case 0:
                                                                  return (
                                                                    (e.next = 2),
                                                                    new Vi().setup(
                                                                      {
                                                                        options: {
                                                                          layer:
                                                                            n
                                                                              .options
                                                                              .layer,
                                                                          category: t,
                                                                          index: i,
                                                                        },
                                                                        props: {
                                                                          cursorDefault: [
                                                                            qi,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return 'result' ===
                                                                                e.currentSection &&
                                                                                e.hotspot
                                                                                ? 'grab'
                                                                                : 'default';
                                                                            },
                                                                          ],
                                                                          pY: function (
                                                                            e,
                                                                          ) {
                                                                            return (
                                                                              (e.size +
                                                                                10) *
                                                                              -i
                                                                            );
                                                                          },
                                                                          active: [
                                                                            qi,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return (
                                                                                e.currentCategory ===
                                                                                t.name
                                                                              );
                                                                            },
                                                                          ],
                                                                          progress: [
                                                                            qi,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return e
                                                                                .categoryProgresses[
                                                                                i +
                                                                                  1
                                                                              ];
                                                                            },
                                                                          ],
                                                                        },
                                                                      },
                                                                    )
                                                                  );
                                                                case 2:
                                                                  return (
                                                                    (r = e.sent),
                                                                    n.object.add(
                                                                      r.object,
                                                                    ),
                                                                    e.abrupt(
                                                                      'return',
                                                                      r,
                                                                    )
                                                                  );
                                                                case 5:
                                                                case 'end':
                                                                  return e.stop();
                                                              }
                                                          },
                                                          e,
                                                        );
                                                      },
                                                    ),
                                                  );
                                                  return function (t, n) {
                                                    return e.apply(
                                                      this,
                                                      arguments,
                                                    );
                                                  };
                                                })(),
                                              ),
                                            )
                                          );
                                        case 2:
                                          return (
                                            (t = e.sent)[
                                              qn.length - 1
                                            ].store.compute(function (e) {
                                              n.props.pY = -e.pY / 2;
                                            }),
                                            e.abrupt('return', t)
                                          );
                                        case 5:
                                        case 'end':
                                          return e.stop();
                                      }
                                  }, e);
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'onActive',
                            value: function () {
                              var e = this;
                              (this.props.render = !0),
                                this.items.forEach(function (t) {
                                  (t.anim.showDelay =
                                    e.anim.showDelay + 0.1 * t.options.index),
                                    (t.props.visible = !0);
                                }),
                                L.b.killDelayedCallsTo(this.offActiveDelay);
                            },
                          },
                          {
                            key: 'offActive',
                            value: function () {
                              this.items.forEach(function (e) {
                                e.props.visible = !1;
                              }),
                                L.b.delayedCall(2, this.offActiveDelay);
                            },
                          },
                          {
                            key: 'offActiveDelay',
                            value: function () {
                              this.props.render = !1;
                            },
                          },
                          { key: 'whileRender', value: function () {} },
                        ]) && Xi(n.prototype, i),
                        r && Xi(n, r),
                        t
                      );
                    })()).prototype,
                    'offActiveDelay',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      Ni.prototype,
                      'offActiveDelay',
                    ),
                    Ni.prototype,
                  ),
                  (zi = Ni)),
                ) || zi),
            ) || zi),
          Ki = n(405),
          $i = n.n(Ki);
        n(406);
        function Ji(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function er(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function tr(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function nr(e) {
          return (nr = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function ir(e, t) {
          return (ir =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var rr,
          or = Object(u.a)(),
          ar = (c.a.isMobile, 'click'),
          sr = function (e, t, n, i, r) {
            e.addEventListener(ar, function (e) {
              e.preventDefault(),
                m('Menu Selection', 'Click', r),
                (or.state.navigation.hotspotDna = !1),
                (or.state.navigation.hotspotStalk = !1),
                (or.state.navigation.hotspotKernel = !1),
                c.a.isMobile || c.a.isTablet
                  ? $().scrollTo(J(n, i))
                  : V().scrollTo(B(n, i)),
                (or.state.navigation.menu = !1);
            });
          },
          ur = function (e, t, n) {
            e.addEventListener('click', function () {
              m('Menu Selection', 'Click', n),
                (or.state.navigation[t] = !0),
                (or.state.navigation.menu = !1),
                (or.state.submenuTriggeredFrom = 'menu');
            });
          },
          lr = (function (e) {
            function t() {
              var e, n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = tr(
                  this,
                  (e = nr(t)).call.apply(e, [this].concat(r)),
                )).el = void 0),
                (n.props = {
                  open: [
                    or,
                    function (e) {
                      return e.navigation.menu;
                    },
                  ],
                  subMenu: [
                    or,
                    function (e) {
                      return (
                        e.navigation.signup ||
                        e.navigation.contact ||
                        e.navigation.legal
                      );
                    },
                  ],
                }),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && ir(e, t);
              })(t, le['a']),
              (n = t),
              (i = [
                {
                  key: 'onSetup',
                  value: (function () {
                    var e,
                      t =
                        ((e = regeneratorRuntime.mark(function e(t) {
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    (this.el = t.parent.appendChild(
                                      $i()({ desktop: !c.a.isMobile, copy: p }),
                                    )),
                                      (this.ui = Object(M.a)(this.el)),
                                      (this.titles = [
                                        this.ui.btnScience,
                                        this.ui.btnTesting,
                                        this.ui.btnResult,
                                      ]),
                                      (this.btns = [
                                        this.ui.btnSignup,
                                        this.ui.btnContact,
                                        this.ui.btnLegal,
                                        this.ui.btnPodcast,
                                      ]),
                                      (this.uiMain = s.a.flatten([
                                        this.titles,
                                        this.btns,
                                      ])),
                                      (this.uiSecondary = [
                                        this.ui.header,
                                        this.ui.footer,
                                      ]),
                                      sr(
                                        this.ui.btnScience,
                                        0,
                                        'science',
                                        'dna',
                                        p['menu-item_one-title'],
                                      ),
                                      sr(
                                        this.ui.btnTesting,
                                        0,
                                        'stalk',
                                        'a',
                                        p['menu-item_two-title'],
                                      ),
                                      sr(
                                        this.ui.btnResult,
                                        0,
                                        'result',
                                        'kernel',
                                        p['menu-item_three-title'],
                                      ),
                                      ur(
                                        this.ui.btnSignup,
                                        'signup',
                                        p['menu-item_four-label'],
                                      ),
                                      ur(
                                        this.ui.btnContact,
                                        'contact',
                                        p['menu-item_five-label'],
                                      ),
                                      ur(
                                        this.ui.btnLegal,
                                        'legal',
                                        p['menu-item_btn-legal'],
                                      ),
                                      this.ui.btnTwitter.addEventListener(
                                        'click',
                                        function () {
                                          m(
                                            'Social Media Share',
                                            'Click',
                                            'Twitter',
                                          );
                                        },
                                      ),
                                      this.ui.btnFacebook.addEventListener(
                                        'click',
                                        function () {
                                          m(
                                            'Social Media Share',
                                            'Click',
                                            'Facebook',
                                          );
                                        },
                                      ),
                                      this.ui.btnInsta.addEventListener(
                                        'click',
                                        function () {
                                          m(
                                            'Social Media Share',
                                            'Click',
                                            'Instagram',
                                          );
                                        },
                                      ),
                                      this.ui.btnPodcast.addEventListener(
                                        'click',
                                        function () {
                                          m(
                                            'Menu Selection',
                                            'Click',
                                            'Corn Revolution Podcast',
                                          );
                                        },
                                      ),
                                      this.ui.linkPioneer.addEventListener(
                                        'click',
                                        function () {
                                          m(
                                            'Menu Link',
                                            'Click',
                                            'Visit pioneer.com',
                                          );
                                        },
                                      ),
                                      this.setInitState();
                                  case 18:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        })),
                        function () {
                          var t = this,
                            n = arguments;
                          return new Promise(function (i, r) {
                            var o = e.apply(t, n);
                            function a(e) {
                              Ji(o, i, r, a, s, 'next', e);
                            }
                            function s(e) {
                              Ji(o, i, r, a, s, 'throw', e);
                            }
                            a(void 0);
                          });
                        });
                    return function (e) {
                      return t.apply(this, arguments);
                    };
                  })(),
                },
                {
                  key: 'setInitState',
                  value: function () {
                    L.b.set(this.uiMain, { alpha: 0.001, y: 20, force3D: !0 }),
                      L.b.set(this.uiSecondary, { alpha: 0.001, force3D: !0 }),
                      (this.el.style.display = 'none');
                  },
                },
                {
                  key: 'onOpen',
                  value: function () {
                    (this.el.style.display = c.a.isMobile ? 'block' : 'flex'),
                      (this.el.scrollTop = 0);
                    var e = or.state.viewport.scale,
                      t = c.a.isMobile ? 0.8 : 0.6,
                      n = e * (c.a.isMobile, 80);
                    L.b.killTweensOf(this.uiMain),
                      L.b.set(this.uiMain, { alpha: 0.001, x: 0, y: n }),
                      L.b.staggerTo(
                        this.uiMain,
                        2,
                        {
                          alpha: 0.999,
                          x: 0,
                          y: 0,
                          ease: 'easeOutExpo',
                          delay: t,
                        },
                        0.05,
                      ),
                      L.b.staggerTo(
                        this.uiSecondary,
                        1.4,
                        { alpha: 0.999, ease: 'easeOutSine', delay: t + 0.2 },
                        0.1,
                      );
                  },
                },
                {
                  key: 'offOpen',
                  value: function () {
                    var e,
                      t,
                      n = this;
                    this.props.subMenu
                      ? ((e = or.state.viewport.scale * (c.a.isMobile, -120)),
                        (t = 0))
                      : ((e = 0),
                        (t = or.state.viewport.scale * (c.a.isMobile, -80))),
                      L.b.killTweensOf(this.uiMain),
                      L.b.staggerTo(
                        this.uiMain,
                        0.6,
                        { alpha: 0.001, x: e, y: t, ease: 'easeInQuart' },
                        0.03,
                        function () {
                          n.el.style.display = 'none';
                        },
                      ),
                      L.b.to(this.uiSecondary, 0.2, {
                        alpha: 0.001,
                        ease: 'easeInQuart',
                      });
                  },
                },
              ]) && er(n.prototype, i),
              r && er(n, r),
              t
            );
          })(),
          cr = n(408),
          pr = n.n(cr);
        n(409);
        function hr(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function fr(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                hr(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                hr(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function dr(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function vr(e) {
          return (vr = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function mr(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function gr(e, t) {
          return (gr =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var br,
          yr = Object(u.a)(),
          wr = function (e) {
            if (void 0 === e) return !1;
            if (0 === (e = e.trim()).length) return !1;
            return e.match(
              /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
            );
          },
          xr = function (e) {
            return new Promise(function (t) {
              setTimeout(t, e);
            });
          },
          Pr =
            ((function (e, t, n, i, r) {
              var o = {};
              Object.keys(i).forEach(function (e) {
                o[e] = i[e];
              }),
                (o.enumerable = !!o.enumerable),
                (o.configurable = !!o.configurable),
                ('value' in o || o.initializer) && (o.writable = !0),
                (o = n
                  .slice()
                  .reverse()
                  .reduce(function (n, i) {
                    return i(e, t, n) || n;
                  }, o)),
                r &&
                  void 0 !== o.initializer &&
                  ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                  (o.initializer = void 0)),
                void 0 === o.initializer &&
                  (Object.defineProperty(e, t, o), (o = null));
            })(
              (rr = (function (e) {
                function t() {
                  var e, n, i, r;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var o = arguments.length, a = new Array(o), s = 0;
                    s < o;
                    s++
                  )
                    a[s] = arguments[s];
                  return (
                    (i = this),
                    (r = (e = vr(t)).call.apply(e, [this].concat(a))),
                    ((n =
                      !r || ('object' != typeof r && 'function' != typeof r)
                        ? mr(i)
                        : r).el = void 0),
                    (n.ui = void 0),
                    (n.submitLocked = !1),
                    (n.props = {
                      visible: [
                        yr,
                        function (e) {
                          return e.navigation.signup;
                        },
                      ],
                    }),
                    (n.getEloquaCustomerGuid = function () {
                      var e,
                        t = 'elqCustomerGUID',
                        i = 5,
                        r = mr(n);
                      !(function n() {
                        if (e) {
                          if (0 === i) return;
                          if ('function' == typeof window.GetElqCustomerGUID) {
                            var o = window.GetElqCustomerGUID();
                            return void (
                              o &&
                              ((a = t),
                              (s = o),
                              (u = r.ui.form.elements[a]) ||
                                (((u = document.createElement('input')).name = a),
                                r.ui.form.appendChild(u)),
                              (u.value = s),
                              (u.hidden = !0),
                              window.localStorage.setItem(t, o))
                            );
                          }
                          i -= 1;
                        }
                        var a, s, u;
                        e = setTimeout(n, 400);
                      })(),
                        (window._elqQ = window._elqQ || []),
                        window._elqQ.push(['elqGetCustomerGUID']);
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && gr(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = fr(
                          regeneratorRuntime.mark(function e(t) {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      console.log('signup-setup'),
                                        (this.el = t.parent.appendChild(
                                          pr()({
                                            desktop: !c.a.isMobile,
                                            copy: p,
                                          }),
                                        )),
                                        (this.ui = Object(M.a)(this.el)),
                                        this.ui.form.addEventListener(
                                          'submit',
                                          this.onSubmitForm,
                                        ),
                                        this.ui.btnBack.addEventListener(
                                          'click',
                                          function () {
                                            (yr.state.navigation.signup = !1),
                                              (yr.state.navigation.menu = !0);
                                          },
                                        ),
                                        this.getEloquaCustomerGuid(),
                                        this.setInitState();
                                    case 7:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function (t) {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setInitState',
                      value: function () {
                        console.log('signup-init-state'),
                          (this.el.style.display = 'none');
                      },
                    },
                    {
                      key: 'onVisible',
                      value: function () {
                        console.log('signup-visible');
                        for (var e = 0; e < Object.keys(this.ui).length; e += 1) {
                          var t = Object.keys(this.ui)[e],
                            n = this.ui[t];
                          n.classList && n.classList.remove('hasError'),
                            n.value && (n.value = '');
                        }
                        (this.submitLocked = !1),
                          (this.el.style.display = 'flex'),
                          (this.ui.sectionMain.scrollTop = 0),
                          (this.ui.sectionResponse.scrollTop = 0);
                        var i = yr.state.viewport.scale,
                          r = c.a.isMobile ? 0.8 : 0.6,
                          o = i * (c.a.isMobile, 140);
                        'footer' === yr.state.submenuTriggeredFrom
                          ? (this.ui.btnBack.style.visibility = 'hidden')
                          : (this.ui.btnBack.style.visibility = 'visible'),
                          L.b.killTweensOf(this.ui.itemMain),
                          L.b.set(this.ui.itemMain, { alpha: 0, x: o, y: 0 }),
                          L.b.staggerTo(
                            this.ui.itemMain,
                            2,
                            {
                              alpha: 1,
                              x: 0,
                              y: 0,
                              ease: 'easeOutExpo',
                              delay: r,
                            },
                            0.05,
                          );
                      },
                    },
                    {
                      key: 'offVisible',
                      value: function () {
                        var e = this,
                          t = yr.state.viewport.scale * (c.a.isMobile, -80);
                        L.b.killTweensOf(this.ui.itemMain),
                          L.b.staggerTo(
                            this.ui.itemMain,
                            0.6,
                            { alpha: 0, x: 0, y: t, ease: 'easeInQuart' },
                            0.03,
                            function () {
                              e.el.style.display = 'none';
                            },
                          ),
                          L.b.killTweensOf(this.ui.itemResponse),
                          L.b.to(this.ui.itemResponse, 0.6, {
                            alpha: 0,
                            x: 0,
                            y: t,
                            ease: 'easeInQuart',
                          });
                      },
                    },
                    {
                      key: 'onSubmitForm',
                      value: (function () {
                        var e = fr(
                          regeneratorRuntime.mark(function e(t) {
                            var n,
                              i,
                              r,
                              o,
                              a,
                              s,
                              u,
                              l,
                              c,
                              p,
                              h,
                              f,
                              d,
                              v = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      if (
                                        ((a = function (e) {
                                          var t = window.location.search.substring(
                                            1,
                                          );
                                          if (t)
                                            for (
                                              var n = t.split('&'), i = 0;
                                              i < n.length;
                                              i += 1
                                            ) {
                                              var r = n[i].split('=');
                                              if (
                                                r[0].toLowerCase() ===
                                                e.toLowerCase()
                                              )
                                                return r[1];
                                            }
                                        }),
                                        t.preventDefault(),
                                        console.log('signup-submitting'),
                                        !this.submitLocked)
                                      ) {
                                        e.next = 5;
                                        break;
                                      }
                                      return e.abrupt('return');
                                    case 5:
                                      if (!this.validateForm()) {
                                        e.next = 10;
                                        break;
                                      }
                                      for (
                                        n = this.ui.form.getElementsByTagName(
                                          'input',
                                        ),
                                          i = 0;
                                        i < n.length;
                                        i++
                                      )
                                        n[i].addEventListener(
                                          'blur',
                                          function (e) {
                                            console.log(
                                              'blurred '.concat(e.target),
                                            ),
                                              v.validateForm();
                                          },
                                        );
                                      return e.abrupt('return');
                                    case 10:
                                      for (
                                        this.submitLocked = !0,
                                          r = Date.now(),
                                          this.ui.sectionMain.scrollTop = 0,
                                          this.ui.sectionResponse.scrollTop = 0,
                                          this.showSpinner(),
                                          o = new FormData(this.ui.form),
                                          s = [
                                            'utm_content',
                                            'utm_source',
                                            'utm_medium',
                                            'utm_term',
                                            'utm_campaign',
                                          ],
                                          u = 0;
                                        u < s.length;
                                        u += 1
                                      )
                                        void 0 !== (c = a((l = s[u]))) &&
                                          c.length &&
                                          o.append(
                                            l,
                                            c
                                              .trim()
                                              .toLowerCase()
                                              .replace(/[\W]+/gi, '_'),
                                          );
                                      return (
                                        o.append(
                                          'captcha',
                                          'passed on '.concat(
                                            new Date().toDateString(),
                                          ),
                                        ),
                                        o.append('source', window.location.href),
                                        (e.next = 22),
                                        fetch(this.ui.form.action, {
                                          method: this.ui.form.method,
                                          body: o,
                                        })
                                      );
                                    case 22:
                                      return (
                                        (p = e.sent), (e.next = 25), p.text()
                                      );
                                    case 25:
                                      if (
                                        ((h = e.sent),
                                        (f = Date.now() - r),
                                        1500,
                                        !(f < 1500))
                                      ) {
                                        e.next = 31;
                                        break;
                                      }
                                      return (e.next = 31), xr(1500 - f);
                                    case 31:
                                      (this.submitLocked = !1),
                                        (d = /required|incorrect|invalid/gi.test(
                                          h,
                                        )),
                                        this.showResponse(d, h);
                                    case 34:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function (t) {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'validateForm',
                      value: function () {
                        console.log('signup-validating');
                        for (
                          var e = !1, t = 0;
                          t < Object.keys(this.ui).length;
                          t += 1
                        ) {
                          var n = Object.keys(this.ui)[t],
                            i = this.ui[n],
                            r = !1;
                          if (void 0 !== i.value) {
                            (i.value = i.value.trim()),
                              (i.title = ''),
                              0 === i.value.length &&
                                ((r = !0), (i.title = 'Field is required')),
                              'email' !== i.type.toLowerCase() ||
                                wr(i.value) ||
                                ((r = !0), (i.title = 'Please enter an email'));
                            var o = i.parentElement;
                            o.classList &&
                              (r
                                ? o.classList.add('hasError')
                                : (o.classList.remove('hasError'),
                                  (i.title = ''))),
                              r && (e = !0);
                          }
                        }
                        return e;
                      },
                    },
                    {
                      key: 'removeErrorStates',
                      value: function () {
                        for (var e = 0; e < Object.keys(this.ui).length; e += 1) {
                          var t = Object.keys(this.ui)[e],
                            n = this.ui[t];
                          n.classList && n.classList.remove('hasError'),
                            n.value && (n.value = '');
                        }
                      },
                    },
                    {
                      key: 'showSpinner',
                      value: function () {
                        L.b.killTweensOf(this.ui.itemMainForm),
                          L.b.staggerTo(
                            this.ui.itemMainForm,
                            0.6,
                            {
                              alpha: 0,
                              x: 0,
                              y: 0,
                              ease: 'easeInSine',
                              delay: 0,
                            },
                            0.03,
                          ),
                          L.b.killTweensOf(this.ui.spinner),
                          L.b.set(this.ui.spinner, { alpha: 0, x: 0, y: 0 }),
                          L.b.to(this.ui.spinner, 2, {
                            alpha: 1,
                            x: 0,
                            ease: 'easeOutSine',
                            delay: 0.6,
                          });
                      },
                    },
                    {
                      key: 'showResponse',
                      value: (function () {
                        var e = fr(
                          regeneratorRuntime.mark(function e(t) {
                            var n, i, r;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        console.log('signup-show-response'),
                                        t
                                          ? (this.ui.itemResponse.innerHTML =
                                              'We are currently facing some technical issues with the registration service.<br/>Please try again later.')
                                          : (m(
                                              'Form Submit',
                                              'Submit',
                                              'News Signup',
                                            ),
                                            (this.ui.itemResponse.innerHTML =
                                              'Thanks for signing up.')),
                                        (n = yr.state.viewport.scale),
                                        (i = c.a.isMobile ? 0.8 : 0.6),
                                        (r = n * (c.a.isMobile, 140)),
                                        0,
                                        L.b.killTweensOf(this.ui.spinner),
                                        L.b.to(this.ui.spinner, 0.6, {
                                          alpha: 0,
                                          x: -80,
                                          ease: 'easeInQuart',
                                        }),
                                        (this.ui.sectionResponse.style.display =
                                          'flex'),
                                        L.b.killTweensOf(this.ui.itemResponse),
                                        L.b.set(this.ui.itemResponse, {
                                          alpha: 0,
                                          x: r,
                                          y: 0,
                                        }),
                                        L.b.to(this.ui.itemResponse, 2, {
                                          alpha: 1,
                                          x: 0,
                                          y: 0,
                                          ease: 'easeOutExpo',
                                          delay: i,
                                        }),
                                        (e.next = 14),
                                        xr(3500)
                                      );
                                    case 14:
                                      this.props.visible && this.showMain();
                                    case 15:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function (t) {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'showMain',
                      value: function () {
                        var e = this;
                        this.removeErrorStates();
                        var t = yr.state.viewport.scale,
                          n = c.a.isMobile ? 0.8 : 0.6,
                          i = t * (c.a.isMobile, -80),
                          r = t * (c.a.isMobile, 140);
                        L.b.killTweensOf(this.ui.itemResponse),
                          L.b.to(this.ui.itemResponse, 0.6, {
                            alpha: 0,
                            x: i,
                            y: 0,
                            ease: 'easeInQuart',
                            onComplete: function () {
                              e.ui.sectionResponse.style.display = 'none';
                            },
                          }),
                          L.b.killTweensOf(this.ui.itemMainForm),
                          L.b.set(this.ui.itemMainForm, { alpha: 0, x: r, y: 0 }),
                          L.b.staggerTo(
                            this.ui.itemMainForm,
                            2,
                            {
                              alpha: 1,
                              x: 0,
                              y: 0,
                              ease: 'easeOutExpo',
                              delay: n,
                            },
                            0.05,
                          );
                      },
                    },
                  ]) && dr(n.prototype, i),
                  r && dr(n, r),
                  t
                );
              })()).prototype,
              'onSubmitForm',
              [X.a],
              Object.getOwnPropertyDescriptor(rr.prototype, 'onSubmitForm'),
              rr.prototype,
            ),
            rr),
          _r = n(411),
          kr = n.n(_r);
        n(412);
        function Or(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Sr(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Or(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Or(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Tr(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ar(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Mr(e) {
          return (Mr = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function jr(e, t) {
          return (jr =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Fr = Object(u.a)(),
          Rr = function (e) {
            return new Promise(function (t) {
              setTimeout(t, e);
            });
          },
          Cr =
            ((function (e, t, n, i, r) {
              var o = {};
              Object.keys(i).forEach(function (e) {
                o[e] = i[e];
              }),
                (o.enumerable = !!o.enumerable),
                (o.configurable = !!o.configurable),
                ('value' in o || o.initializer) && (o.writable = !0),
                (o = n
                  .slice()
                  .reverse()
                  .reduce(function (n, i) {
                    return i(e, t, n) || n;
                  }, o)),
                r &&
                  void 0 !== o.initializer &&
                  ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                  (o.initializer = void 0)),
                void 0 === o.initializer &&
                  (Object.defineProperty(e, t, o), (o = null));
            })(
              (br = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Ar(
                      this,
                      (e = Mr(t)).call.apply(e, [this].concat(r)),
                    )).el = void 0),
                    (n.props = {
                      visible: [
                        Fr,
                        function (e) {
                          return e.navigation.contact;
                        },
                      ],
                    }),
                    (n.submitLocked = !1),
                    (n.result = !1),
                    (n.resultData = null),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && jr(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = Sr(
                          regeneratorRuntime.mark(function e(t) {
                            var n = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      (this.el = t.parent.appendChild(
                                        kr()({ desktop: !c.a.isMobile, copy: p }),
                                      )),
                                        (this.ui = Object(M.a)(this.el)),
                                        this.ui.zip.addEventListener(
                                          'focus',
                                          function () {
                                            n.ui.itemNoResults.classList.remove(
                                              'isVisible',
                                            ),
                                              n.ui.inputZip.classList.remove(
                                                'hasError',
                                              );
                                          },
                                        ),
                                        this.ui.formMain.addEventListener(
                                          'submit',
                                          this.onSubmitForm,
                                        ),
                                        this.ui.btnBackMain.addEventListener(
                                          'click',
                                          function () {
                                            (Fr.state.navigation.contact = !1),
                                              (Fr.state.navigation.menu = !0);
                                          },
                                        ),
                                        this.ui.btnBackResult.addEventListener(
                                          'click',
                                          function (e) {
                                            e.preventDefault(),
                                              (n.result = !1),
                                              n.hideResult(),
                                              n.showMain();
                                          },
                                        ),
                                        this.setInitState();
                                    case 7:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function (t) {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setInitState',
                      value: function () {
                        this.el.style.display = 'none';
                      },
                    },
                    {
                      key: 'onVisible',
                      value: function () {
                        (this.el.style.display = 'block'),
                          (this.ui.sectionMain.style.display = 'flex'),
                          (this.ui.sectionFind.style.display = 'none'),
                          'footer' === Fr.state.submenuTriggeredFrom
                            ? (this.ui.btnBackMain.style.visibility = 'hidden')
                            : (this.ui.btnBackMain.style.visibility = 'visible');
                        var e = Fr.state.viewport.scale,
                          t = c.a.isMobile ? 0.8 : 0.6,
                          n = e * (c.a.isMobile, 140);
                        L.b.killTweensOf(this.ui.itemMain),
                          L.b.set(this.ui.itemMain, { alpha: 0, x: n, y: 0 }),
                          L.b.staggerTo(
                            this.ui.itemMain,
                            2,
                            {
                              alpha: 1,
                              x: 0,
                              y: 0,
                              ease: 'easeOutExpo',
                              delay: t,
                            },
                            0.05,
                          );
                      },
                    },
                    {
                      key: 'offVisible',
                      value: function () {
                        var e = this,
                          t = Fr.state.viewport.scale * (c.a.isMobile, -80);
                        L.b.killTweensOf(this.ui.itemMain),
                          L.b.staggerTo(
                            this.ui.itemMain,
                            0.6,
                            { alpha: 0, x: 0, y: t, ease: 'easeInQuart' },
                            0.03,
                            function () {
                              e.el.style.display = 'none';
                            },
                          ),
                          (this.result = !1);
                      },
                    },
                    {
                      key: 'onSubmitForm',
                      value: (function () {
                        var e = Sr(
                          regeneratorRuntime.mark(function e(t) {
                            var n, i, r, o, a, s;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      if (
                                        (t.preventDefault(), !this.submitLocked)
                                      ) {
                                        e.next = 3;
                                        break;
                                      }
                                      return e.abrupt('return');
                                    case 3:
                                      if (
                                        ((this.submitLocked = !0),
                                        '' !== this.ui.zip.value)
                                      ) {
                                        e.next = 8;
                                        break;
                                      }
                                      return (
                                        this.ui.inputZip.classList.add(
                                          'hasError',
                                        ),
                                        (this.submitLocked = !1),
                                        e.abrupt('return')
                                      );
                                    case 8:
                                      return (
                                        m(
                                          'Field Manager Search',
                                          'Submit',
                                          'Field Manager Search',
                                        ),
                                        (n = Date.now()),
                                        this.showSpinner(),
                                        (i = this.ui.zip.value),
                                        (r = 'https://pioneer.brapi.xyz/v1/TerritoryManagers/'.concat(
                                          i,
                                        )),
                                        (e.next = 16),
                                        fetch(r)
                                      );
                                    case 16:
                                      return (
                                        (o = e.sent), (e.next = 19), o.json()
                                      );
                                    case 19:
                                      if (
                                        ((a = e.sent),
                                        (s = Date.now() - n),
                                        1500,
                                        !(s < 1500))
                                      ) {
                                        e.next = 25;
                                        break;
                                      }
                                      return (e.next = 25), Rr(1500 - s);
                                    case 25:
                                      (this.submitLocked = !1),
                                        (this.ui.zip.value = ''),
                                        a.Message
                                          ? (this.ui.itemNoResults.classList.add(
                                              'isVisible',
                                            ),
                                            this.hideSpinner())
                                          : (this.hideMain(),
                                            this.showResult(a[0]));
                                    case 28:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function (t) {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'showSpinner',
                      value: function () {
                        L.b.killTweensOf(this.ui.itemMainForm),
                          L.b.staggerTo(
                            this.ui.itemMainForm,
                            0.6,
                            {
                              alpha: 0,
                              x: 0,
                              y: 0,
                              ease: 'easeInSine',
                              delay: 0,
                            },
                            0.03,
                          ),
                          L.b.killTweensOf(this.ui.spinner),
                          L.b.set(this.ui.spinner, { alpha: 0, x: 0, y: 0 }),
                          L.b.to(this.ui.spinner, 2, {
                            alpha: 1,
                            x: 0,
                            ease: 'easeOutSine',
                            delay: 0.6,
                          });
                      },
                    },
                    {
                      key: 'hideSpinner',
                      value: function () {
                        var e = Fr.state.viewport.scale,
                          t = c.a.isMobile ? 0.8 : 0.6,
                          n = e * (c.a.isMobile, 140);
                        L.b.killTweensOf(this.ui.spinner),
                          L.b.to(this.ui.spinner, 0.6, {
                            alpha: 0,
                            x: -80,
                            ease: 'easeInQuart',
                          }),
                          L.b.killTweensOf(this.ui.itemMainForm),
                          L.b.set(this.ui.itemMainForm, { alpha: 0, x: n, y: 0 }),
                          L.b.staggerTo(
                            this.ui.itemMainForm,
                            2,
                            {
                              alpha: 1,
                              x: 0,
                              y: 0,
                              ease: 'easeOutExpo',
                              delay: t,
                            },
                            0.05,
                          );
                      },
                    },
                    {
                      key: 'showMain',
                      value: function () {
                        var e = this.ui.itemMain.concat().reverse();
                        this.ui.sectionMain.style.display = 'flex';
                        var t = Fr.state.viewport.scale,
                          n = c.a.isMobile ? 1 : 0.8,
                          i = t * (c.a.isMobile, -140);
                        L.b.killTweensOf(e),
                          L.b.set(e, { alpha: 0, x: i, y: 0 }),
                          L.b.staggerTo(
                            e,
                            2,
                            {
                              alpha: 1,
                              x: 0,
                              y: 0,
                              ease: 'easeOutExpo',
                              delay: n,
                            },
                            0.05,
                          );
                      },
                    },
                    {
                      key: 'showResult',
                      value: function (e) {
                        (this.result = !0),
                          (this.resultData = e),
                          (this.ui.name.innerText = e.name),
                          (this.ui.role.innerText = e.role),
                          (this.ui.address.innerText = e.address),
                          (this.ui.phone.innerText = e.phone),
                          (this.ui.email.innerText = e.email),
                          (this.ui.phone.href = 'tel:'.concat(
                            this.resultData.phone,
                          )),
                          (this.ui.email.href = 'mailto:'.concat(
                            this.resultData.email,
                          )),
                          (this.ui.sectionFind.style.display = 'flex');
                        var t = Fr.state.viewport.scale,
                          n = c.a.isMobile ? 0.8 : 0.6,
                          i = t * (c.a.isMobile, 140);
                        L.b.killTweensOf(this.ui.itemFind),
                          L.b.set(this.ui.itemFind, { alpha: 0, x: i, y: 0 }),
                          L.b.staggerTo(
                            this.ui.itemFind,
                            2,
                            {
                              alpha: 1,
                              x: 0,
                              y: 0,
                              ease: 'easeOutExpo',
                              delay: n,
                            },
                            0.05,
                          );
                      },
                    },
                    {
                      key: 'hideMain',
                      value: function () {
                        var e = this,
                          t = Fr.state.viewport.scale * (c.a.isMobile, -80);
                        L.b.killTweensOf(this.ui.itemMainAll),
                          L.b.staggerTo(
                            this.ui.itemMainAll,
                            0.6,
                            {
                              delay: 0,
                              alpha: 0,
                              x: t,
                              y: 0,
                              ease: 'easeInQuart',
                            },
                            0.03,
                            function () {
                              e.ui.sectionMain.style.display = 'none';
                            },
                          );
                      },
                    },
                    {
                      key: 'hideResult',
                      value: function () {
                        var e = this,
                          t = this.ui.itemFind.concat().reverse(),
                          n = Fr.state.viewport.scale * (c.a.isMobile, 80);
                        L.b.killTweensOf(t),
                          L.b.staggerTo(
                            t,
                            0.6,
                            {
                              delay: 0,
                              alpha: 0,
                              x: n,
                              y: 0,
                              ease: 'easeInQuart',
                            },
                            0.03,
                            function () {
                              e.ui.sectionFind.style.display = 'none';
                            },
                          );
                      },
                    },
                  ]) && Tr(n.prototype, i),
                  r && Tr(n, r),
                  t
                );
              })()).prototype,
              'onSubmitForm',
              [X.a],
              Object.getOwnPropertyDescriptor(br.prototype, 'onSubmitForm'),
              br.prototype,
            ),
            br),
          Er = n(414),
          Lr = n.n(Er);
        n(415);
        function Ir(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Dr(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ur(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function zr(e) {
          return (zr = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Nr(e, t) {
          return (Nr =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Br = Object(u.a)(),
          Vr = (function (e) {
            function t() {
              var e, n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = Ur(
                  this,
                  (e = zr(t)).call.apply(e, [this].concat(r)),
                )).el = void 0),
                (n.props = {
                  visible: [
                    Br,
                    function (e) {
                      return e.navigation.legal;
                    },
                  ],
                }),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Nr(e, t);
              })(t, le['a']),
              (n = t),
              (i = [
                {
                  key: 'onSetup',
                  value: (function () {
                    var e,
                      t =
                        ((e = regeneratorRuntime.mark(function e(t) {
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    (this.el = t.parent.appendChild(
                                      Lr()({ desktop: !c.a.isMobile, copy: p }),
                                    )),
                                      (this.ui = Object(M.a)(this.el)),
                                      this.setInitState();
                                  case 3:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        })),
                        function () {
                          var t = this,
                            n = arguments;
                          return new Promise(function (i, r) {
                            var o = e.apply(t, n);
                            function a(e) {
                              Ir(o, i, r, a, s, 'next', e);
                            }
                            function s(e) {
                              Ir(o, i, r, a, s, 'throw', e);
                            }
                            a(void 0);
                          });
                        });
                    return function (e) {
                      return t.apply(this, arguments);
                    };
                  })(),
                },
                {
                  key: 'setInitState',
                  value: function () {
                    this.el.style.display = 'none';
                  },
                },
                {
                  key: 'onVisible',
                  value: function () {
                    (this.el.style.display = 'flex'),
                      (this.ui.inner.scrollTop = 0);
                    var e = Br.state.viewport.scale,
                      t = c.a.isMobile ? 0.8 : 0.6,
                      n = e * (c.a.isMobile, 140);
                    L.b.killTweensOf(this.ui.itemMain),
                      L.b.set(this.ui.itemMain, {
                        alpha: 0.001,
                        x: n,
                        y: 0,
                        force3D: !0,
                      }),
                      L.b.staggerTo(
                        this.ui.itemMain,
                        2,
                        {
                          alpha: 0.999,
                          x: 0,
                          y: 0,
                          ease: 'easeOutExpo',
                          delay: t,
                        },
                        0.05,
                      );
                  },
                },
                {
                  key: 'offVisible',
                  value: function () {
                    var e = this,
                      t = Br.state.viewport.scale * (c.a.isMobile, -80);
                    L.b.killTweensOf(this.ui.itemMain),
                      L.b.staggerTo(
                        this.ui.itemMain,
                        0.6,
                        { alpha: 0.001, x: 0, y: t, ease: 'easeInQuart' },
                        0.03,
                        function () {
                          e.el.style.display = 'none';
                        },
                      );
                  },
                },
              ]) && Dr(n.prototype, i),
              r && Dr(n, r),
              t
            );
          })(),
          Yr = n(417),
          Hr = n.n(Yr);
        n(418);
        function Xr(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Gr(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Wr(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Qr(e) {
          return (Qr = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function qr(e, t) {
          return (qr =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Zr = Object(u.a)(),
          Kr = (function (e) {
            function t() {
              var e, n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = Wr(
                  this,
                  (e = Qr(t)).call.apply(e, [this].concat(r)),
                )).el = void 0),
                (n.props = {
                  visible: [
                    Zr,
                    function (e) {
                      return e.started;
                    },
                  ],
                }),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && qr(e, t);
              })(t, le['a']),
              (n = t),
              (i = [
                {
                  key: 'onSetup',
                  value: (function () {
                    var e,
                      t =
                        ((e = regeneratorRuntime.mark(function e(t) {
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    this.el = t.parent.appendChild(
                                      Hr()({ copy: p, env: c.a }),
                                    );
                                  case 1:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        })),
                        function () {
                          var t = this,
                            n = arguments;
                          return new Promise(function (i, r) {
                            var o = e.apply(t, n);
                            function a(e) {
                              Xr(o, i, r, a, s, 'next', e);
                            }
                            function s(e) {
                              Xr(o, i, r, a, s, 'throw', e);
                            }
                            a(void 0);
                          });
                        });
                    return function (e) {
                      return t.apply(this, arguments);
                    };
                  })(),
                },
              ]) && Gr(n.prototype, i),
              r && Gr(n, r),
              t
            );
          })(),
          $r = {
            props: {
              viewportMixin: [
                Object(u.a)(),
                function (e) {
                  return { width: e.viewport.width, height: e.viewport.height };
                },
              ],
            },
            onBeforeSetup() {
              (this.scene = new $e.Scene()),
                (this.camera = new $e.PerspectiveCamera(45, 1, 1, 700)),
                (this.camera.position.z = 10),
                this.scene.add(this.camera);
            },
            setViewportMixin() {
              var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                t = e.width,
                n = e.height;
              (this.camera.aspect = t / n), this.camera.updateProjectionMatrix();
            },
          },
          Jr = n(83);
        function eo(e, t) {
          return Math.floor(e + Math.random() * (t - e + 1));
        }
        var to = function (e, t) {
            if (
              (void 0 === t && ((t = e), (e = 0)),
              'number' != typeof e || 'number' != typeof t)
            )
              throw new TypeError('Expected all arguments to be numbers');
            return Math.random() * (t - e) + e;
          },
          no =
            '#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\nprecision highp float;\n#define GLSLIFY 1\nuniform float opacity;\nuniform vec3 color;\nuniform sampler2D msdfMap;\nuniform sampler2D gradientMap;\nuniform float lineWidth;\n\nvarying vec2 vUv;\nvarying float vProgress;\n\nuniform float uOutlineMaskProgress;\nuniform float uLineGradientProgress;\nuniform float uFillProgress;\nuniform float uCircleRadius;\nuniform vec2 uMousePosNorm;\nuniform vec2 uViewport;\nuniform float uPixelRatio;\nuniform float uTime;\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\n\nfloat createCircle() {\n    vec2 viewportUv = gl_FragCoord.xy / uViewport;\n    float viewportAspect = uViewport.x / uViewport.y;\n\n    vec2 mousePoint = vec2(uMousePosNorm.x, 1.0 - uMousePosNorm.y);\n    float circleRadius = max(0.0, uCircleRadius / uViewport.x) * uPixelRatio;\n\n    vec2 shapeUv = viewportUv - mousePoint;\n    shapeUv /= vec2(1.0, viewportAspect);\n    shapeUv += mousePoint;\n\n    float dist = distance(shapeUv, mousePoint);\n    dist = smoothstep(circleRadius, circleRadius + 0.001, dist);\n    return dist;\n}\n\nfloat map(float value, float inMin, float inMax, float outMin, float outMax, bool clamped) {\n\tif (clamped) value = min(inMax, max(inMin, value));\n\n\treturn outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\nvoid main() {\n    float circleMask = createCircle();\n\n    float lineProgress = uOutlineMaskProgress * vProgress;\n    float fillProgress =  uFillProgress;\n    // float fillProgress = map(vProgress, 0.5, 1.0, 0.0, 1.0, true);// * uFillProgress;\n\n    float gradientTexture = texture2D(gradientMap, vUv).r;\n    vec3 msdfSample = texture2D(msdfMap, vUv).rgb;\n    float sigDist = median(msdfSample.r, msdfSample.g, msdfSample.b) - 0.5;\n\n    float gradient = fract((gradientTexture + uTime * 0.5)  * 2.0);\n    float border = fwidth(sigDist);\n\n    float outline = smoothstep(-0., -0. + border, sigDist * 1.4);\n    outline *= 1.0 - smoothstep(lineWidth - border, lineWidth, sigDist * 1.4);\n\n    sigDist = sigDist / border;\n    float fill = clamp(sigDist + 0.5, 0.0, 1.0) * circleMask;\n    outline = clamp(outline, 0.0, 1.0) * vProgress;\n\n    float step = 0.01;\n    float start = smoothstep(0.0, step, gradient);\n    float end = smoothstep(1.0 * lineProgress, (1.0 * lineProgress) - step, gradient);\n    float mask = start * end;\n    mask = max(0.1, mask);\n\n    float alpha = outline * mask + fill * fillProgress;\n    alpha = clamp(alpha, 0.0, 1.0);\n\n    gl_FragColor = vec4(clamp(color.xyz, 0.0, 1.0), alpha);\n\n    // gl_FragColor.rgb += vec3(1.0,0.0,0.0);\n    // gl_FragColor = vec4(vec3(1.0,0.0,0.0), 1.0);\n}\n',
          io =
            '#define GLSLIFY 1\nattribute vec2 uv;\nattribute vec4 position;\nattribute float progress;\nuniform mat4 projectionMatrix;\nuniform mat4 modelViewMatrix;\n\nvarying vec2 vUv;\nvarying float vProgress;\n\nvoid main() {\n    vUv = uv;\n    vProgress = progress;\n\n    gl_Position = projectionMatrix * modelViewMatrix * position;\n}';
        function ro(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function oo(e) {
          var t = e || {},
            n = 'number' == typeof t.opacity ? t.opacity : 1,
            i = t.color,
            r = t.map,
            o = t.pixelRatio,
            a = 'number' == typeof t.lineWidth ? t.lineWidth : 0.2;
          delete t.pixelRatio,
            delete t.map,
            delete t.color,
            delete t.opacity,
            delete t.lineWidth;
          var s = Qn('manifold-gradient-map');
          return (function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = null != arguments[t] ? arguments[t] : {},
                i = Object.keys(n);
              'function' == typeof Object.getOwnPropertySymbols &&
                (i = i.concat(
                  Object.getOwnPropertySymbols(n).filter(function (e) {
                    return Object.getOwnPropertyDescriptor(n, e).enumerable;
                  }),
                )),
                i.forEach(function (t) {
                  ro(e, t, n[t]);
                });
            }
            return e;
          })(
            {
              uniforms: {
                opacity: { type: 'f', value: n },
                msdfMap: { type: 't', value: r || new $e.Texture() },
                color: { type: 'c', value: new $e.Color(i) },
                lineWidth: { value: a },
                gradientMap: { value: s },
                uOutlineMaskProgress: { value: 1 },
                uLineGradientProgress: { value: 0 },
                uFillProgress: { value: 0 },
                uCircleRadius: { value: 0 },
                uMousePosNorm: { value: [0, 0] },
                uViewport: { value: [0, 0] },
                uTime: { value: 0 },
                uPixelRatio: { value: o },
              },
              vertexShader: io,
              fragmentShader: no,
            },
            t,
          );
        }
        var ao, so;
        function uo(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function lo(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function co(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                lo(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                lo(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function po(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function ho(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function fo(e) {
          return (fo = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function vo(e, t) {
          return (vo =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function mo(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var go,
          bo = Object(u.a)(),
          yo =
            Fi()(
              (ao =
                Object(it.a)(rt)(
                  (mo(
                    (so = (function (e) {
                      function t() {
                        var e, n;
                        !(function (e, t) {
                          if (!(e instanceof t))
                            throw new TypeError(
                              'Cannot call a class as a function',
                            );
                        })(this, t);
                        for (
                          var i = arguments.length, r = new Array(i), o = 0;
                          o < i;
                          o++
                        )
                          r[o] = arguments[o];
                        return (
                          ((n = ho(
                            this,
                            (e = fo(t)).call.apply(e, [this].concat(r)),
                          )).options = {
                            text: 'Text',
                            align: 'left',
                            position: 'center',
                            lineHeight: 0.8,
                            layer: 1,
                            interaction: !0,
                            animationDuration: 2,
                            animationStagger: 0.05,
                            lineWidth: 0.15,
                            particlesPerGlyph: 6,
                          }),
                          (n.props = {
                            viewport: [
                              bo,
                              function (e) {
                                return s.a.pick(
                                  e.viewport,
                                  'width',
                                  'height',
                                  'pixelRatio',
                                  'scale',
                                );
                              },
                            ],
                            v: !1,
                            active: !1,
                            render: !1,
                            fontSize: 20,
                            width: 200,
                            height: 200,
                            pointerActive: [
                              bo,
                              function (e) {
                                return n.options.interaction && e.pointer.active;
                              },
                            ],
                          }),
                          n
                        );
                      }
                      var n, i, r;
                      return (
                        (function (e, t) {
                          if ('function' != typeof t && null !== t)
                            throw new TypeError(
                              'Super expression must either be null or a function',
                            );
                          (e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                              value: e,
                              writable: !0,
                              configurable: !0,
                            },
                          })),
                            t && vo(e, t);
                        })(t, le['a']),
                        (n = t),
                        (i = [
                          {
                            key: 'onSetup',
                            value: (function () {
                              var e = co(
                                regeneratorRuntime.mark(function e() {
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (this.tweens = {
                                                lineMaskProgress: 0,
                                                lineGradientProgress: 0,
                                                fillProgress: 0,
                                                lineScale: 0,
                                              }),
                                              (this.charLength = this.options.text.replace(
                                                ' ',
                                                '',
                                              ).length),
                                              (this.titleScale = 0),
                                              (this.baseFontSize =
                                                Kn.json.info.size),
                                              (this.time = 0),
                                              (this.mouse = [0, 0]),
                                              (this.mouseNorm = [0, 0]),
                                              (this.textCenterPos = [0, 0]),
                                              (this.maskMaxRadius = 200),
                                              (this.textMaskRadius = 1e-4),
                                              (this.textMaskRadiusVel = 0),
                                              (this.textMaskRadiusTarget = this.textMaskRadius),
                                              (this.particleMaskRadius = 1e-4),
                                              (this.particleMaskRadiusVel = 0),
                                              (this.particleMaskRadiusTarget = this.particleMaskRadius),
                                              (e.next = 17),
                                              Object(ue.b)()
                                            );
                                          case 17:
                                            return (
                                              (e.next = 19), this.setupTitle()
                                            );
                                          case 19:
                                            return (
                                              (this.title = e.sent),
                                              (this.particleInstance = this.setupParticleSystem()),
                                              (e.next = 23),
                                              Object(ue.b)()
                                            );
                                          case 23:
                                            return (
                                              (e.next = 25), this.setupLines()
                                            );
                                          case 25:
                                            return (
                                              (this.lines = e.sent),
                                              (e.next = 28),
                                              Object(ue.b)()
                                            );
                                          case 28:
                                            this.props.pZ = 3;
                                          case 29:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'setupCircle',
                            value: function () {
                              var e = new $e.CircleGeometry(1, 32),
                                t = new $e.MeshBasicMaterial({
                                  color: 16711680,
                                  transparent: !0,
                                });
                              t.opacity = 0.5;
                              var n = new $e.Mesh(e, t);
                              return (
                                n.layers.set(this.options.layer),
                                n.scale.multiplyScalar(this.textMaskRadius),
                                (n.position.z = 0.1),
                                (n.renderOrder = 1),
                                this.object.add(n),
                                n
                              );
                            },
                          },
                          {
                            key: 'setupTitle',
                            value: (function () {
                              var e = co(
                                regeneratorRuntime.mark(function e() {
                                  var t, n, i, r;
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (t = si({
                                                width: this.props.width,
                                                align: this.options.align,
                                                font: Kn.json,
                                                lineHeight:
                                                  Kn.json.common.lineHeight *
                                                  this.options.lineHeight,
                                                text: this.options.text.toUpperCase(),
                                              })),
                                              (n = s.a
                                                .range(
                                                  t.attributes.position.count,
                                                )
                                                .fill(0)),
                                              t.addAttribute(
                                                'progress',
                                                new $e.Float32BufferAttribute(
                                                  n,
                                                  1,
                                                ),
                                              ),
                                              (this.letterPrArray = s.a
                                                .range(
                                                  t.attributes.position.count / 4,
                                                )
                                                .map(function () {
                                                  return { pr: 0 };
                                                })),
                                              ((i = new $e.RawShaderMaterial(
                                                oo({
                                                  map: Kn.map,
                                                  transparent: !0,
                                                  color: 'white',
                                                  pixelRatio:
                                                    bo.state.viewport
                                                      .uiPixelRatio,
                                                  lineWidth: this.options
                                                    .lineWidth,
                                                }),
                                              )).type = 'TitleMaterial'),
                                              ((r = new $e.Mesh(
                                                t,
                                                i,
                                              )).rotation.x = Zn(180)),
                                              r.layers.set(this.options.layer),
                                              (r.renderOrder = 50),
                                              this.object.add(r),
                                              e.abrupt('return', r)
                                            );
                                          case 12:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          /******** PARTICLES ***************************************************************************************************************************** */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                          {
                            key: 'setupParticleSystem',
                            value: function () {
                              var e = this;
                              this.particles = [];
                              c.a.isMobile;
                              var t = new $e.BufferGeometry(),
                                n = [],
                                i = [],
                                r =
                                  (this.title && this.title.geometry.layout.width,
                                  this.title && this.title.geometry.layout.height,
                                  0),
                                o = this.title.geometry.layout;
                              o.glyphs.forEach(function (t) {
                                t.position[0],
                                  t.data.width,
                                  t.position[0],
                                  t.data.width,
                                  t.position[1],
                                  t.data.height,
                                  t.position[1],
                                  t.data.height;
                                s.a.times(
                                  e.options.particlesPerGlyph,
                                  function () {
                                    var a = Math.random() < 0.5,
                                      s = {
                                        visible: !1,
                                        index: r,
                                        pos: [0, 0, 0],
                                        posTarget: [0, 0, 0],
                                        posBase: [
                                          t.position[0] - o.width / 2,
                                          -t.position[1] - o.height / 2,
                                          0,
                                        ],
                                        posVel: [0, 0],
                                        spring: 0.02,
                                        friction: 0.7,
                                        speed: to(0.02, 0.1),
                                        radius: c.a.isMobile
                                          ? to(3, 6)
                                          : to(3, 10),
                                        startTime: to(0, 2 * Math.PI),
                                        scale: to(2, 10),
                                        selected: a,
                                        randomVal: to(0, 1),
                                        neighbours: [],
                                      };
                                    e.particles.push(s);
                                    var u = to(0.8, 1);
                                    n.push(
                                      s.posBase[0],
                                      s.posBase[1],
                                      s.posBase[2],
                                    ),
                                      i.push(s.scale, u),
                                      r++;
                                  },
                                );
                              }),
                                t.addAttribute(
                                  'position',
                                  new $e.Float32BufferAttribute(n, 3),
                                ),
                                t.addAttribute(
                                  'options',
                                  new $e.Float32BufferAttribute(i, 2),
                                ),
                                this.particles.forEach(function (t) {
                                  var n = s.a.sortBy(e.particles, function (e) {
                                    return t === e
                                      ? 1 / 0
                                      : vt(
                                          t.posBase[0],
                                          t.posBase[1],
                                          e.posBase[0],
                                          e.posBase[1],
                                        );
                                  });
                                  t.neighbours = n.slice(0, 20);
                                });
                              var a = new $e.ShaderMaterial({
                                uniforms: {
                                  uCircleRadius: { value: this.textMaskRadius },
                                  uBasePos: { value: [0, 0] },
                                  uMousePos: { value: [0, 0] },
                                  uMousePosNorm: { value: [0, 0] },
                                  uViewport: { value: [0, 0] },
                                  uPixelRatio: {
                                    value: bo.state.viewport.uiPixelRatio,
                                  },
                                },
                                vertexShader:
                                  '#define GLSLIFY 1\nattribute vec2 options;\n\nuniform vec2 uMousePos;\nuniform vec2 uBasePos;\nuniform float uCircleRadius;\nuniform float uPixelRatio;\n\nvarying float vVisible;\nvarying float vAlpha;\n\nvoid main() {\n\tvec3 pos = position;\n\t\n\tvec2 posPlusBase = pos.xy + uBasePos;\n\tfloat distToMouse = distance(uMousePos, posPlusBase);\n    vVisible = step(distToMouse, uCircleRadius * 1.2);\n    vAlpha = options.y;\n\n\tvec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );\n\t\n\tgl_PointSize = options.x * uPixelRatio;\n\tgl_Position = projectionMatrix * mvPosition;\n}',
                                fragmentShader:
                                  '#define GLSLIFY 1\nuniform float uCircleRadius;\nuniform vec2 uMousePos;\nuniform vec2 uViewport;\nuniform float uPixelRatio;\n\nvarying float vVisible;\nvarying float vAlpha;\n\nfloat circle(vec2 _st, float _radius){\n    float radius = _radius * 0.5;\n    float dist = distance(_st, vec2(0.5));\n\n    return 1.0 - smoothstep(radius, radius + 0.1, dist);\n}\n\nfloat createMask() {\n    vec2 viewportUv = gl_FragCoord.xy / uViewport;\n    float viewportAspect = uViewport.x / uViewport.y;\n\n    vec2 mousePoint = vec2(uMousePos.x, 1.0 - uMousePos.y);\n    float circleRadius = max(0.0, uCircleRadius / uViewport.x) * 2.0;\n\n    vec2 shapeUv = viewportUv - mousePoint;\n    shapeUv /= vec2(1.0, viewportAspect);\n    shapeUv += mousePoint;\n\n    float dist = distance(shapeUv, mousePoint);\n    dist = smoothstep(circleRadius, circleRadius + 0.001, dist);\n    return 1.0 - dist;\n}\n\nvoid main() {\n    float circleMask = createMask();\n\n    float alpha = circle(gl_PointCoord, 0.9) * vAlpha * vVisible;// * circleMask;\n\n    gl_FragColor = vec4( vec3(1.0), alpha);\n    // gl_FragColor = vec4( vec3(1.0,0.0,0.0), circleMask );\n}\n',
                                blending: $e.AdditiveBlending,
                                depthTest: !1,
                                transparent: !0,
                                vertexColors: !0,
                              });
                              a.type = 'TitleParticleSystemMaterial';
                              var u = new $e.Points(t, a);
                              return (
                                this.object.add(u),
                                u.layers.set(this.options.layer),
                                u
                              );
                            },
                          },
                          {
                            key: 'setupLines',
                            value: function () {
                              (this.maxNumLinks = 150), (this.links = []);
                              for (var e = 0; e < this.maxNumLinks; e++)
                                this.createLink();
                              var t = (c.a.isMobile, this.maxNumLinks),
                                n = new $e.InstancedBufferGeometry();
                              n.copy(et);
                              for (
                                var i = new $e.InstancedBufferAttribute(
                                    new Float32Array(4 * t),
                                    4,
                                  ),
                                  r = new $e.InstancedBufferAttribute(
                                    new Float32Array(4 * t),
                                    4,
                                  ),
                                  o = new $e.InstancedBufferAttribute(
                                    new Float32Array(4 * t),
                                    4,
                                  ),
                                  a = new $e.InstancedBufferAttribute(
                                    new Float32Array(2 * t),
                                    2,
                                  ),
                                  s = new $e.InstancedBufferAttribute(
                                    new Float32Array(4 * t),
                                    4,
                                  ),
                                  u = this.particles,
                                  l = 0;
                                l < t;
                                l += 1
                              ) {
                                for (
                                  var p = u[eo(0, u.length - 1)].index,
                                    h = u[eo(0, u.length - 1)].index;
                                  p === h;
  
                                )
                                  h = u[eo(0, u.length - 1)].index;
                                var f = to(0, 1);
                                a.setXY(l, p, h), s.setXYZW(l, f, !1, 100, 0);
                              }
                              n.addAttribute('aConnectionPoints', i),
                                n.addAttribute('aConnectionPoints2', r),
                                n.addAttribute('aConnectionPoints3', o),
                                n.addAttribute('aPointsIndex', a),
                                n.addAttribute('aOptions', s);
                              var d = new $e.Mesh(
                                n,
                                new $e.ShaderMaterial({
                                  uniforms: {
                                    uTime: { value: 0 },
                                    uProgress: { value: 0 },
                                    uScale: { value: 0 },
                                  },
                                  transparent: !0,
                                  side: $e.DoubleSide,
                                  blending: $e.AdditiveBlending,
                                  vertexShader:
                                    "#define GLSLIFY 1\nuniform float uTime;\nuniform float uProgress;\nuniform float uScale;\n\nvarying vec2 vUv;\nvarying float vVisible;\nvarying float vAlpha;\n\nattribute vec4 aOptions;\nattribute vec4 aConnectionPoints;\nattribute vec4 aPointsIndex;\n\n#define PI 3.1415926538\n\nfloat toRadians(float deg) {\n\treturn deg * (3.141592653589793 / 180.0);\n}\n\n// transforms the 'blueprint' geometry with instance attributes\nvec3 transform( inout vec3 position, vec3 T, vec4 R, vec3 S ) {\n  //applies the scale\n  position *= S;\n  //computes the rotation where R is a (vec4) quaternion\n  position += 2.0 * cross( R.xyz, cross( R.xyz, position ) + R.w * position );\n  //translates the transformed 'blueprint'\n  position += T;\n  //return the transformed position\n  return position;\n}\n\nvec4 quaternion(vec3 axis, float angle) {\nfloat halfAngle = angle/2.0;\nvec4 q = vec4(0.0);\n\nq.x = axis.x * sin(halfAngle);\nq.y = axis.y * sin(halfAngle);\nq.z = axis.z * sin(halfAngle);\nq.w = cos(halfAngle);\n\nreturn q;\n}\n\nvec4 quaternionMultiply(vec4 q1, vec4 q2)\n{ \nvec4 qr;\nqr.x = (q1.w * q2.x) + (q1.x * q2.w) + (q1.y * q2.z) - (q1.z * q2.y);\nqr.y = (q1.w * q2.y) - (q1.x * q2.z) + (q1.y * q2.w) + (q1.z * q2.x);\nqr.z = (q1.w * q2.z) + (q1.x * q2.y) - (q1.y * q2.x) + (q1.z * q2.w);\nqr.w = (q1.w * q2.w) - (q1.x * q2.x) - (q1.y * q2.y) - (q1.z * q2.z);\nreturn qr;\n}\n\nvoid main() {\n    vUv = uv;\n\n    vec3 translation = vec3(0.0);\n    vec4 rotation = vec4(0.0);\n    vec3 scale = vec3(1.0);\n\n    float randomVal = aOptions.x;\n    float maxLength = aOptions.z;\n    float x1 = aConnectionPoints.x;\n    float x2 = aConnectionPoints.z;\n    float y1 = aConnectionPoints.y;\n    float y2 = aConnectionPoints.w;\n\n    float x = (x1 + x2) / 2.0;\n    float y = (y1 + y2) / 2.0;\n\n    float scalex = distance(vec2(x1, y1), vec2(x2, y2));\n    float scaley = 1.0;\n    float selfRotation = atan(y2 - y1, x2 - x1);// + radians(90.0);\n    // float lineLength = mix(50.0, maxLength, randomVal);\n    // float inRange =  1.0 - step(lineLength, scalex);\n\n    vec3 pos = position;\n\n    translation.x += x;\n    translation.y += y;\n    scale.x = scalex * uScale;\n    rotation = quaternion( vec3(0.0, 0.0, 1.0), selfRotation );\n\n    pos = transform( pos, translation, rotation, scale );\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n\n    vVisible = aOptions.y;\n    vAlpha = aOptions.w;\n\n    gl_Position *= vVisible;\n}",
                                  fragmentShader:
                                    '#define GLSLIFY 1\nvarying float vVisible;\nvarying float vAlpha;\n\nvoid main() {\n\tvec3 color = vec3(1.0);\n\tfloat alpha = vVisible * vAlpha;\n\n\tgl_FragColor = vec4(color, alpha);\n}',
                                }),
                              );
                              return (
                                (d.material.type = 'TitleLinesMaterial'),
                                (d.frustumCulled = !1),
                                (d.material.depthWrite = !1),
                                d.layers.set(this.options.layer),
                                this.object.add(d),
                                d
                              );
                            },
                          },
                          {
                            key: 'setFontSize',
                            value: function (e) {
                              this.updateTitle();
                            },
                          },
                          {
                            key: 'updateTitle',
                            value: function () {
                              var e = this,
                                t = this.props.fontSize / this.baseFontSize;
                              this.title.scale.setScalar(t),
                                this.title.geometry.update({
                                  width: this.props.width / t,
                                }),
                                this.title.geometry.layout.glyphs.forEach(
                                  function (n, i) {
                                    var r = n.data;
                                    s.a.times(
                                      e.options.particlesPerGlyph,
                                      function (o) {
                                        var a =
                                          e.particles[
                                            i * e.options.particlesPerGlyph + o
                                          ];
                                        if (a) {
                                          var s = n.position,
                                            u = s[0] + r.width / 4,
                                            l = -s[1] - r.height / 2;
                                          (u += to(-r.width / 2, r.width / 2)),
                                            (l += to(
                                              -r.height / 2,
                                              r.height / 2,
                                            )),
                                            (a.posBase = [u * t, l * t, 0]);
                                        }
                                      },
                                    );
                                  },
                                );
                              var n =
                                  this.title.geometry.layout.width /
                                  this.title.geometry.layout.height,
                                i = this.props.width / 2,
                                r = this.props.width / n / 2;
                              switch (this.options.position) {
                                case 'top-left':
                                  this.title.position.set(0, 2 * -r, 0);
                                  break;
                                case 'bottom-left':
                                  this.title.position.set(0, 0, 0);
                                  break;
                                default:
                                  this.title.position.set(-i, -r, 0);
                              }
                              this.lines &&
                                this.lines.position.copy(this.title.position),
                                this.particleInstance &&
                                  this.particleInstance.position.copy(
                                    this.title.position,
                                  ),
                                (this.props.height = 2 * r),
                                this.particles.forEach(function (t) {
                                  var n = s.a.sortBy(e.particles, function (e) {
                                    return t === e
                                      ? 1 / 0
                                      : vt(
                                          t.posBase[0],
                                          t.posBase[1],
                                          e.posBase[0],
                                          e.posBase[1],
                                        );
                                  });
                                  t.neighbours = n
                                    .slice(0, 5)
                                    .concat(n.slice(10, 15));
                                }),
                                (this.links = []);
                              for (var o = 0; o < this.maxNumLinks; o++)
                                this.createLink();
                              this.updateBasePosition();
                            },
                          },
                          {
                            key: 'updateBasePosition',
                            value: function () {
                              var e = this;
                              requestAnimationFrame(function () {
                                var t = new $e.Vector3();
                                e.particleInstance.updateMatrixWorld(),
                                  t.setFromMatrixPosition(
                                    e.particleInstance.matrixWorld,
                                  ),
                                  (e.textCenterPos = [t.x, t.y]);
                              });
                            },
                          },
                          {
                            key: 'onPointerActive',
                            value: function () {
                              this.options.interaction &&
                                this.props.render &&
                                this._visible &&
                                (c.a.isMobile
                                  ? (this.props.active = !0)
                                  : ((this.textMaskRadiusTarget =
                                      2 * this.maskMaxRadius),
                                    (this.particleMaskRadiusTarget =
                                      2 * this.maskMaxRadius)));
                            },
                          },
                          {
                            key: 'offPointerActive',
                            value: function () {
                              this.options.interaction &&
                                this.props.render &&
                                this._visible &&
                                (c.a.isMobile
                                  ? (this.props.active = !1)
                                  : ((this.props.active = !0),
                                    (this.textMaskRadiusTarget = this.maskMaxRadius),
                                    (this.particleMaskRadiusTarget = this.maskMaxRadius)));
                            },
                          },
                          {
                            key: 'explode',
                            value: function () {
                              (this.textMaskRadiusTarget =
                                5 * this.maskMaxRadius),
                                (this.particleMaskRadiusTarget =
                                  5 * this.maskMaxRadius);
                            },
                          },
                          {
                            key: 'updateProgressAttribute',
                            value: function () {
                              this.title.geometry.attributes.progress.array.set(
                                s.a.flatten(
                                  this.letterPrArray.map(function (e) {
                                    return [e.pr, e.pr, e.pr, e.pr];
                                  }),
                                ),
                              ),
                                (this.title.geometry.attributes.progress.needsUpdate = !0);
                            },
                          },
                          {
                            key: 'show',
                            value: function () {
                              var e = this,
                                t =
                                  arguments.length > 0 && void 0 !== arguments[0]
                                    ? arguments[0]
                                    : {},
                                n = t.delay,
                                i = void 0 === n ? 0 : n,
                                r = t.dur,
                                o = void 0 === r ? 1 : r,
                                a = t.stagger,
                                s = void 0 === a ? 0.01 : a,
                                u = t.easeLetter,
                                l = void 0 === u ? 'easeOutSine' : u,
                                p = t.fillDur,
                                h = void 0 === p ? 1 : p,
                                f = t.fillDelay,
                                d = void 0 === f ? 0.8 : f,
                                v = this.title.material.uniforms;
                              L.b.killTweensOf(v.uFillProgress),
                                L.b.to(v.uFillProgress, h, {
                                  value: 1,
                                  ease: 'easeOutSine',
                                  delay: i + d,
                                  onComplete: function () {
                                    !c.a.isMobile &&
                                      e.options.interaction &&
                                      (e.props.active = !0);
                                  },
                                }),
                                L.b.killTweensOf(this.letterPrArray),
                                L.b.staggerTo(
                                  this.letterPrArray,
                                  o,
                                  {
                                    pr: 1,
                                    delay: i,
                                    ease: l,
                                    onStart: function () {
                                      (e.props.render = !0), (e.props.v = !0);
                                    },
                                    onUpdate: this.updateProgressAttribute,
                                  },
                                  s,
                                ),
                                this.updateBasePosition();
                            },
                          },
                          {
                            key: 'hide',
                            value: function () {
                              var e = this,
                                t =
                                  arguments.length > 0 && void 0 !== arguments[0]
                                    ? arguments[0]
                                    : {},
                                n = t.delay,
                                i = void 0 === n ? 0 : n,
                                r = t.dur,
                                o = void 0 === r ? 0.3 : r,
                                a = t.stagger,
                                s = void 0 === a ? 0 : a,
                                u = this.title.material.uniforms;
                              (this.props.active = !1),
                                L.b.killTweensOf(u.uFillProgress),
                                L.b.to(u.uFillProgress, o, {
                                  value: 0,
                                  ease: 'easeOutSine',
                                  delay: i,
                                }),
                                L.b.killTweensOf(this.letterPrArray),
                                L.b.staggerTo(
                                  this.letterPrArray,
                                  o,
                                  {
                                    pr: 0,
                                    ease: 'easeOutSine',
                                    delay: i,
                                    onUpdate: this.updateProgressAttribute,
                                    onComplete: function () {
                                      (e.props.v = !1), (e.props.render = !1);
                                    },
                                  },
                                  s,
                                );
                            },
                          },
                          {
                            key: 'onActive',
                            value: function () {
                              this.textMaskRadiusTarget = this.maskMaxRadius;
                              if (this.title) {
                                var e = this.title.material.uniforms;
                                L.b.killTweensOf([
                                  e.uOutlineMaskProgress,
                                  e.uLineGradientProgress,
                                ]),
                                  L.b.to(e.uOutlineMaskProgress, 2.5, {
                                    value: 0.4,
                                    ease: 'easeOutExpo',
                                    delay: 0,
                                  });
                              }
                              L.b.delayedCall(0.3, this.onActivateDelay);
                            },
                          },
                          {
                            key: 'onActivateDelay',
                            value: function () {
                              (this.particleMaskRadiusTarget = this.maskMaxRadius),
                                (this.isActiveDelay = !0),
                                L.b.killTweensOf(this.tweens, { lineScale: !0 }),
                                L.b.to(this.tweens, 2.5, {
                                  lineScale: 1,
                                  ease: 'easeOutExpo',
                                  delay: 0.3,
                                });
                            },
                          },
                          {
                            key: 'offActive',
                            value: function () {
                              (this.isActiveDelay = !1),
                                (this.textMaskRadiusTarget = 1e-4),
                                (this.particleMaskRadiusTarget = 1e-4);
                              if (this.title) {
                                var e = this.title.material.uniforms;
                                L.b.killTweensOf([
                                  e.uOutlineMaskProgress,
                                  e.uLineGradientProgress,
                                ]),
                                  L.b.to(e.uOutlineMaskProgress, 1.5, {
                                    value: 1,
                                    ease: 'easeOutExpo',
                                    delay: 0,
                                  });
                              }
                              L.b.killTweensOf(this.tweens, { lineScale: !0 }),
                                L.b.to(this.tweens, 1.5, {
                                  lineScale: 0,
                                  ease: 'easeOutExpo',
                                  delay: 0,
                                }),
                                L.b.killDelayedCallsTo(this.onActivateDelay);
                            },
                          },
                          {
                            key: 'animateInFill',
                            value: function () {
                              var e = this.title.material.uniforms;
                              L.b.killTweensOf(e.uFillProgress),
                                L.b.to(e.uFillProgress, 1, {
                                  value: 1,
                                  ease: 'easeOutExpo',
                                }),
                                L.b.killTweensOf([e.uOutlineMaskProgress]),
                                L.b.to(e.uOutlineMaskProgress, 1, {
                                  value: 1,
                                  ease: 'easeOutExpo',
                                });
                            },
                          },
                          {
                            key: 'animateOutFill',
                            value: function () {
                              var e = this.title.material.uniforms;
                              L.b.killTweensOf(e.uFillProgress),
                                L.b.to(e.uFillProgress, 1, {
                                  value: 0.05,
                                  ease: 'easeOutExpo',
                                }),
                                L.b.killTweensOf([e.uOutlineMaskProgress]),
                                L.b.to(e.uOutlineMaskProgress, 1, {
                                  value: 0.5,
                                  ease: 'easeOutExpo',
                                });
                            },
                          },
                          {
                            key: 'whileRender',
                            value: function () {
                              this.time = performance.now() / 1e4;
                              var e = bo.state.viewport,
                                t = e.width,
                                n = e.height,
                                i = e.scale,
                                r = uo(bo.state.pointer.positionNorm, 2),
                                o = r[0],
                                a = r[1],
                                s = c.a.isMobile ? -0.3 * i : 0;
                              (this.mouseNorm[0] +=
                                0.12 * (o - this.mouseNorm[0])),
                                (this.mouseNorm[1] +=
                                  0.12 * (a - this.mouseNorm[1] + s)),
                                (this.mouse[0] = Object(Jr.a)(
                                  this.mouseNorm[0],
                                  -t / 2,
                                  t / 2,
                                )),
                                (this.mouse[1] = Object(Jr.a)(
                                  this.mouseNorm[1],
                                  n / 2,
                                  -n / 2,
                                ));
                              var u = (this.props.pointerActive, 0.05),
                                l = (this.props.pointerActive, 0.6);
                              if (
                                ((this.textMaskRadiusVel +=
                                  (this.textMaskRadiusTarget -
                                    this.textMaskRadius) *
                                  u),
                                (this.textMaskRadiusVel *= l),
                                (this.textMaskRadius += this.textMaskRadiusVel),
                                (this.particleMaskRadiusVel +=
                                  (this.particleMaskRadiusTarget -
                                    this.particleMaskRadius) *
                                  u),
                                (this.particleMaskRadiusVel *= l),
                                (this.particleMaskRadius += this.particleMaskRadiusVel),
                                this.title &&
                                  ((this.title.material.uniforms.uCircleRadius.value = this.textMaskRadius),
                                  (this.title.material.uniforms.uMousePosNorm.value = this.mouseNorm),
                                  (this.title.material.uniforms.uTime.value = this.time)),
                                this.circle)
                              ) {
                                this.circle.scale.set(
                                  this.textMaskRadius,
                                  this.textMaskRadius,
                                  this.textMaskRadius,
                                );
                                var p = uo(this.mouse, 2),
                                  h = p[0],
                                  f = p[1];
                                (this.circle.position.x = h),
                                  (this.circle.position.y = f);
                              }
                              this.particleInstance &&
                                ((this.particleInstance.material.uniforms.uCircleRadius.value = this.particleMaskRadius),
                                (this.particleInstance.material.uniforms.uMousePos.value = this.mouse),
                                (this.particleInstance.material.uniforms.uBasePos.value[0] = this.textCenterPos[0]),
                                (this.particleInstance.material.uniforms.uBasePos.value[1] = this.textCenterPos[1]),
                                this.updateParticlePositions()),
                                this.lines &&
                                  ((this.lines.material.uniforms.uScale.value = this.tweens.lineScale),
                                  this.updateLinePositions());
                            },
                          },
                          {
                            key: 'updateParticlePositions',
                            value: function () {
                              for (
                                var e = this.particleInstance.geometry.getAttribute(
                                    'position',
                                  ),
                                  t = 0;
                                t < this.particles.length;
                                t += 1
                              ) {
                                var n = this.particles[t],
                                  i = n.randomVal > 0.5 ? 1 : -1,
                                  r =
                                    n.startTime +
                                    this.time *
                                      n.speed *
                                      i *
                                      (this.props.pointerActive ? 2 : 1),
                                  o = n.posBase[0] + Math.sin(100 * r) * n.radius,
                                  a = n.posBase[1] + Math.cos(100 * r) * n.radius;
                                if (this.isActiveDelay) {
                                  var s = vt(
                                      n.posBase[0] + this.textCenterPos[0],
                                      n.posBase[1] + this.textCenterPos[1],
                                      this.mouse[0],
                                      this.mouse[1],
                                    ),
                                    u = vt(
                                      n.pos[0] + this.textCenterPos[0],
                                      n.pos[1] + this.textCenterPos[1],
                                      this.mouse[0],
                                      this.mouse[1],
                                    );
                                  if (
                                    ((n.visible = u < this.particleMaskRadius),
                                    s < this.particleMaskRadius)
                                  ) {
                                    var l =
                                        n.posBase[0] +
                                        this.textCenterPos[0] -
                                        this.mouse[0],
                                      c =
                                        n.posBase[1] +
                                        this.textCenterPos[1] -
                                        this.mouse[1],
                                      p = Math.atan2(c, l);
                                    s < 100 && n.selected
                                      ? ((o =
                                          -this.textCenterPos[0] +
                                          this.mouse[0] +
                                          Math.cos(p) *
                                            this.particleMaskRadius *
                                            0.3 +
                                          Math.sin(50 * r) *
                                            n.radius *
                                            1.5 *
                                            (this.props.pointerActive ? 2 : 1)),
                                        (a =
                                          -this.textCenterPos[1] +
                                          this.mouse[1] +
                                          Math.sin(p) *
                                            this.particleMaskRadius *
                                            0.3 +
                                          Math.cos(50 * r) *
                                            n.radius *
                                            1.5 *
                                            (this.props.pointerActive ? 2 : 1)))
                                      : ((o =
                                          -this.textCenterPos[0] +
                                          this.mouse[0] +
                                          Math.cos(p) * this.particleMaskRadius +
                                          Math.sin(60 * r) *
                                            n.radius *
                                            (this.props.pointerActive ? 3 : 1)),
                                        (a =
                                          -this.textCenterPos[1] +
                                          this.mouse[1] +
                                          Math.sin(p) * this.particleMaskRadius +
                                          Math.cos(60 * r) *
                                            n.radius *
                                            (this.props.pointerActive ? 3 : 1)));
                                  }
                                } else n.visible = !1;
                                var h = (this.props.pointerActive, n.spring),
                                  f = (this.props.pointerActive, n.friction);
                                (n.posVel[0] =
                                  (o - n.pos[0]) * h + n.posVel[0] * f),
                                  (n.posVel[1] =
                                    (a - n.pos[1]) * h + n.posVel[1] * f),
                                  (n.pos[0] += n.posVel[0]),
                                  (n.pos[1] += n.posVel[1]),
                                  e.setXYZ(t, n.pos[0], n.pos[1], n.pos[2]),
                                  (e.needsUpdate = !0);
                              }
                            },
                          },
                          {
                            key: 'filterLinks',
                            value: function () {
                              var e = this;
                              this.links = this.links.filter(function (t) {
                                var n = vt(
                                    t.from.pos[0] + e.textCenterPos[0],
                                    t.from.pos[1] + e.textCenterPos[1],
                                    e.mouse[0],
                                    e.mouse[1],
                                  ),
                                  i = vt(
                                    t.from.pos[0],
                                    t.from.pos[1],
                                    t.to.pos[0],
                                    t.to.pos[1],
                                  );
                                return (
                                  n < 1.01 * e.textMaskRadius &&
                                  i <
                                    e.textMaskRadius *
                                      Object(Jr.a)(t.from.randomVal, 0.3, 0.7)
                                );
                              });
                            },
                          },
                          {
                            key: 'createLink',
                            value: function () {
                              var e = this,
                                t = s.a
                                  .shuffle(this.particles)
                                  .find(function (t) {
                                    var n = vt(
                                      t.pos[0] + e.textCenterPos[0],
                                      t.pos[1] + e.textCenterPos[1],
                                      e.mouse[0],
                                      e.mouse[1],
                                    );
                                    e.links.find(function (e) {
                                      return e.from === t || e.to === t;
                                    });
                                    return n < e.textMaskRadius;
                                  });
                              if (t) {
                                var n = s.a.sortBy(t.neighbours, function (e) {
                                  return vt(
                                    t.pos[0],
                                    t.pos[1],
                                    e.pos[0],
                                    e.pos[1],
                                  );
                                })[0];
                                if (
                                  !this.links.find(function (e) {
                                    return !(
                                      (e.from !== t && e.from !== n) ||
                                      (e.to !== t && e.to !== n)
                                    );
                                  })
                                )
                                  vt(n.pos[0], n.pos[1], t.pos[0], t.pos[1]) >
                                    0.5 * this.textMaskRadius ||
                                    this.links.push({
                                      from: t,
                                      to: n,
                                      alpha: Object(Jr.a)(
                                        t.randomVal * n.randomVal,
                                        0.2,
                                        1,
                                      ),
                                    });
                              }
                            },
                          },
                          {
                            key: 'updateLinePositions',
                            value: function () {
                              if (
                                (this.filterLinks(),
                                this.links.length < this.maxNumLinks)
                              )
                                for (var e = 0; e < 5; e++) this.createLink();
                              for (
                                var t = this.lines.geometry.getAttribute(
                                    'aConnectionPoints',
                                  ),
                                  n =
                                    (this.lines.geometry.getAttribute(
                                      'aPointsIndex',
                                    ),
                                    this.lines.geometry.getAttribute('aOptions')),
                                  i = 0;
                                i < t.count;
                                i += 1
                              ) {
                                if (i < this.links.length) {
                                  var r = this.links[i];
                                  n.setY(i, !0),
                                    n.setW(i, r.alpha),
                                    t.setXYZW(
                                      i,
                                      r.from.pos[0],
                                      r.from.pos[1],
                                      r.to.pos[0],
                                      r.to.pos[1],
                                    ),
                                    (t.needsUpdate = !0);
                                } else n.setY(i, !1);
                                n.needsUpdate = !0;
                              }
                            },
                          },
                          {
                            key: 'setViewport',
                            value: function () {
                              var e = bo.state.viewport,
                                t = e.width,
                                n = e.height,
                                i = e.scale,
                                r = e.uiPixelRatio;
                              if (
                                ((this.maskMaxRadius =
                                  (c.a.isMobile ? 200 : 140) * i),
                                this.title &&
                                  ((this.title.material.uniforms.uViewport.value[0] =
                                    t * r),
                                  (this.title.material.uniforms.uViewport.value[1] =
                                    n * r)),
                                this.particleInstance)
                              ) {
                                (this.particleInstance.material.uniforms.uViewport.value[0] =
                                  t * r),
                                  (this.particleInstance.material.uniforms.uViewport.value[1] =
                                    n * r);
                                for (
                                  var o = this.particleInstance.geometry.getAttribute(
                                      'options',
                                    ),
                                    a = 0;
                                  a < o.count;
                                  a += 1
                                ) {
                                  var s =
                                    (c.a.isMobile ? to(3, 15) : to(2, 10)) * i;
                                  o.setX(a, s), (o.needsUpdate = !0);
                                }
                              }
                            },
                          },
                        ]) && po(n.prototype, i),
                        r && po(n, r),
                        t
                      );
                    })()).prototype,
                    'updateProgressAttribute',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      so.prototype,
                      'updateProgressAttribute',
                    ),
                    so.prototype,
                  ),
                  mo(
                    so.prototype,
                    'onActivateDelay',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      so.prototype,
                      'onActivateDelay',
                    ),
                    so.prototype,
                  ),
                  (ao = so)),
                ) || ao),
            ) || ao;
        function wo(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function xo(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                wo(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                wo(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Po(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function _o(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function ko(e) {
          return (ko = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Oo(e, t) {
          return (Oo =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var So,
          To = Object(u.a)(),
          Ao =
            Fi()(
              (go =
                Object(it.a)(rt)(
                  (go = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = _o(
                          this,
                          (e = ko(t)).call.apply(e, [this].concat(r)),
                        )).options = {
                          text: 'Text',
                          align: 'left',
                          position: 'center',
                          lineHeight: 1.3,
                          textTransform: 'default',
                          letterSpacing: 1.5,
                          layer: 1,
                        }),
                        (n.props = {
                          v: !0,
                          active: !1,
                          fontSize: 20,
                          width: 100,
                          height: 100,
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && Oo(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e = xo(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          (this.tweens = { progress: 0 }),
                                            (this.charLength = this.options.text.replace(
                                              ' ',
                                              '',
                                            ).length),
                                            (this.textScale = 0),
                                            (this.baseFontSize =
                                              $n.json.info.size),
                                            (e.t0 = this.options.textTransform),
                                            (e.next =
                                              'uppercase' === e.t0 ? 7 : 9);
                                          break;
                                        case 7:
                                          return (
                                            (this.text = this.options.text.toUpperCase()),
                                            e.abrupt('break', 11)
                                          );
                                        case 9:
                                          return (
                                            (this.text = this.options.text),
                                            e.abrupt('break', 11)
                                          );
                                        case 11:
                                          return (e.next = 13), this.setupText();
                                        case 13:
                                          (this.text = e.sent),
                                            (this.props.pZ = 3);
                                        case 15:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupText',
                          value: (function () {
                            var e = xo(
                              regeneratorRuntime.mark(function e() {
                                var t, n, i, r;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (t = si({
                                              width: this.props.width,
                                              align: this.options.align,
                                              font: $n.json,
                                              lineHeight:
                                                $n.json.common.lineHeight *
                                                this.options.lineHeight,
                                              letterSpacing: this.options
                                                .letterSpacing,
                                              text: this.text,
                                            })),
                                            ((n = $n.map).minFilter =
                                              $e.LinearFilter),
                                            ((i = new $e.ShaderMaterial({
                                              uniforms: {
                                                uIsMobile: {
                                                  value: c.a.isMobile,
                                                },
                                                uScale: { value: 1 },
                                                uTexSize: {
                                                  value: new $e.Vector2(
                                                    n.image.width,
                                                    n.image.height,
                                                  ),
                                                },
                                                uSmoothstep: {
                                                  value:
                                                    1 ===
                                                    To.state.viewport.pixelRatio
                                                      ? 0.4
                                                      : 0.2,
                                                },
                                                uProgress: { value: 0 },
                                                msdfMap: { value: n },
                                                color: {
                                                  value: new $e.Color('white'),
                                                },
                                              },
                                              transparent: !0,
                                              vertexShader: Je,
                                              fragmentShader:
                                                '#define GLSLIFY 1\nuniform bool uIsMobile;\nuniform float uSmoothstep;\nuniform float uProgress;\nuniform vec3 color;\nuniform sampler2D msdfMap;\nuniform float uScale;\nuniform vec2 uTexSize;\n\nvarying vec2 vUv;\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\n\nfloat map(float value, float inMin, float inMax, float outMin, float outMax, bool clamped) {\n\tif (clamped) value = min(inMax, max(inMin, value));\n\n\treturn outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\nvoid main() {\n    vec3 msdfSample = texture2D(msdfMap, vUv).rgb;\n    float threshold = 0.45;\n\n    float dx = dFdx(vUv.x) * uTexSize.x;\n    float dy = dFdx(vUv.y) * uTexSize.y;\n    float toPixels = 8.0 * inversesqrt(dx * dx + dy * dy);\n    float sigDist = median(msdfSample.r, msdfSample.g, msdfSample.b);\n    float w = fwidth(sigDist);\n    float alpha = smoothstep(threshold - w, threshold + w, sigDist);\n\n    // float threshold = uIsMobile ? 0.45 : map(uScale, 0.5, 1.0, 0.4, 0.5, true);\n    // // float threshold = 0.45;\n    // vec3 msdfSample = texture2D(msdfMap, vUv).rgb;\n    // float sigDist = median(msdfSample.r, msdfSample.g, msdfSample.b);\n\n    // float feather = 1.5;\n    // float dDistance = fwidth(sigDist);\n    // float edgeFeather = dDistance * feather;\n\n    // // float alpha = smoothstep(threshold - edgeFeather*0.5, threshold + edgeFeather*0.5, sigDist);\n    // float alpha = smoothstep(threshold - uSmoothstep * 0.5, threshold + uSmoothstep * 0.5, sigDist);\n\n    alpha *= uProgress;\n\n    gl_FragColor = vec4(color, alpha);\n    // gl_FragColor = vec4(vec3(color), fill);\n}',
                                            })).type = 'BodyTextMaterial'),
                                            (i.extensions.derivatives = !0),
                                            ((r = new $e.Mesh(
                                              t,
                                              i,
                                            )).rotation.x = Zn(180)),
                                            r.layers.set(this.options.layer),
                                            (r.renderOrder = 50),
                                            this.object.add(r),
                                            e.abrupt('return', r)
                                          );
                                        case 12:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setFontSize',
                          value: function (e) {
                            this.updateTitle();
                          },
                        },
                        {
                          key: 'updateTitle',
                          value: function () {
                            var e =
                              (c.a.isMobile
                                ? this.props.fontSize
                                : Math.max(13, this.props.fontSize)) /
                              this.baseFontSize;
                            this.text.scale.setScalar(e),
                              this.text.geometry.update({
                                width: this.props.width / e,
                              });
                            var t =
                                this.text.geometry.layout.width /
                                this.text.geometry.layout.height,
                              n = this.props.width / 2,
                              i = this.props.width / t / 2;
                            switch (this.options.position) {
                              case 'top-left':
                                this.text.position.set(0, 2 * -i, 0);
                                break;
                              case 'bottom-left':
                                this.text.position.set(0, 0, 0);
                                break;
                              default:
                                this.text.position.set(-n, -i, 0);
                            }
                            this.props.height = 2 * i;
                          },
                        },
                        {
                          key: 'highlight',
                          value: function () {
                            var e = this;
                            L.b.killTweensOf(this.props, { s: !0 }),
                              L.b.to(this.props, 0.4, {
                                s: 1.1,
                                ease: 'easeOutSine',
                                delay: 0.05,
                                onComplete: function () {
                                  L.b.to(e.props, 0.6, {
                                    s: 1,
                                    ease: 'easeOutSine',
                                  });
                                },
                              });
                          },
                        },
                        {
                          key: 'show',
                          value: function () {
                            var e =
                                arguments.length > 0 && void 0 !== arguments[0]
                                  ? arguments[0]
                                  : {},
                              t = e.delay,
                              n = void 0 === t ? 0 : t,
                              i = e.dur,
                              r = void 0 === i ? 1.5 : i;
                            (this.props.active = !0),
                              L.b.killTweensOf(this.tweens),
                              L.b.to(this.tweens, r, {
                                progress: 1,
                                ease: 'easeOutSine',
                                delay: n,
                              });
                          },
                        },
                        {
                          key: 'hide',
                          value: function () {
                            var e = this,
                              t =
                                arguments.length > 0 && void 0 !== arguments[0]
                                  ? arguments[0]
                                  : {},
                              n = t.delay,
                              i = void 0 === n ? 0 : n,
                              r = t.dur,
                              o = void 0 === r ? 0.3 : r;
                            L.b.killTweensOf(this.tweens),
                              L.b.to(this.tweens, o, {
                                progress: 0,
                                ease: 'easeOutSine',
                                delay: i,
                                onComplete: function () {
                                  e.props.active = !1;
                                },
                              });
                          },
                        },
                        {
                          key: 'whileActive',
                          value: function () {
                            this.text.material.uniforms.uProgress.value = this.tweens.progress;
                          },
                        },
                        {
                          key: 'setWidth',
                          value: function (e) {
                            this.text.material.uniforms.uScale.value =
                              To.state.viewport.scale;
                          },
                        },
                      ]) && Po(n.prototype, i),
                      r && Po(n, r),
                      t
                    );
                  })()),
                ) || go),
            ) || go;
        function Mo(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function jo(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Fo(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ro(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Co(e) {
          return (Co = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Eo(e, t) {
          return (Eo =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Lo = Object(u.a)(),
          Io =
            Object(it.a)($r)(
              (So = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Ro(
                      this,
                      (e = Co(t)).call.apply(e, [this].concat(r)),
                    )).progressEase = 0),
                    (n.options = { size: 1 }),
                    (n.props = {
                      vh: [
                        Lo,
                        function (e) {
                          return e.viewport.height;
                        },
                      ],
                      aspect: 1,
                      tick: !0,
                      resolution: [
                        Lo,
                        function (e) {
                          return s.a.pick(
                            e.viewport,
                            'width',
                            'height',
                            'pixelRatio',
                          );
                        },
                      ],
                      scale: function (e) {
                        var t = Lo.state.maxSlope,
                          i =
                            e.resolution.height * n.options.size +
                            e.resolution.height * t * 2;
                        return [i / e.aspect, i];
                      },
                      active: function (e) {
                        var t = e.vh,
                          i = n.options.size * t + t;
                        return (
                          e.progress * i > t / 2 && (1 - e.progress) * i > t / 2
                        );
                      },
                    }),
                    (n.options = { postProcessingMaterial: new cn() }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && Eo(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              var t,
                                n,
                                i,
                                r = this;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (t = se.a.textures.get(
                                            'placeholder-'.concat(
                                              this.options.name,
                                            ),
                                          )),
                                          (n = t.texture),
                                          (i = t.data),
                                          (window.mm = n),
                                          (this.props.aspect =
                                            i.height / i.width),
                                          (this.bg = new $e.Mesh(
                                            new $e.PlaneBufferGeometry(1, 1, 1),
                                            new $e.MeshBasicMaterial({ map: n }),
                                          )),
                                          this.bg.layers.set(1),
                                          this.scene.add(this.bg),
                                          (e.next = 8),
                                          new yo()
                                        );
                                      case 8:
                                        return (
                                          (this.title = e.sent),
                                          (e.next = 11),
                                          this.title.setup({
                                            options: {
                                              layer: 3,
                                              text: 'PLACEHOLDER TITLE',
                                              position: 'bottom-left',
                                              animationDuration: 1.5,
                                              animationStagger: 0.02,
                                            },
                                            props: {
                                              fontSize: [
                                                Lo,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 110 : 100) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              width: [
                                                Lo,
                                                function (e) {
                                                  var t =
                                                    (c.a.isMobile ? 920 : 600) *
                                                    e.viewport.scale;
                                                  return (
                                                    (r.title.props.pX =
                                                      -0.42 * e.viewport.width),
                                                    (r.title.props.pY =
                                                      e.viewport.height *
                                                      (c.a.isMobile
                                                        ? -0.13
                                                        : 0.03)),
                                                    t
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 11:
                                        return (
                                          this.scene.add(this.title.object),
                                          (e.next = 14),
                                          new Ao()
                                        );
                                      case 14:
                                        return (
                                          (this.bodyText = e.sent),
                                          (e.next = 17),
                                          this.bodyText.setup({
                                            options: {
                                              layer: 3,
                                              position: c.a.isMobile
                                                ? 'bottom-left'
                                                : 'top-left',
                                              text:
                                                'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Itaque sequi, earum sunt dicta adipisci cum ullam! Similique labore amet, voluptas!',
                                            },
                                            props: {
                                              fontSize: [
                                                Lo,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 40 : 20) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              width: [
                                                Lo,
                                                function (e) {
                                                  var t =
                                                    (c.a.isMobile ? 920 : 700) *
                                                    e.viewport.scale;
                                                  return (
                                                    (r.bodyText.props.pX =
                                                      -0.42 * e.viewport.width),
                                                    (r.bodyText.props.pY =
                                                      e.viewport.height *
                                                      (c.a.isMobile
                                                        ? -0.3
                                                        : -0.03)),
                                                    t
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 17:
                                        this.scene.add(this.bodyText.object);
                                      case 18:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  jo(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  jo(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    { key: 'preCompile', value: function (e) {} },
                    { key: 'preUpload', value: function () {} },
                    {
                      key: 'render',
                      value: function (e) {
                        var t = e.renderer,
                          n = e.ortho;
                        e.target, e.quad, e.edgeTop, e.edgeBottom;
                        n.layers.set(1), t.render(this.scene, n);
                      },
                    },
                    {
                      key: 'renderUi',
                      value: function (e) {
                        var t = e.renderer,
                          n = e.ortho;
                        e.target;
                        n.layers.set(3), t.render(this.scene, n);
                      },
                    },
                    {
                      key: 'setScale',
                      value: function (e) {
                        var t = Mo(e, 2),
                          n = t[0],
                          i = t[1];
                        this.bg.scale.set(n, i, 1);
                      },
                    },
                    {
                      key: 'setProgress',
                      value: function (e) {
                        var t = Lo.state.viewport.height,
                          n = this.options.size * t * 0.5 + 0.5 * t,
                          i = Object(Jr.a)(e, -n, n);
                        this.bg.position.set(0, i, 0);
                      },
                    },
                    {
                      key: 'setResolution',
                      value: function (e) {
                        var t = e.width,
                          n = e.height,
                          i = e.pixelRatio;
                        this.options.postProcessingMaterial.resolution.set(
                          t * i,
                          n * i,
                        );
                      },
                    },
                    {
                      key: 'onActive',
                      value: function () {
                        this.title.show({ delay: 0.4 }),
                          this.bodyText.show({ delay: 0.9 });
                      },
                    },
                    {
                      key: 'offActive',
                      value: function () {
                        this.title.hide(), this.bodyText.hide({ delay: 0 });
                      },
                    },
                  ]) && Fo(n.prototype, i),
                  r && Fo(n, r),
                  t
                );
              })()),
            ) || So;
        $e.GLTFLoader = (function () {
          function e(e) {
            (this.manager = void 0 !== e ? e : $e.DefaultLoadingManager),
              (this.dracoLoader = null);
          }
          function t() {
            var e = {};
            return {
              get: function (t) {
                return e[t];
              },
              add: function (t, n) {
                e[t] = n;
              },
              remove: function (t) {
                delete e[t];
              },
              removeAll: function () {
                e = {};
              },
            };
          }
          e.prototype = {
            constructor: e,
            crossOrigin: 'Anonymous',
            load: function (e, t, n, i) {
              var r = this,
                o =
                  void 0 !== this.path
                    ? this.path
                    : $e.LoaderUtils.extractUrlBase(e),
                a = new $e.FileLoader(r.manager);
              a.setResponseType('arraybuffer'),
                a.load(
                  e,
                  function (e) {
                    try {
                      r.parse(e, o, t, i);
                    } catch (e) {
                      if (void 0 === i) throw e;
                      i(e);
                    }
                  },
                  n,
                  i,
                );
            },
            setCrossOrigin: function (e) {
              return (this.crossOrigin = e), this;
            },
            setPath: function (e) {
              return (this.path = e), this;
            },
            setDRACOLoader: function (e) {
              return (this.dracoLoader = e), this;
            },
            parse: function (e, t, s, u) {
              var h,
                f = {};
              if ('string' == typeof e) h = e;
              else if ($e.LoaderUtils.decodeText(new Uint8Array(e, 0, 4)) === a) {
                try {
                  f[n.KHR_BINARY_GLTF] = new l(e);
                } catch (e) {
                  return void (u && u(e));
                }
                h = f[n.KHR_BINARY_GLTF].content;
              } else h = $e.LoaderUtils.decodeText(new Uint8Array(e));
              var d = JSON.parse(h);
              void 0 === d.asset || d.asset.version[0] < 2
                ? u &&
                  u(
                    new Error(
                      'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.',
                    ),
                  )
                : (d.extensionsUsed &&
                    (d.extensionsUsed.indexOf(n.KHR_LIGHTS) >= 0 &&
                      (f[n.KHR_LIGHTS] = new r(d)),
                    d.extensionsUsed.indexOf(n.KHR_MATERIALS_UNLIT) >= 0 &&
                      (f[n.KHR_MATERIALS_UNLIT] = new o(d)),
                    d.extensionsUsed.indexOf(
                      n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,
                    ) >= 0 &&
                      (f[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS] = new p()),
                    d.extensionsUsed.indexOf(n.KHR_DRACO_MESH_COMPRESSION) >= 0 &&
                      (f[n.KHR_DRACO_MESH_COMPRESSION] = new c(this.dracoLoader)),
                    d.extensionsUsed.indexOf(n.MSFT_TEXTURE_DDS) >= 0 &&
                      (f[n.MSFT_TEXTURE_DDS] = new i())),
                  new D(d, f, {
                    path: t || this.path || '',
                    crossOrigin: this.crossOrigin,
                    manager: this.manager,
                  }).parse(function (e, t, n, i, r) {
                    s({
                      scene: e,
                      scenes: t,
                      cameras: n,
                      animations: i,
                      asset: r,
                    });
                  }, u));
            },
          };
          var n = {
            KHR_BINARY_GLTF: 'KHR_binary_glTF',
            KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',
            KHR_LIGHTS: 'KHR_lights',
            KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:
              'KHR_materials_pbrSpecularGlossiness',
            KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',
            MSFT_TEXTURE_DDS: 'MSFT_texture_dds',
          };
          function i() {
            if (!$e.DDSLoader)
              throw new Error(
                'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader',
              );
            (this.name = n.MSFT_TEXTURE_DDS),
              (this.ddsLoader = new $e.DDSLoader());
          }
          function r(e) {
            (this.name = n.KHR_LIGHTS), (this.lights = {});
            var t =
              ((e.extensions && e.extensions[n.KHR_LIGHTS]) || {}).lights || {};
            for (var i in t) {
              var r,
                o = t[i],
                a = new $e.Color().fromArray(o.color);
              switch (o.type) {
                case 'directional':
                  (r = new $e.DirectionalLight(a)).target.position.set(0, 0, 1),
                    r.add(r.target);
                  break;
                case 'point':
                  r = new $e.PointLight(a);
                  break;
                case 'spot':
                  (r = new $e.SpotLight(a)),
                    (o.spot = o.spot || {}),
                    (o.spot.innerConeAngle =
                      void 0 !== o.spot.innerConeAngle
                        ? o.spot.innerConeAngle
                        : 0),
                    (o.spot.outerConeAngle =
                      void 0 !== o.spot.outerConeAngle
                        ? o.spot.outerConeAngle
                        : Math.PI / 4),
                    (r.angle = o.spot.outerConeAngle),
                    (r.penumbra =
                      1 - o.spot.innerConeAngle / o.spot.outerConeAngle),
                    r.target.position.set(0, 0, 1),
                    r.add(r.target);
                  break;
                case 'ambient':
                  r = new $e.AmbientLight(a);
              }
              r &&
                ((r.decay = 2),
                void 0 !== o.intensity && (r.intensity = o.intensity),
                (r.name = o.name || 'light_' + i),
                (this.lights[i] = r));
            }
          }
          function o(e) {
            this.name = n.KHR_MATERIALS_UNLIT;
          }
          (o.prototype.getMaterialType = function (e) {
            return $e.MeshBasicMaterial;
          }),
            (o.prototype.extendParams = function (e, t, n) {
              var i = [];
              (e.color = new $e.Color(1, 1, 1)), (e.opacity = 1);
              var r = t.pbrMetallicRoughness;
              if (r) {
                if (Array.isArray(r.baseColorFactor)) {
                  var o = r.baseColorFactor;
                  e.color.fromArray(o), (e.opacity = o[3]);
                }
                void 0 !== r.baseColorTexture &&
                  i.push(n.assignTexture(e, 'map', r.baseColorTexture.index));
              }
              return Promise.all(i);
            });
          var a = 'glTF',
            s = 12,
            u = { JSON: 1313821514, BIN: 5130562 };
          function l(e) {
            (this.name = n.KHR_BINARY_GLTF),
              (this.content = null),
              (this.body = null);
            var t = new DataView(e, 0, s);
            if (
              ((this.header = {
                magic: $e.LoaderUtils.decodeText(new Uint8Array(e.slice(0, 4))),
                version: t.getUint32(4, !0),
                length: t.getUint32(8, !0),
              }),
              this.header.magic !== a)
            )
              throw new Error(
                'THREE.GLTFLoader: Unsupported glTF-Binary header.',
              );
            if (this.header.version < 2)
              throw new Error(
                'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.',
              );
            for (var i = new DataView(e, s), r = 0; r < i.byteLength; ) {
              var o = i.getUint32(r, !0);
              r += 4;
              var l = i.getUint32(r, !0);
              if (((r += 4), l === u.JSON)) {
                var c = new Uint8Array(e, s + r, o);
                this.content = $e.LoaderUtils.decodeText(c);
              } else if (l === u.BIN) {
                var p = s + r;
                this.body = e.slice(p, p + o);
              }
              r += o;
            }
            if (null === this.content)
              throw new Error('THREE.GLTFLoader: JSON content not found.');
          }
          function c(e) {
            if (!e)
              throw new Error(
                'THREE.GLTFLoader: No DRACOLoader instance provided.',
              );
            (this.name = n.KHR_DRACO_MESH_COMPRESSION), (this.dracoLoader = e);
          }
          function p() {
            return {
              name: n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,
              specularGlossinessParams: [
                'color',
                'map',
                'lightMap',
                'lightMapIntensity',
                'aoMap',
                'aoMapIntensity',
                'emissive',
                'emissiveIntensity',
                'emissiveMap',
                'bumpMap',
                'bumpScale',
                'normalMap',
                'displacementMap',
                'displacementScale',
                'displacementBias',
                'specularMap',
                'specular',
                'glossinessMap',
                'glossiness',
                'alphaMap',
                'envMap',
                'envMapIntensity',
                'refractionRatio',
              ],
              getMaterialType: function () {
                return $e.ShaderMaterial;
              },
              extendParams: function (e, t, n) {
                var i = t.extensions[this.name],
                  r = $e.ShaderLib.standard,
                  o = $e.UniformsUtils.clone(r.uniforms),
                  a = [
                    '#ifdef USE_SPECULARMAP',
                    '\tuniform sampler2D specularMap;',
                    '#endif',
                  ].join('\n'),
                  s = [
                    '#ifdef USE_GLOSSINESSMAP',
                    '\tuniform sampler2D glossinessMap;',
                    '#endif',
                  ].join('\n'),
                  u = [
                    'vec3 specularFactor = specular;',
                    '#ifdef USE_SPECULARMAP',
                    '\tvec4 texelSpecular = texture2D( specularMap, vUv );',
                    '\ttexelSpecular = sRGBToLinear( texelSpecular );',
                    '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',
                    '\tspecularFactor *= texelSpecular.rgb;',
                    '#endif',
                  ].join('\n'),
                  l = [
                    'float glossinessFactor = glossiness;',
                    '#ifdef USE_GLOSSINESSMAP',
                    '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',
                    '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',
                    '\tglossinessFactor *= texelGlossiness.a;',
                    '#endif',
                  ].join('\n'),
                  c = [
                    'PhysicalMaterial material;',
                    'material.diffuseColor = diffuseColor.rgb;',
                    'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',
                    'material.specularColor = specularFactor.rgb;',
                  ].join('\n'),
                  p = r.fragmentShader
                    .replace('#include <specularmap_fragment>', '')
                    .replace('uniform float roughness;', 'uniform vec3 specular;')
                    .replace(
                      'uniform float metalness;',
                      'uniform float glossiness;',
                    )
                    .replace('#include <roughnessmap_pars_fragment>', a)
                    .replace('#include <metalnessmap_pars_fragment>', s)
                    .replace('#include <roughnessmap_fragment>', u)
                    .replace('#include <metalnessmap_fragment>', l)
                    .replace('#include <lights_physical_fragment>', c);
                delete o.roughness,
                  delete o.metalness,
                  delete o.roughnessMap,
                  delete o.metalnessMap,
                  (o.specular = { value: new $e.Color().setHex(1118481) }),
                  (o.glossiness = { value: 0.5 }),
                  (o.specularMap = { value: null }),
                  (o.glossinessMap = { value: null }),
                  (e.vertexShader = r.vertexShader),
                  (e.fragmentShader = p),
                  (e.uniforms = o),
                  (e.defines = { STANDARD: '' }),
                  (e.color = new $e.Color(1, 1, 1)),
                  (e.opacity = 1);
                var h = [];
                if (Array.isArray(i.diffuseFactor)) {
                  var f = i.diffuseFactor;
                  e.color.fromArray(f), (e.opacity = f[3]);
                }
                if (
                  (void 0 !== i.diffuseTexture &&
                    h.push(n.assignTexture(e, 'map', i.diffuseTexture.index)),
                  (e.emissive = new $e.Color(0, 0, 0)),
                  (e.glossiness =
                    void 0 !== i.glossinessFactor ? i.glossinessFactor : 1),
                  (e.specular = new $e.Color(1, 1, 1)),
                  Array.isArray(i.specularFactor) &&
                    e.specular.fromArray(i.specularFactor),
                  void 0 !== i.specularGlossinessTexture)
                ) {
                  var d = i.specularGlossinessTexture.index;
                  h.push(n.assignTexture(e, 'glossinessMap', d)),
                    h.push(n.assignTexture(e, 'specularMap', d));
                }
                return Promise.all(h);
              },
              createMaterial: function (e) {
                var t = new $e.ShaderMaterial({
                  defines: e.defines,
                  vertexShader: e.vertexShader,
                  fragmentShader: e.fragmentShader,
                  uniforms: e.uniforms,
                  fog: !0,
                  lights: !0,
                  opacity: e.opacity,
                  transparent: e.transparent,
                });
                return (
                  (t.isGLTFSpecularGlossinessMaterial = !0),
                  (t.color = e.color),
                  (t.map = void 0 === e.map ? null : e.map),
                  (t.lightMap = null),
                  (t.lightMapIntensity = 1),
                  (t.aoMap = void 0 === e.aoMap ? null : e.aoMap),
                  (t.aoMapIntensity = 1),
                  (t.emissive = e.emissive),
                  (t.emissiveIntensity = 1),
                  (t.emissiveMap =
                    void 0 === e.emissiveMap ? null : e.emissiveMap),
                  (t.bumpMap = void 0 === e.bumpMap ? null : e.bumpMap),
                  (t.bumpScale = 1),
                  (t.normalMap = void 0 === e.normalMap ? null : e.normalMap),
                  e.normalScale && (t.normalScale = e.normalScale),
                  (t.displacementMap = null),
                  (t.displacementScale = 1),
                  (t.displacementBias = 0),
                  (t.specularMap =
                    void 0 === e.specularMap ? null : e.specularMap),
                  (t.specular = e.specular),
                  (t.glossinessMap =
                    void 0 === e.glossinessMap ? null : e.glossinessMap),
                  (t.glossiness = e.glossiness),
                  (t.alphaMap = null),
                  (t.envMap = void 0 === e.envMap ? null : e.envMap),
                  (t.envMapIntensity = 1),
                  (t.refractionRatio = 0.98),
                  (t.extensions.derivatives = !0),
                  t
                );
              },
              cloneMaterial: function (e) {
                var t = e.clone();
                t.isGLTFSpecularGlossinessMaterial = !0;
                for (
                  var n = this.specularGlossinessParams, i = 0, r = n.length;
                  i < r;
                  i++
                )
                  t[n[i]] = e[n[i]];
                return t;
              },
              refreshUniforms: function (e, t, n, i, r, o) {
                if (!0 === r.isGLTFSpecularGlossinessMaterial) {
                  var a,
                    s,
                    u,
                    l = r.uniforms,
                    c = r.defines;
                  if (
                    ((l.opacity.value = r.opacity),
                    l.diffuse.value.copy(r.color),
                    l.emissive.value
                      .copy(r.emissive)
                      .multiplyScalar(r.emissiveIntensity),
                    (l.map.value = r.map),
                    (l.specularMap.value = r.specularMap),
                    (l.alphaMap.value = r.alphaMap),
                    (l.lightMap.value = r.lightMap),
                    (l.lightMapIntensity.value = r.lightMapIntensity),
                    (l.aoMap.value = r.aoMap),
                    (l.aoMapIntensity.value = r.aoMapIntensity),
                    r.map
                      ? (a = r.map)
                      : r.specularMap
                      ? (a = r.specularMap)
                      : r.displacementMap
                      ? (a = r.displacementMap)
                      : r.normalMap
                      ? (a = r.normalMap)
                      : r.bumpMap
                      ? (a = r.bumpMap)
                      : r.glossinessMap
                      ? (a = r.glossinessMap)
                      : r.alphaMap
                      ? (a = r.alphaMap)
                      : r.emissiveMap && (a = r.emissiveMap),
                    void 0 !== a)
                  )
                    if (
                      (a.isWebGLRenderTarget && (a = a.texture),
                      void 0 !== a.matrix)
                    ) {
                      if (!0 === a.matrixAutoUpdate) {
                        (s = a.offset), (u = a.repeat);
                        var p = a.rotation,
                          h = a.center;
                        a.matrix.setUvTransform(s.x, s.y, u.x, u.y, p, h.x, h.y);
                      }
                      l.uvTransform.value.copy(a.matrix);
                    } else
                      (s = a.offset),
                        (u = a.repeat),
                        l.offsetRepeat.value.set(s.x, s.y, u.x, u.y);
                  (l.envMap.value = r.envMap),
                    (l.envMapIntensity.value = r.envMapIntensity),
                    (l.flipEnvMap.value =
                      r.envMap && r.envMap.isCubeTexture ? -1 : 1),
                    (l.refractionRatio.value = r.refractionRatio),
                    l.specular.value.copy(r.specular),
                    (l.glossiness.value = r.glossiness),
                    (l.glossinessMap.value = r.glossinessMap),
                    (l.emissiveMap.value = r.emissiveMap),
                    (l.bumpMap.value = r.bumpMap),
                    (l.normalMap.value = r.normalMap),
                    (l.displacementMap.value = r.displacementMap),
                    (l.displacementScale.value = r.displacementScale),
                    (l.displacementBias.value = r.displacementBias),
                    null !== l.glossinessMap.value &&
                      void 0 === c.USE_GLOSSINESSMAP &&
                      ((c.USE_GLOSSINESSMAP = ''), (c.USE_ROUGHNESSMAP = '')),
                    null === l.glossinessMap.value &&
                      void 0 !== c.USE_GLOSSINESSMAP &&
                      (delete c.USE_GLOSSINESSMAP, delete c.USE_ROUGHNESSMAP);
                }
              },
            };
          }
          function h(e, t, n, i) {
            $e.Interpolant.call(this, e, t, n, i);
          }
          (c.prototype.decodePrimitive = function (e, t) {
            var n = this.dracoLoader,
              i = e.extensions[this.name].bufferView,
              r = e.extensions[this.name].attributes,
              o = {};
            for (var a in r) a in S && (o[S[a]] = r[a]);
            return t.getDependency('bufferView', i).then(function (e) {
              return new Promise(function (t) {
                n.decodeDracoFile(e, t, o);
              });
            });
          }),
            (h.prototype = Object.create($e.Interpolant.prototype)),
            (h.prototype.constructor = h),
            (h.prototype.interpolate_ = function (e, t, n, i) {
              for (
                var r = this.resultBuffer,
                  o = this.sampleValues,
                  a = this.valueSize,
                  s = 2 * a,
                  u = 3 * a,
                  l = i - t,
                  c = (n - t) / l,
                  p = c * c,
                  h = p * c,
                  f = e * u,
                  d = f - u,
                  v = 2 * h - 3 * p + 1,
                  m = h - 2 * p + c,
                  g = -2 * h + 3 * p,
                  b = h - p,
                  y = 0;
                y !== a;
                y++
              ) {
                var w = o[d + y + a],
                  x = o[d + y + s] * l,
                  P = o[f + y + a],
                  _ = o[f + y] * l;
                r[y] = v * w + m * x + g * P + b * _;
              }
              return r;
            });
          var f = 0,
            d = 1,
            v = 2,
            m = 3,
            g = 4,
            b = 5,
            y = 6,
            w =
              (Number,
              $e.Matrix3,
              $e.Matrix4,
              $e.Vector2,
              $e.Vector3,
              $e.Vector4,
              $e.Texture,
              {
                5120: Int8Array,
                5121: Uint8Array,
                5122: Int16Array,
                5123: Uint16Array,
                5125: Uint32Array,
                5126: Float32Array,
              }),
            x = {
              9728: $e.NearestFilter,
              9729: $e.LinearFilter,
              9984: $e.NearestMipMapNearestFilter,
              9985: $e.LinearMipMapNearestFilter,
              9986: $e.NearestMipMapLinearFilter,
              9987: $e.LinearMipMapLinearFilter,
            },
            P = {
              33071: $e.ClampToEdgeWrapping,
              33648: $e.MirroredRepeatWrapping,
              10497: $e.RepeatWrapping,
            },
            _ = {
              6406: $e.AlphaFormat,
              6407: $e.RGBFormat,
              6408: $e.RGBAFormat,
              6409: $e.LuminanceFormat,
              6410: $e.LuminanceAlphaFormat,
            },
            k = {
              5121: $e.UnsignedByteType,
              32819: $e.UnsignedShort4444Type,
              32820: $e.UnsignedShort5551Type,
              33635: $e.UnsignedShort565Type,
            },
            O =
              ($e.BackSide,
              $e.FrontSide,
              $e.NeverDepth,
              $e.LessDepth,
              $e.EqualDepth,
              $e.LessEqualDepth,
              $e.GreaterEqualDepth,
              $e.NotEqualDepth,
              $e.GreaterEqualDepth,
              $e.AlwaysDepth,
              $e.AddEquation,
              $e.SubtractEquation,
              $e.ReverseSubtractEquation,
              $e.ZeroFactor,
              $e.OneFactor,
              $e.SrcColorFactor,
              $e.OneMinusSrcColorFactor,
              $e.SrcAlphaFactor,
              $e.OneMinusSrcAlphaFactor,
              $e.DstAlphaFactor,
              $e.OneMinusDstAlphaFactor,
              $e.DstColorFactor,
              $e.OneMinusDstColorFactor,
              $e.SrcAlphaSaturateFactor,
              {
                SCALAR: 1,
                VEC2: 2,
                VEC3: 3,
                VEC4: 4,
                MAT2: 4,
                MAT3: 9,
                MAT4: 16,
              }),
            S = {
              POSITION: 'position',
              NORMAL: 'normal',
              TEXCOORD_0: 'uv',
              TEXCOORD0: 'uv',
              TEXCOORD: 'uv',
              TEXCOORD_1: 'uv2',
              COLOR_0: 'color',
              COLOR0: 'color',
              COLOR: 'color',
              WEIGHTS_0: 'skinWeight',
              WEIGHT: 'skinWeight',
              JOINTS_0: 'skinIndex',
              JOINT: 'skinIndex',
            },
            T = {
              scale: 'scale',
              translation: 'position',
              rotation: 'quaternion',
              weights: 'morphTargetInfluences',
            },
            A = {
              CUBICSPLINE: $e.InterpolateSmooth,
              LINEAR: $e.InterpolateLinear,
              STEP: $e.InterpolateDiscrete,
            },
            M = 'OPAQUE',
            j = 'MASK',
            F = 'BLEND';
          function R(e, t) {
            return 'string' != typeof e || '' === e
              ? ''
              : /^(https?:)?\/\//i.test(e)
              ? e
              : /^data:.*,.*$/i.test(e)
              ? e
              : /^blob:.*$/i.test(e)
              ? e
              : t + e;
          }
          function C(e, t, n, i) {
            for (
              var r = e.geometry,
                o = n.targets,
                a = !1,
                s = !1,
                u = 0,
                l = o.length;
              u < l;
              u++
            ) {
              if (
                (void 0 !== (h = o[u]).POSITION && (a = !0),
                void 0 !== h.NORMAL && (s = !0),
                a && s)
              )
                break;
            }
            if (a || s) {
              var c = [],
                p = [];
              for (u = 0, l = o.length; u < l; u++) {
                var h = o[u],
                  f = 'morphTarget' + u;
                if (a) {
                  if (void 0 !== h.POSITION) {
                    var d = I(i[h.POSITION]);
                    d.name = f;
                    for (
                      var v = r.attributes.position, m = 0, g = d.count;
                      m < g;
                      m++
                    )
                      d.setXYZ(
                        m,
                        d.getX(m) + v.getX(m),
                        d.getY(m) + v.getY(m),
                        d.getZ(m) + v.getZ(m),
                      );
                  } else d = r.attributes.position;
                  c.push(d);
                }
                if (s) {
                  if (void 0 !== h.NORMAL) {
                    var b;
                    (b = I(i[h.NORMAL])).name = f;
                    var y = r.attributes.normal;
                    for (m = 0, g = b.count; m < g; m++)
                      b.setXYZ(
                        m,
                        b.getX(m) + y.getX(m),
                        b.getY(m) + y.getY(m),
                        b.getZ(m) + y.getZ(m),
                      );
                  } else b = r.attributes.normal;
                  p.push(b);
                }
              }
              if (
                (a && (r.morphAttributes.position = c),
                s && (r.morphAttributes.normal = p),
                e.updateMorphTargets(),
                void 0 !== t.weights)
              )
                for (u = 0, l = t.weights.length; u < l; u++)
                  e.morphTargetInfluences[u] = t.weights[u];
              if (t.extras && Array.isArray(t.extras.targetNames)) {
                var w = t.extras.targetNames;
                if (e.morphTargetInfluences.length === w.length) {
                  e.morphTargetDictionary = {};
                  for (u = 0, l = w.length; u < l; u++)
                    e.morphTargetDictionary[w[u]] = u;
                } else
                  console.warn(
                    'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.',
                  );
              }
            }
          }
          function E(e, t) {
            if (e.indices !== t.indices) return !1;
            var n = e.attributes || {},
              i = t.attributes || {},
              r = Object.keys(n),
              o = Object.keys(i);
            if (r.length !== o.length) return !1;
            for (var a = 0, s = r.length; a < s; a++) {
              var u = r[a];
              if (n[u] !== i[u]) return !1;
            }
            return !0;
          }
          function L(e, t) {
            for (var n = 0, i = e.length; n < i; n++) {
              var r = e[n];
              if (E(r.primitive, t)) return r.promise;
            }
            return null;
          }
          function I(e) {
            if (e.isInterleavedBufferAttribute) {
              for (
                var t = e.count,
                  n = e.itemSize,
                  i = e.array.slice(0, t * n),
                  r = 0;
                r < t;
                ++r
              )
                (i[r] = e.getX(r)),
                  n >= 2 && (i[r + 1] = e.getY(r)),
                  n >= 3 && (i[r + 2] = e.getZ(r)),
                  n >= 4 && (i[r + 3] = e.getW(r));
              return new $e.BufferAttribute(i, n, e.normalized);
            }
            return e.clone();
          }
          function D(e, n, i) {
            (this.json = e || {}),
              (this.extensions = n || {}),
              (this.options = i || {}),
              (this.cache = new t()),
              (this.primitiveCache = []),
              (this.textureLoader = new $e.TextureLoader(this.options.manager)),
              this.textureLoader.setCrossOrigin(this.options.crossOrigin),
              (this.fileLoader = new $e.FileLoader(this.options.manager)),
              this.fileLoader.setResponseType('arraybuffer');
          }
          function U(e, t, n) {
            var i = t.attributes;
            for (var r in i) {
              var o = S[r],
                a = n[i[r]];
              o && (o in e.attributes || e.addAttribute(o, a));
            }
            void 0 === t.indices || e.index || e.setIndex(n[t.indices]);
          }
          return (
            (D.prototype.parse = function (e, t) {
              var n = this.json;
              this.cache.removeAll(),
                this.markDefs(),
                this.getMultiDependencies(['scene', 'animation', 'camera'])
                  .then(function (t) {
                    var i = t.scenes || [],
                      r = i[n.scene || 0],
                      o = t.animations || [],
                      a = n.asset,
                      s = t.cameras || [];
                    e(r, i, s, o, a);
                  })
                  .catch(t);
            }),
            (D.prototype.markDefs = function () {
              for (
                var e = this.json.nodes || [],
                  t = this.json.skins || [],
                  n = this.json.meshes || [],
                  i = {},
                  r = {},
                  o = 0,
                  a = t.length;
                o < a;
                o++
              )
                for (var s = t[o].joints, u = 0, l = s.length; u < l; u++)
                  e[s[u]].isBone = !0;
              for (var c = 0, p = e.length; c < p; c++) {
                var h = e[c];
                void 0 !== h.mesh &&
                  (void 0 === i[h.mesh] && (i[h.mesh] = r[h.mesh] = 0),
                  i[h.mesh]++,
                  void 0 !== h.skin && (n[h.mesh].isSkinnedMesh = !0));
              }
              (this.json.meshReferences = i), (this.json.meshUses = r);
            }),
            (D.prototype.getDependency = function (e, t) {
              var n = e + ':' + t,
                i = this.cache.get(n);
              if (!i) {
                switch (e) {
                  case 'scene':
                    i = this.loadScene(t);
                    break;
                  case 'node':
                    i = this.loadNode(t);
                    break;
                  case 'mesh':
                    i = this.loadMesh(t);
                    break;
                  case 'accessor':
                    i = this.loadAccessor(t);
                    break;
                  case 'bufferView':
                    i = this.loadBufferView(t);
                    break;
                  case 'buffer':
                    i = this.loadBuffer(t);
                    break;
                  case 'material':
                    i = this.loadMaterial(t);
                    break;
                  case 'texture':
                    i = this.loadTexture(t);
                    break;
                  case 'skin':
                    i = this.loadSkin(t);
                    break;
                  case 'animation':
                    i = this.loadAnimation(t);
                    break;
                  case 'camera':
                    i = this.loadCamera(t);
                    break;
                  default:
                    throw new Error('Unknown type: ' + e);
                }
                this.cache.add(n, i);
              }
              return i;
            }),
            (D.prototype.getDependencies = function (e) {
              var t = this.cache.get(e);
              if (!t) {
                var n = this,
                  i = this.json[e + ('mesh' === e ? 'es' : 's')] || [];
                (t = Promise.all(
                  i.map(function (t, i) {
                    return n.getDependency(e, i);
                  }),
                )),
                  this.cache.add(e, t);
              }
              return t;
            }),
            (D.prototype.getMultiDependencies = function (e) {
              for (var t = {}, n = [], i = 0, r = e.length; i < r; i++) {
                var o = e[i],
                  a = this.getDependencies(o);
                (a = a.then(
                  function (e, n) {
                    t[e] = n;
                  }.bind(this, o + ('mesh' === o ? 'es' : 's')),
                )),
                  n.push(a);
              }
              return Promise.all(n).then(function () {
                return t;
              });
            }),
            (D.prototype.loadBuffer = function (e) {
              var t = this.json.buffers[e],
                i = this.fileLoader;
              if (t.type && 'arraybuffer' !== t.type)
                throw new Error(
                  'THREE.GLTFLoader: ' +
                    t.type +
                    ' buffer type is not supported.',
                );
              if (void 0 === t.uri && 0 === e)
                return Promise.resolve(this.extensions[n.KHR_BINARY_GLTF].body);
              var r = this.options;
              return new Promise(function (e, n) {
                i.load(R(t.uri, r.path), e, void 0, function () {
                  n(
                    new Error(
                      'THREE.GLTFLoader: Failed to load buffer "' + t.uri + '".',
                    ),
                  );
                });
              });
            }),
            (D.prototype.loadBufferView = function (e) {
              var t = this.json.bufferViews[e];
              return this.getDependency('buffer', t.buffer).then(function (e) {
                var n = t.byteLength || 0,
                  i = t.byteOffset || 0;
                return e.slice(i, i + n);
              });
            }),
            (D.prototype.loadAccessor = function (e) {
              var t = this,
                n = this.json,
                i = this.json.accessors[e];
              if (void 0 === i.bufferView && void 0 === i.sparse) return null;
              var r = [];
              return (
                void 0 !== i.bufferView
                  ? r.push(this.getDependency('bufferView', i.bufferView))
                  : r.push(null),
                void 0 !== i.sparse &&
                  (r.push(
                    this.getDependency('bufferView', i.sparse.indices.bufferView),
                  ),
                  r.push(
                    this.getDependency('bufferView', i.sparse.values.bufferView),
                  )),
                Promise.all(r).then(function (e) {
                  var r,
                    o,
                    a = e[0],
                    s = O[i.type],
                    u = w[i.componentType],
                    l = u.BYTES_PER_ELEMENT,
                    c = l * s,
                    p = i.byteOffset || 0,
                    h = n.bufferViews[i.bufferView].byteStride,
                    f = !0 === i.normalized;
                  if (h && h !== c) {
                    var d =
                        'InterleavedBuffer:' +
                        i.bufferView +
                        ':' +
                        i.componentType,
                      v = t.cache.get(d);
                    v ||
                      ((r = new u(a)),
                      (v = new $e.InterleavedBuffer(r, h / l)),
                      t.cache.add(d, v)),
                      (o = new $e.InterleavedBufferAttribute(v, s, p / l, f));
                  } else (r = null === a ? new u(i.count * s) : new u(a, p, i.count * s)), (o = new $e.BufferAttribute(r, s, f));
                  if (void 0 !== i.sparse) {
                    var m = O.SCALAR,
                      g = w[i.sparse.indices.componentType],
                      b = i.sparse.indices.byteOffset || 0,
                      y = i.sparse.values.byteOffset || 0,
                      x = new g(e[1], b, i.sparse.count * m),
                      P = new u(e[2], y, i.sparse.count * s);
                    null !== a && o.setArray(o.array.slice());
                    for (var _ = 0, k = x.length; _ < k; _++) {
                      var S = x[_];
                      if (
                        (o.setX(S, P[_ * s]),
                        s >= 2 && o.setY(S, P[_ * s + 1]),
                        s >= 3 && o.setZ(S, P[_ * s + 2]),
                        s >= 4 && o.setW(S, P[_ * s + 3]),
                        s >= 5)
                      )
                        throw new Error(
                          'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.',
                        );
                    }
                  }
                  return o;
                })
              );
            }),
            (D.prototype.loadTexture = function (e) {
              var t,
                i = this,
                r = this.json,
                o = this.options,
                a = this.textureLoader,
                s = window.URL || window.webkitURL,
                u = r.textures[e],
                l = u.extensions || {},
                c = (t = l[n.MSFT_TEXTURE_DDS]
                  ? r.images[l[n.MSFT_TEXTURE_DDS].source]
                  : r.images[u.source]).uri,
                p = !1;
              return (
                void 0 !== t.bufferView &&
                  (c = i
                    .getDependency('bufferView', t.bufferView)
                    .then(function (e) {
                      p = !0;
                      var n = new Blob([e], { type: t.mimeType });
                      return (c = s.createObjectURL(n));
                    })),
                Promise.resolve(c)
                  .then(function (e) {
                    var t = $e.Loader.Handlers.get(e);
                    return (
                      t ||
                        (t = l[n.MSFT_TEXTURE_DDS]
                          ? i.extensions[n.MSFT_TEXTURE_DDS].ddsLoader
                          : a),
                      new Promise(function (n, i) {
                        t.load(R(e, o.path), n, void 0, i);
                      })
                    );
                  })
                  .then(function (e) {
                    !0 === p && s.revokeObjectURL(c),
                      (e.flipY = !1),
                      void 0 !== u.name && (e.name = u.name),
                      l[n.MSFT_TEXTURE_DDS] ||
                        (e.format =
                          void 0 !== u.format ? _[u.format] : $e.RGBAFormat),
                      void 0 !== u.internalFormat &&
                        e.format !== _[u.internalFormat] &&
                        console.warn(
                          'THREE.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format.',
                        ),
                      (e.type =
                        void 0 !== u.type ? k[u.type] : $e.UnsignedByteType);
                    var t = (r.samplers || {})[u.sampler] || {};
                    return (
                      (e.magFilter = x[t.magFilter] || $e.LinearFilter),
                      (e.minFilter =
                        x[t.minFilter] || $e.LinearMipMapLinearFilter),
                      (e.wrapS = P[t.wrapS] || $e.RepeatWrapping),
                      (e.wrapT = P[t.wrapT] || $e.RepeatWrapping),
                      e
                    );
                  })
              );
            }),
            (D.prototype.assignTexture = function (e, t, n) {
              return this.getDependency('texture', n).then(function (n) {
                e[t] = n;
              });
            }),
            (D.prototype.loadMaterial = function (e) {
              this.json;
              var t,
                i = this.extensions,
                r = this.json.materials[e],
                o = {},
                a = r.extensions || {},
                s = [];
              if (a[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {
                var u = i[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];
                (t = u.getMaterialType(r)), s.push(u.extendParams(o, r, this));
              } else if (a[n.KHR_MATERIALS_UNLIT]) {
                var l = i[n.KHR_MATERIALS_UNLIT];
                (t = l.getMaterialType(r)), s.push(l.extendParams(o, r, this));
              } else {
                t = $e.MeshStandardMaterial;
                var c = r.pbrMetallicRoughness || {};
                if (
                  ((o.color = new $e.Color(1, 1, 1)),
                  (o.opacity = 1),
                  Array.isArray(c.baseColorFactor))
                ) {
                  var p = c.baseColorFactor;
                  o.color.fromArray(p), (o.opacity = p[3]);
                }
                if (
                  (void 0 !== c.baseColorTexture &&
                    s.push(
                      this.assignTexture(o, 'map', c.baseColorTexture.index),
                    ),
                  (o.metalness =
                    void 0 !== c.metallicFactor ? c.metallicFactor : 1),
                  (o.roughness =
                    void 0 !== c.roughnessFactor ? c.roughnessFactor : 1),
                  void 0 !== c.metallicRoughnessTexture)
                ) {
                  var h = c.metallicRoughnessTexture.index;
                  s.push(this.assignTexture(o, 'metalnessMap', h)),
                    s.push(this.assignTexture(o, 'roughnessMap', h));
                }
              }
              !0 === r.doubleSided && (o.side = $e.DoubleSide);
              var f = r.alphaMode || M;
              return (
                f === F
                  ? (o.transparent = !0)
                  : ((o.transparent = !1),
                    f === j &&
                      (o.alphaTest =
                        void 0 !== r.alphaCutoff ? r.alphaCutoff : 0.5)),
                void 0 !== r.normalTexture &&
                  t !== $e.MeshBasicMaterial &&
                  (s.push(
                    this.assignTexture(o, 'normalMap', r.normalTexture.index),
                  ),
                  (o.normalScale = new $e.Vector2(1, 1)),
                  void 0 !== r.normalTexture.scale &&
                    o.normalScale.set(
                      r.normalTexture.scale,
                      r.normalTexture.scale,
                    )),
                void 0 !== r.occlusionTexture &&
                  t !== $e.MeshBasicMaterial &&
                  (s.push(
                    this.assignTexture(o, 'aoMap', r.occlusionTexture.index),
                  ),
                  void 0 !== r.occlusionTexture.strength &&
                    (o.aoMapIntensity = r.occlusionTexture.strength)),
                void 0 !== r.emissiveFactor &&
                  t !== $e.MeshBasicMaterial &&
                  (o.emissive = new $e.Color().fromArray(r.emissiveFactor)),
                void 0 !== r.emissiveTexture &&
                  t !== $e.MeshBasicMaterial &&
                  s.push(
                    this.assignTexture(o, 'emissiveMap', r.emissiveTexture.index),
                  ),
                Promise.all(s).then(function () {
                  var e;
                  return (
                    (e =
                      t === $e.ShaderMaterial
                        ? i[
                            n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS
                          ].createMaterial(o)
                        : new t(o)),
                    void 0 !== r.name && (e.name = r.name),
                    e.normalScale && (e.normalScale.y = -e.normalScale.y),
                    e.map && (e.map.encoding = $e.sRGBEncoding),
                    e.emissiveMap && (e.emissiveMap.encoding = $e.sRGBEncoding),
                    r.extras && (e.userData = r.extras),
                    e
                  );
                })
              );
            }),
            (D.prototype.loadGeometries = function (e) {
              var t = this,
                i = this.extensions,
                r = this.primitiveCache;
              return this.getDependencies('accessor').then(function (o) {
                for (var a = [], s = 0, u = e.length; s < u; s++) {
                  var l = e[s],
                    c = L(r, l);
                  if (c) a.push(c);
                  else if (
                    l.extensions &&
                    l.extensions[n.KHR_DRACO_MESH_COMPRESSION]
                  ) {
                    var p = i[n.KHR_DRACO_MESH_COMPRESSION]
                      .decodePrimitive(l, t)
                      .then(function (e) {
                        return U(e, l, o), e;
                      });
                    r.push({ primitive: l, promise: p }), a.push(p);
                  } else {
                    var h = new $e.BufferGeometry();
                    U(h, l, o);
                    p = Promise.resolve(h);
                    r.push({ primitive: l, promise: p }), a.push(p);
                  }
                }
                return Promise.all(a);
              });
            }),
            (D.prototype.loadMesh = function (e) {
              var t = this,
                i = (this.json, this.extensions),
                r = this.json.meshes[e];
              return this.getMultiDependencies(['accessor', 'material']).then(
                function (o) {
                  var a = new $e.Group(),
                    s = r.primitives;
                  return t.loadGeometries(s).then(function (u) {
                    for (var l = 0, c = s.length; l < c; l++) {
                      var p = s[l],
                        h = u[l],
                        w =
                          void 0 === p.material
                            ? new $e.MeshStandardMaterial({
                                color: 16777215,
                                emissive: 0,
                                metalness: 1,
                                roughness: 1,
                                transparent: !1,
                                depthTest: !0,
                                side: $e.FrontSide,
                              })
                            : o.materials[p.material];
                      w.aoMap &&
                        void 0 === h.attributes.uv2 &&
                        void 0 !== h.attributes.uv &&
                        (console.log(
                          'THREE.GLTFLoader: Duplicating UVs to support aoMap.',
                        ),
                        h.addAttribute(
                          'uv2',
                          new $e.BufferAttribute(h.attributes.uv.array, 2),
                        ));
                      var x,
                        P = void 0 !== h.attributes.color,
                        _ = void 0 === h.attributes.normal,
                        k = !0 === r.isSkinnedMesh,
                        O = void 0 !== p.targets;
                      if (P || _ || k || O)
                        if (w.isGLTFSpecularGlossinessMaterial)
                          w = i[
                            n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS
                          ].cloneMaterial(w);
                        else w = w.clone();
                      if (
                        (P &&
                          ((w.vertexColors = $e.VertexColors),
                          (w.needsUpdate = !0)),
                        _ && (w.flatShading = !0),
                        p.mode === g ||
                          p.mode === b ||
                          p.mode === y ||
                          void 0 === p.mode)
                      )
                        k
                          ? ((x = new $e.SkinnedMesh(h, w)), (w.skinning = !0))
                          : (x = new $e.Mesh(h, w)),
                          p.mode === b
                            ? (x.drawMode = $e.TriangleStripDrawMode)
                            : p.mode === y &&
                              (x.drawMode = $e.TriangleFanDrawMode);
                      else if (p.mode === d || p.mode === m || p.mode === v) {
                        var S = 'LineBasicMaterial:' + w.uuid,
                          T = t.cache.get(S);
                        T ||
                          ((T = new $e.LineBasicMaterial()),
                          $e.Material.prototype.copy.call(T, w),
                          T.color.copy(w.color),
                          (T.lights = !1),
                          t.cache.add(S, T)),
                          (w = T),
                          (x =
                            p.mode === d
                              ? new $e.LineSegments(h, w)
                              : p.mode === m
                              ? new $e.Line(h, w)
                              : new $e.LineLoop(h, w));
                      } else {
                        if (p.mode !== f)
                          throw new Error(
                            'THREE.GLTFLoader: Primitive mode unsupported: ' +
                              p.mode,
                          );
                        S = 'PointsMaterial:' + w.uuid;
                        var A = t.cache.get(S);
                        A ||
                          ((A = new $e.PointsMaterial()),
                          $e.Material.prototype.copy.call(A, w),
                          A.color.copy(w.color),
                          (A.map = w.map),
                          (A.lights = !1),
                          t.cache.add(S, A)),
                          (w = A),
                          (x = new $e.Points(h, w));
                      }
                      if (
                        ((x.name = r.name || 'mesh_' + e),
                        O &&
                          (C(x, r, p, o.accessors),
                          (w.morphTargets = !0),
                          void 0 !== x.geometry.morphAttributes.normal &&
                            (w.morphNormals = !0)),
                        void 0 !== r.extras && (x.userData = r.extras),
                        void 0 !== p.extras && (x.geometry.userData = p.extras),
                        !0 === w.isGLTFSpecularGlossinessMaterial &&
                          (x.onBeforeRender =
                            i[
                              n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS
                            ].refreshUniforms),
                        !(s.length > 1))
                      )
                        return x;
                      (x.name += '_' + l), a.add(x);
                    }
                    return a;
                  });
                },
              );
            }),
            (D.prototype.loadCamera = function (e) {
              var t,
                n = this.json.cameras[e],
                i = n[n.type];
              if (i)
                return (
                  'perspective' === n.type
                    ? (t = new $e.PerspectiveCamera(
                        $e.Math.radToDeg(i.yfov),
                        i.aspectRatio || 1,
                        i.znear || 1,
                        i.zfar || 2e6,
                      ))
                    : 'orthographic' === n.type &&
                      (t = new $e.OrthographicCamera(
                        i.xmag / -2,
                        i.xmag / 2,
                        i.ymag / 2,
                        i.ymag / -2,
                        i.znear,
                        i.zfar,
                      )),
                  void 0 !== n.name && (t.name = n.name),
                  n.extras && (t.userData = n.extras),
                  Promise.resolve(t)
                );
              console.warn('THREE.GLTFLoader: Missing camera parameters.');
            }),
            (D.prototype.loadSkin = function (e) {
              var t = this.json.skins[e],
                n = { joints: t.joints };
              return void 0 === t.inverseBindMatrices
                ? Promise.resolve(n)
                : this.getDependency('accessor', t.inverseBindMatrices).then(
                    function (e) {
                      return (n.inverseBindMatrices = e), n;
                    },
                  );
            }),
            (D.prototype.loadAnimation = function (e) {
              this.json;
              var t = this.json.animations[e];
              return this.getMultiDependencies(['accessor', 'node']).then(
                function (n) {
                  for (var i = [], r = 0, o = t.channels.length; r < o; r++) {
                    var a = t.channels[r],
                      s = t.samplers[a.sampler];
                    if (s) {
                      var u = a.target,
                        l = void 0 !== u.node ? u.node : u.id,
                        c =
                          void 0 !== t.parameters
                            ? t.parameters[s.input]
                            : s.input,
                        p =
                          void 0 !== t.parameters
                            ? t.parameters[s.output]
                            : s.output,
                        f = n.accessors[c],
                        d = n.accessors[p],
                        v = n.nodes[l];
                      if (v) {
                        var m;
                        switch (
                          (v.updateMatrix(), (v.matrixAutoUpdate = !0), T[u.path])
                        ) {
                          case T.weights:
                            m = $e.NumberKeyframeTrack;
                            break;
                          case T.rotation:
                            m = $e.QuaternionKeyframeTrack;
                            break;
                          case T.position:
                          case T.scale:
                          default:
                            m = $e.VectorKeyframeTrack;
                        }
                        var g = v.name ? v.name : v.uuid,
                          b =
                            void 0 !== s.interpolation
                              ? A[s.interpolation]
                              : $e.InterpolateLinear,
                          y = [];
                        T[u.path] === T.weights
                          ? v.traverse(function (e) {
                              !0 === e.isMesh &&
                                !0 === e.material.morphTargets &&
                                y.push(e.name ? e.name : e.uuid);
                            })
                          : y.push(g);
                        for (var w = 0, x = y.length; w < x; w++) {
                          var P = new m(
                            y[w] + '.' + T[u.path],
                            $e.AnimationUtils.arraySlice(f.array, 0),
                            $e.AnimationUtils.arraySlice(d.array, 0),
                            b,
                          );
                          'CUBICSPLINE' === s.interpolation &&
                            ((P.createInterpolant = function (e) {
                              return new h(
                                this.times,
                                this.values,
                                this.getValueSize() / 3,
                                e,
                              );
                            }),
                            (P.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = !0)),
                            i.push(P);
                        }
                      }
                    }
                  }
                  l = void 0 !== t.name ? t.name : 'animation_' + e;
                  return new $e.AnimationClip(l, void 0, i);
                },
              );
            }),
            (D.prototype.loadNode = function (e) {
              this.json;
              var t = this.extensions,
                i = this.json.meshReferences,
                r = this.json.meshUses,
                o = this.json.nodes[e];
              return this.getMultiDependencies([
                'mesh',
                'skin',
                'camera',
                'light',
              ]).then(function (e) {
                var a;
                if (!0 === o.isBone) a = new $e.Bone();
                else if (void 0 !== o.mesh) {
                  var s = e.meshes[o.mesh];
                  if (((a = s.clone()), !0 === s.isGroup))
                    for (var u = 0, l = s.children.length; u < l; u++) {
                      var c = s.children[u];
                      c.material &&
                        !0 === c.material.isGLTFSpecularGlossinessMaterial &&
                        (a.children[u].onBeforeRender = c.onBeforeRender);
                    }
                  else
                    s.material &&
                      !0 === s.material.isGLTFSpecularGlossinessMaterial &&
                      (a.onBeforeRender = s.onBeforeRender);
                  i[o.mesh] > 1 && (a.name += '_instance_' + r[o.mesh]++);
                } else if (void 0 !== o.camera) a = e.cameras[o.camera];
                else if (
                  o.extensions &&
                  o.extensions[n.KHR_LIGHTS] &&
                  void 0 !== o.extensions[n.KHR_LIGHTS].light
                ) {
                  a = t[n.KHR_LIGHTS].lights[o.extensions[n.KHR_LIGHTS].light];
                } else a = new $e.Object3D();
                if (
                  (void 0 !== o.name &&
                    (a.name = $e.PropertyBinding.sanitizeNodeName(o.name)),
                  o.extras && (a.userData = o.extras),
                  void 0 !== o.matrix)
                ) {
                  var p = new $e.Matrix4();
                  p.fromArray(o.matrix), a.applyMatrix(p);
                } else void 0 !== o.translation && a.position.fromArray(o.translation), void 0 !== o.rotation && a.quaternion.fromArray(o.rotation), void 0 !== o.scale && a.scale.fromArray(o.scale);
                return a;
              });
            }),
            (D.prototype.loadScene = (function () {
              function e(t, n, i, r, o) {
                var a = r[t],
                  s = i.nodes[t];
                if (void 0 !== s.skin)
                  for (
                    var u = !0 === a.isGroup ? a.children : [a],
                      l = 0,
                      c = u.length;
                    l < c;
                    l++
                  ) {
                    for (
                      var p = u[l],
                        h = o[s.skin],
                        f = [],
                        d = [],
                        v = 0,
                        m = h.joints.length;
                      v < m;
                      v++
                    ) {
                      var g = h.joints[v],
                        b = r[g];
                      if (b) {
                        f.push(b);
                        var y = new $e.Matrix4();
                        void 0 !== h.inverseBindMatrices &&
                          y.fromArray(h.inverseBindMatrices.array, 16 * v),
                          d.push(y);
                      } else
                        console.warn(
                          'THREE.GLTFLoader: Joint "%s" could not be found.',
                          g,
                        );
                    }
                    p.bind(new $e.Skeleton(f, d), p.matrixWorld);
                  }
                if ((n.add(a), s.children)) {
                  var w = s.children;
                  for (l = 0, c = w.length; l < c; l++) {
                    e(w[l], a, i, r, o);
                  }
                }
              }
              return function (t) {
                var i = this.json,
                  r = this.extensions,
                  o = this.json.scenes[t];
                return this.getMultiDependencies(['node', 'skin']).then(function (
                  t,
                ) {
                  var a = new $e.Scene();
                  void 0 !== o.name && (a.name = o.name),
                    o.extras && (a.userData = o.extras);
                  for (var s = o.nodes || [], u = 0, l = s.length; u < l; u++)
                    e(s[u], a, i, t.nodes, t.skins);
                  if (
                    o.extensions &&
                    o.extensions[n.KHR_LIGHTS] &&
                    void 0 !== o.extensions[n.KHR_LIGHTS].light
                  ) {
                    var c = r[n.KHR_LIGHTS].lights;
                    a.add(c[o.extensions[n.KHR_LIGHTS].light]);
                  }
                  return a;
                });
              };
            })()),
            e
          );
        })();
        var Do;
        $e.GLTFLoader;
        function Uo(e) {
          return e * (180 / Math.PI);
        }
        function zo() {
          var e = Bo([
            '\n    uniform vec3 baseColor;\n    uniform vec3 accentColor1;\n    uniform vec3 accentColor2;\n    uniform vec2 accent1Position;\n    uniform vec2 accent2Position;\n    uniform float opacity;\n    varying vec2 vUv;\n\n    float random (vec2 st) {\n        return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n    }\n\n    void main() {\n        vec3 color = baseColor;\n        color += 0.4 * accentColor1 * (1.0 - smoothstep(0.0, 0.6, distance(vUv + random(vUv) * 0.05, accent1Position)));\n        color += 0.4 * accentColor2 * (1.0 - smoothstep(0.0, 0.6, distance(vUv + random(vUv) * 0.05, accent2Position)));\n        gl_FragColor = vec4(color, opacity);\n    }\n',
          ]);
          return (
            (zo = function () {
              return e;
            }),
            e
          );
        }
        function No() {
          var e = Bo([
            '\n    varying vec2 vUv;\n    void main() {\n        vUv = uv;\n        vec4 transformed = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        gl_Position = transformed;\n    }\n',
          ]);
          return (
            (No = function () {
              return e;
            }),
            e
          );
        }
        function Bo(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        function Vo(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Yo(e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        }
        function Ho(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Xo(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? Go(e)
            : t;
        }
        function Go(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function Wo(e) {
          return (Wo = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Qo(e, t) {
          if ('function' != typeof t && null !== t)
            throw new TypeError(
              'Super expression must either be null or a function',
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t && qo(e, t);
        }
        function qo(e, t) {
          return (qo =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Zo,
          Ko = Object(u.a)(),
          $o =
            Object(it.a)(rt)(
              (Do = (function (e) {
                function t() {
                  var e, n;
                  Yo(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Xo(
                      this,
                      (e = Wo(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      layer: 0,
                      height: 1,
                      renderOrder: 0,
                      accent1Position: new $e.Vector2(0.2, 0.2),
                      accent2Position: new $e.Vector2(0.8, 0.8),
                    }),
                    (n.props = {
                      size: [
                        Ko,
                        function (e) {
                          var t = e.viewport;
                          return {
                            width: t.width,
                            height: t.height,
                            pixelRatio: t.pixelRatio,
                          };
                        },
                      ],
                      baseColor: '#17120f',
                      accentColor1: '#4e2e10',
                      accentColor2: '#224528',
                      opacity: 1,
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  Qo(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              var t, n, i;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (t = this.options),
                                          (n = t.accent1Position),
                                          (i = t.accent2Position),
                                          (this.mesh = new $e.Mesh(
                                            new $e.PlaneBufferGeometry(1, 1, 1),
                                            new Zo({
                                              accent1Position: n,
                                              accent2Position: i,
                                            }),
                                          )),
                                          this.mesh.layers.set(
                                            this.options.layer,
                                          ),
                                          (this.mesh.renderOrder = this.options.renderOrder),
                                          this.object.add(this.mesh);
                                      case 5:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  Vo(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  Vo(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setSize',
                      value: function (e) {
                        var t = e.width,
                          n = e.height;
                        this.mesh.scale.set(t, n * this.options.height, 1);
                      },
                    },
                    {
                      key: 'setBaseColor',
                      value: function (e) {
                        this.mesh.material.baseColor.setStyle(e);
                      },
                    },
                    {
                      key: 'setAccentColor1',
                      value: function (e) {
                        this.mesh.material.accentColor1.setStyle(e);
                      },
                    },
                    {
                      key: 'setAccentColor2',
                      value: function (e) {
                        this.mesh.material.accentColor2.setStyle(e);
                      },
                    },
                    {
                      key: 'setOpacity',
                      value: function (e) {
                        (this.mesh.material.opacity = e),
                          (this.mesh.visible = 0 !== e);
                      },
                    },
                  ]) && Ho(n.prototype, i),
                  r && Ho(n, r),
                  t
                );
              })()),
            ) || Do,
          Jo = Mt(No()),
          ea = Mt(zo());
        Zo = (function (e) {
          function t(e) {
            var n,
              i = e.accent1Position,
              r = e.accent2Position;
            return (
              Yo(this, t),
              ((n = Xo(
                this,
                Wo(t).call(this, {
                  uniforms: {
                    baseColor: { value: new $e.Color('#17120f') },
                    accentColor1: { value: new $e.Color('#4e2e10') },
                    accentColor2: { value: new $e.Color('#224528') },
                    accent1Position: { value: i },
                    accent2Position: { value: r },
                    opacity: { value: 1 },
                  },
                  transparent: !0,
                  depthWrite: !1,
                  vertexShader: Jo,
                  fragmentShader: ea,
                }),
              )).type = 'BackgroundMaterial'),
              s.a.each(n.uniforms, function (e, t) {
                Object.defineProperty(Go(n), t, {
                  get: function () {
                    return n.uniforms[t].value;
                  },
                  set: function (e) {
                    n.uniforms[t].value = e;
                  },
                });
              }),
              n
            );
          }
          return Qo(t, $e['ShaderMaterial']), t;
        })();
        var ta,
          na = $o;
        function ia(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function ra(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                ia(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                ia(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function oa(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function aa(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function sa(e) {
          return (sa = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function ua(e, t) {
          return (ua =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        for (var la = Object(u.a)(), ca = [], pa = 0; pa < 20; pa += 1)
          ca.push(to(-3, -6));
        var ha =
          Object(it.a)(rt)(
            (ta = (function (e) {
              function t() {
                var e, n;
                !(function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t);
                for (
                  var i = arguments.length, r = new Array(i), o = 0;
                  o < i;
                  o++
                )
                  r[o] = arguments[o];
                return (
                  ((n = aa(
                    this,
                    (e = sa(t)).call.apply(e, [this].concat(r)),
                  )).options = { layer: 1 }),
                  (n.props = {
                    active: !1,
                    progress: 0,
                    sceneRotation: [0, 0],
                    pointerEased: [0, 0],
                  }),
                  n
                );
              }
              var n, i, r;
              return (
                (function (e, t) {
                  if ('function' != typeof t && null !== t)
                    throw new TypeError(
                      'Super expression must either be null or a function',
                    );
                  (e.prototype = Object.create(t && t.prototype, {
                    constructor: { value: e, writable: !0, configurable: !0 },
                  })),
                    t && ua(e, t);
                })(t, le['a']),
                (n = t),
                (i = [
                  {
                    key: 'onSetup',
                    value: (function () {
                      var e = ra(
                        regeneratorRuntime.mark(function e() {
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    return (
                                      (this.tweens = {
                                        inProgress: 0,
                                        ambient: 0,
                                      }),
                                      (this.rotation = [0, 0, 0]),
                                      (e.next = 4),
                                      this.setupMesh()
                                    );
                                  case 4:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        }),
                      );
                      return function () {
                        return e.apply(this, arguments);
                      };
                    })(),
                  },
                  {
                    key: 'setupMesh',
                    value: (function () {
                      var e = ra(
                        regeneratorRuntime.mark(function e() {
                          var t,
                            n,
                            i,
                            r,
                            o,
                            a,
                            s,
                            u,
                            l,
                            p,
                            h,
                            f,
                            d,
                            v,
                            m,
                            g,
                            b,
                            y = this;
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    return (
                                      (t = new $e.GLTFLoader()),
                                      (n = (function () {
                                        var e = ra(
                                          regeneratorRuntime.mark(function e(n) {
                                            return regeneratorRuntime.wrap(
                                              function (e) {
                                                for (;;)
                                                  switch ((e.prev = e.next)) {
                                                    case 0:
                                                      return e.abrupt(
                                                        'return',
                                                        new Promise(function (e) {
                                                          t.load(
                                                            c.a.CDN + n,
                                                            function (t) {
                                                              e(t.scene);
                                                            },
                                                          );
                                                        }),
                                                      );
                                                    case 1:
                                                    case 'end':
                                                      return e.stop();
                                                  }
                                              },
                                              e,
                                            );
                                          }),
                                        );
                                        return function (t) {
                                          return e.apply(this, arguments);
                                        };
                                      })()),
                                      (e.next = 4),
                                      n('models/landing/cobb_test.gltf')
                                    );
                                  case 4:
                                    return (
                                      (this.cornScene = e.sent),
                                      (e.next = 7),
                                      n('models/landing/hair.gltf')
                                    );
                                  case 7:
                                    return (
                                      (this.cornHairScene = e.sent),
                                      (this.cornArmature = this.cornScene.children[0]),
                                      (this.cornBones = this.cornArmature.getObjectByName(
                                        'Armature_Bone',
                                      )),
                                      (this.hairObject = new $e.Object3D()),
                                      (this.cornObject = this.cornScene.children[0]),
                                      (this.cornMaterials = []),
                                      (e.next = 15),
                                      Gn('landing-alpha')
                                    );
                                  case 15:
                                    return (
                                      (i = e.sent),
                                      (e.next = 18),
                                      Gn('landing-hair-alpha')
                                    );
                                  case 18:
                                    return (
                                      (r = e.sent),
                                      (e.next = 21),
                                      Gn('landing-top-left')
                                    );
                                  case 21:
                                    return (
                                      (o = e.sent),
                                      (e.next = 24),
                                      Gn('landing-top-right')
                                    );
                                  case 24:
                                    return (
                                      (a = e.sent),
                                      (e.next = 27),
                                      Gn('landing-bottom-left')
                                    );
                                  case 27:
                                    return (
                                      (s = e.sent),
                                      (e.next = 30),
                                      Gn('landing-bottom-right')
                                    );
                                  case 30:
                                    return (
                                      (u = e.sent),
                                      (e.next = 33),
                                      Gn('landing-hair-top-l')
                                    );
                                  case 33:
                                    return (
                                      (l = e.sent),
                                      (e.next = 36),
                                      Gn('landing-hair-top-r')
                                    );
                                  case 36:
                                    return (
                                      (p = e.sent),
                                      (e.next = 39),
                                      Gn('landing-hair-bottom-l')
                                    );
                                  case 39:
                                    return (
                                      (h = e.sent),
                                      (e.next = 42),
                                      Gn('landing-hair-bottom-r')
                                    );
                                  case 42:
                                    for (
                                      f = e.sent,
                                        d = [o, a, s, u, i],
                                        v = [l, p, h, f, r],
                                        this.cornScene.traverse(function (e) {
                                          y.createMaterial(e, d);
                                        }),
                                        this.object.add(this.cornObject),
                                        m = 0;
                                      m < this.cornObject.children.length;
                                      m += 1
                                    )
                                      this.cornObject.children[
                                        m
                                      ].rVal = Math.random();
                                    for (
                                      this.cornHairScene.traverse(function (e) {
                                        y.createMaterial(e, v, 9);
                                      }),
                                        this.object.add(this.hairObject),
                                        g = 0;
                                      g < this.cornHairScene.children.length;
                                      g += 1
                                    )
                                      (b = this.cornHairScene.children[g]),
                                        this.hairObject.add(b),
                                        (g -= 1);
                                    this.cornObject.children[3].children[0].position.x = -0.52;
                                  case 52:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        }),
                      );
                      return function () {
                        return e.apply(this, arguments);
                      };
                    })(),
                  },
                  {
                    key: 'createMaterial',
                    value: function (e, t, n) {
                      var i = 'SkinnedMesh' === e.type;
                      if ('Mesh' === e.type || i) {
                        (e.material = new $e.ShaderMaterial({
                          defines: { MAIN_CORN: !0 },
                          uniforms: {
                            uTextures: { value: t },
                            uTextureBlend: { value: new $e.Vector2() },
                            uDepthPoint: { value: new $e.Vector2() },
                            uDisplaceAmount: {
                              value: new $e.Vector2(0.01, 0.01),
                            },
                          },
                          depthWrite: !1,
                          depthTest: !1,
                          transparent: !0,
                          side: $e.DoubleSide,
                          skinning: i,
                          vertexShader:
                            '#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n}',
                          fragmentShader:
                            '#define GLSLIFY 1\nuniform sampler2D uTextures[5];\n\n// uniform sampler2D uDepthMap;\nuniform vec2 uDepthPoint;\nuniform vec2 uTextureBlend;\nuniform vec2 uDisplaceAmount;\n\nvarying vec2 vUv;\n\nfloat lerp(float min, float max, float value) {\n    return min + value * (max - min);\n}\n\nfloat map(float value, float minA, float maxA, float minB, float maxB) {\n    return (value - minA) / (maxA - minA) * (maxB - minB) + minB;\n}\n\nvoid main() {\n\tvec2 uv = vUv;\n    // uv.y *= -1.0;\n\t\n    float alpha = texture2D(uTextures[4], vUv).r;\n    // vec2 displace = uDisplaceAmount * uDepthPoint * vec2((tDepthMap.r * 2.0 - 1.0));\n\n    vec4 finalOutput = vec4(0.0,1.0,0.0,1.0);\n\n    vec4 textureTopLeft = texture2D(uTextures[0], uv);\n    vec4 textureTopRight = texture2D(uTextures[1], uv);\n    vec4 textureBottomLeft = texture2D(uTextures[2], uv);\n    vec4 textureBottomRight = texture2D(uTextures[3], uv);\n\n    vec4 outputTop = mix(textureTopLeft, textureTopRight, uTextureBlend.x);\n    vec4 outputBottom = mix(textureBottomLeft, textureBottomRight, uTextureBlend.x);\n    finalOutput = mix(outputTop, outputBottom, uTextureBlend.y);\n\n    gl_FragColor = vec4(finalOutput.rgb / alpha, alpha);\n    // gl_FragColor.rgb += (1.0 - alpha);\n    // gl_FragColor = vec4(1.0,0.0,0.0,1.0);\n}',
                        })),
                          this.cornMaterials.push(e.material),
                          (e.renderOrder = n || e.userData['RENDER ORDER']),
                          e.layers.set(this.options.layer);
                      }
                    },
                  },
                  {
                    key: 'onActive',
                    value: function () {
                      (this.props.v = !0), this.startAmbientMotion();
                    },
                  },
                  {
                    key: 'offActive',
                    value: function () {
                      (this.props.v = !1), this.stopAmbientMotion();
                    },
                  },
                  {
                    key: 'setProgress',
                    value: function (e) {
                      this.props.active &&
                        (this.stopAmbientMotion(), this.startAmbientMotion());
                    },
                  },
                  {
                    key: 'startAmbientMotion',
                    value: function () {
                      L.b.killTweensOf(this.tweens, { ambient: !0 }),
                        L.b.to(this.tweens, 5, { ambient: 1, delay: 0.5 });
                    },
                  },
                  {
                    key: 'stopAmbientMotion',
                    value: function () {
                      L.b.killTweensOf(this.tweens, { ambient: !0 }),
                        L.b.to(this.tweens, 1, { ambient: 0 });
                    },
                  },
                  {
                    key: 'whileActive',
                    value: function () {
                      var e = this.props.progress,
                        t = Object(Jr.a)(e, -20, 20),
                        n = Object(Jr.a)(e, -10, -20),
                        i = -2 + 0.15 * Math.cos(0.2 * la.state.time),
                        r = t + 5 * Math.sin(0.2 * la.state.time),
                        a = n + 3 * Math.cos(0.2 * la.state.time);
                      (this.props.pX = 0),
                        (this.props.pY = i),
                        (this.props.pZ = 0),
                        (this.props.rX = Zn(0)),
                        (this.props.rY = Zn(r)),
                        (this.props.rZ = Zn(a));
                      var s = Object(o.a)(
                          r + this.props.sceneRotation[1],
                          -15,
                          15,
                          0,
                          1,
                          !0,
                        ),
                        u = Object(o.a)(
                          0 + this.props.sceneRotation[0],
                          -20,
                          0,
                          0,
                          1,
                          !0,
                        );
                      this.cornMaterials.forEach(function (e) {
                        (e.uniforms.uTextureBlend.value.x = s),
                          (e.uniforms.uTextureBlend.value.y = u);
                      }),
                        this.cornObject.children.forEach(function (t, n) {
                          if ('07004' !== t.name) {
                            var i = Object(o.a)(e, 0, 0.5, 2, 0, !0),
                              r = Object(o.a)(e, 0.5, 1, 0, ca[n], !0),
                              a = t.rVal * Math.PI * 2,
                              s = la.state.time * Object(Jr.a)(t.rVal, 0.5, 1),
                              u = Object(Jr.a)(t.rVal, 0.004, 0.006),
                              l = Math.sin(s + a) * u;
                            (t.children[0].rotation.x = Zn(i + r)),
                              (t.children[0].rotation.y = l);
                          }
                        });
                    },
                  },
                ]) && oa(n.prototype, i),
                r && oa(n, r),
                t
              );
            })()),
          ) || ta;
        function fa() {
          var e = (function (e, t) {
            t || (t = e.slice(0));
            return Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            );
          })([
            '\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n  ',
          ]);
          return (
            (fa = function () {
              return e;
            }),
            e
          );
        }
        var da = Mt(fa());
        function va() {
          var e = ga([
            '\n    vSize = smoothstep(dofAmount[0], dofAmount[1], distance(transformed.xyz, dofFocus));\n',
          ]);
          return (
            (va = function () {
              return e;
            }),
            e
          );
        }
        function ma() {
          var e = ga([
            '\n    // transformed += (snoise((transformed.xyz + time / 40.0) / 15.0) - 0.5) * 1.5;\n    transformed += (snoise((transformed.xyz + time / 40.0) / 15.0) - 0.5) * 1.0;\n',
          ]);
          return (
            (ma = function () {
              return e;
            }),
            e
          );
        }
        function ga(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var ba = Mt(ma()),
          ya = Mt(va());
        function wa(e) {
          return (wa = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function xa(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function Pa(e, t) {
          return (Pa =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function _a() {
          var e = Oa([
            '\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n\n    uniform vec2 progress;\n    uniform float shapeSides;\n    uniform vec3 color;\n    uniform float opacity;\n    uniform float time;\n    varying float vId;\n    varying float vSize;\n    ',
            '\n\n    // src: https://thebookofshaders.com/07/\n    float polygonDf(vec2 st, float N) {\n        if (N == 0.0) {\n            return distance(st, vec2(0.5));\n        } else {\n            st = st * 2.0 - 1.0;\n            float a = atan(st.x,st.y)+PI * 0.5;\n            float r = TWO_PI/N;\n            return cos(floor(.5+a/r)*r-a)*length(st);\n        }\n    }\n\n    void main() {\n        float random = vId * 5.193628 + vId;\n        vec2 uv = gl_PointCoord;\n        float shapeAlpha = smoothstep(0.5, 0.5 - mix(0.05, 0.3, vSize), polygonDf(uv, shapeSides));\n        float distanceAlpha = mix(1.0, 0.4, smoothstep(0.0, 0.2, vSize));\n        float timeOpacity = mix(0.1, 1.0, sin((time * clamp(random, 1.0, 5.0) + random * TWO_PI) / 200.0) * 0.5 + 0.5);\n        ',
            '\n        ',
            '\n        ',
            '\n\n        gl_FragColor = vec4(\n            color * distanceAlpha + progressColor,\n            shapeAlpha * distanceAlpha * opacity * timeOpacity * progressAlpha * endFade\n        );\n    }\n',
          ]);
          return (
            (_a = function () {
              return e;
            }),
            e
          );
        }
        function ka() {
          var e = Oa([
            '\n    ',
            '\n    attribute float id;\n    attribute float t;\n    uniform float time;\n    uniform vec2 size;\n    uniform vec2 dofAmount;\n    uniform vec3 dofFocus;\n    uniform vec2 resolution;\n    varying float vId;\n    varying float vSize;\n    ',
            '\n\n    void main() {\n        float random = vId * 5.193628;\n        vId = id;\n        vec4 transformed = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        ',
            '\n        ',
            '\n        gl_Position = transformed;\n        float scale = resolution.y / 800.0 + (sin(id*17.726283)+sin(id*7153.13)) * 0.05;\n        gl_PointSize = mix(size.x * scale, size.y * scale, vSize);\n        ',
            '\n    }\n',
          ]);
          return (
            (ka = function () {
              return e;
            }),
            e
          );
        }
        function Oa(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var Sa,
          Ta = function (e) {
            return Mt(
              ka(),
              e.noise ? da : '',
              e.progress ? 'varying float vT;' : '',
              e.noise ? ba : '',
              ya,
              e.progress ? 'vT = t;' : '',
            );
          },
          Aa = function (e) {
            return Mt(
              _a(),
              e.progress ? 'varying float vT;' : '',
              e.progress
                ? 'float progressAlpha = step(progress.x, vT) * step(vT, progress.y);'
                : 'float progressAlpha = 1.0;',
              e.progress
                ? 'vec3 progressColor = vec3(0.2) * smoothstep(progress.x + 0.3, progress.x, vT);'
                : 'vec3 progressColor = vec3(0.0);',
              e.progress
                ? 'float endFade = smoothstep(0.05, 0.15, vT);'
                : 'float endFade = 1.0;',
            );
          },
          Ma = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.progress,
                a = void 0 !== o && o,
                u = r.shapeSides,
                l = void 0 === u ? 5 : u,
                c = r.size,
                p = void 0 === c ? new $e.Vector2(10, 35) : c,
                h = r.color,
                f = void 0 === h ? new $e.Color('#333333') : h,
                d = r.opacity,
                v = void 0 === d ? 1 : d,
                m = r.dofAmount,
                g = void 0 === m ? new $e.Vector2(7, 15) : m,
                b = r.dofFocus,
                y = void 0 === b ? new $e.Vector3() : b,
                w = r.noise,
                x = void 0 !== w && w,
                P = r.resolution,
                _ = void 0 === P ? new $e.Vector2() : P;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = wa(t).call(this, {
                  uniforms: {
                    progress: { value: a },
                    shapeSides: { value: l },
                    size: { value: p },
                    color: { value: f },
                    opacity: { value: v },
                    time: { value: 0 },
                    dofAmount: { value: g },
                    dofFocus: { value: y },
                    resolution: { value: _ },
                  },
                  vertexShader: Ta({ noise: x, progress: !!a }),
                  fragmentShader: Aa({ progress: !!a }),
                  blending: $e.AdditiveBlending,
                  transparent: !0,
                  depthTest: !1,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? xa(n)
                    : i).type = 'ParticlesParticlesMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(xa(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Pa(e, t);
              })(t, $e['ShaderMaterial']),
              t
            );
          })();
        function ja(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Fa(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ra(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Ca(e) {
          return (Ca = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ea(e, t) {
          return (Ea =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var La =
          Object(it.a)(rt)(
            (Sa = (function (e) {
              function t() {
                var e, n;
                !(function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t);
                for (
                  var i = arguments.length, r = new Array(i), o = 0;
                  o < i;
                  o++
                )
                  r[o] = arguments[o];
                return (
                  ((n = Ra(
                    this,
                    (e = Ca(t)).call.apply(e, [this].concat(r)),
                  )).options = {
                    name: 'ParticlesArea',
                    particlesAmount: 200,
                    radius: 3,
                    dofFocus: new $e.Vector3(),
                    dofAmount: new $e.Vector3(7, 15),
                    resolution: new $e.Vector2(),
                    noise: !0,
                    layer: 0,
                    renderOrder: 1,
                  }),
                  (n.props = {
                    color: '#5f661e',
                    o: 0.3,
                    particleSizeMin: 3,
                    particleSizeMax: 120,
                    radius: 3,
                  }),
                  n
                );
              }
              var n, i, r;
              return (
                (function (e, t) {
                  if ('function' != typeof t && null !== t)
                    throw new TypeError(
                      'Super expression must either be null or a function',
                    );
                  (e.prototype = Object.create(t && t.prototype, {
                    constructor: { value: e, writable: !0, configurable: !0 },
                  })),
                    t && Ea(e, t);
                })(t, le['a']),
                (n = t),
                (i = [
                  {
                    key: 'onSetup',
                    value: (function () {
                      var e,
                        t =
                          ((e = regeneratorRuntime.mark(function e() {
                            var t,
                              n,
                              i,
                              r = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      (this.object.name = this.options.name),
                                        (t = this.props.radius),
                                        (this.particlesGeometry = new $e.BufferGeometry()),
                                        (n = new Float32Array(
                                          s.a.range(this.options.particlesAmount),
                                        )),
                                        this.particlesGeometry.addAttribute(
                                          'id',
                                          new $e.BufferAttribute(n, 1),
                                        ),
                                        (i = new Float32Array(
                                          s.a.flatten(
                                            s.a
                                              .range(this.options.particlesAmount)
                                              .map(function (e) {
                                                var n =
                                                    1 / r.options.particlesAmount,
                                                  i =
                                                    e * n +
                                                    Object(o.a)(
                                                      Math.random(),
                                                      0,
                                                      1,
                                                      0.75 * -n,
                                                      0.75 * n,
                                                    ),
                                                  a = 100 * i;
                                                return [
                                                  t * i * Math.sin(a),
                                                  2 * t * i * Math.cos(a),
                                                  t * Math.sin(9873986723 * i),
                                                ];
                                              }),
                                          ),
                                        )),
                                        this.particlesGeometry.addAttribute(
                                          'position',
                                          new $e.BufferAttribute(i, 3),
                                        ),
                                        (this.particlesMaterial = new Ma({
                                          size: new $e.Vector2(
                                            this.props.particleSizeMin,
                                            this.props.particleSizeMax,
                                          ),
                                          color: new $e.Color(this.props.color),
                                          opacity: this.props.o,
                                          noise: !0,
                                          dofFocus: this.options.dofFocus,
                                          dofAmount: this.options.dofAmount,
                                          resolution: this.options.resolution,
                                        })),
                                        (this.particles = new $e.Points(
                                          this.particlesGeometry,
                                          this.particlesMaterial,
                                        )),
                                        (this.particles.renderOrder = this.options.renderOrder),
                                        this.particles.layers.set(
                                          this.options.layer,
                                        ),
                                        this.object.add(this.particles);
                                    case 12:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          })),
                          function () {
                            var t = this,
                              n = arguments;
                            return new Promise(function (i, r) {
                              var o = e.apply(t, n);
                              function a(e) {
                                ja(o, i, r, a, s, 'next', e);
                              }
                              function s(e) {
                                ja(o, i, r, a, s, 'throw', e);
                              }
                              a(void 0);
                            });
                          });
                      return function () {
                        return t.apply(this, arguments);
                      };
                    })(),
                  },
                  {
                    key: 'setRadiusx',
                    value: function () {
                      this.setRadius();
                    },
                  },
                  {
                    key: 'setRadiusy',
                    value: function () {
                      this.setRadius();
                    },
                  },
                  {
                    key: 'setRadiusz',
                    value: function () {
                      this.setRadius();
                    },
                  },
                  {
                    key: 'setRadius',
                    value: function (e) {
                      var t = this,
                        n = new Float32Array(
                          s.a.flatten(
                            s.a
                              .range(this.options.particlesAmount)
                              .map(function (n) {
                                var i = 1 / t.options.particlesAmount,
                                  r =
                                    n * i +
                                    Object(o.a)(
                                      Math.random(),
                                      0,
                                      1,
                                      0.75 * -i,
                                      0.75 * i,
                                    ),
                                  a = 100 * r;
                                return [
                                  e * r * Math.sin(a),
                                  2 * e * r * Math.cos(a),
                                  e * Math.sin(9873986723 * r),
                                ];
                              }),
                          ),
                        ),
                        i = this.particlesGeometry.getAttribute('position');
                      (i.array = n), (i.needsUpdate = !0);
                    },
                  },
                  {
                    key: 'setColor',
                    value: function (e) {
                      this.particlesMaterial.color.setStyle(e);
                    },
                  },
                  {
                    key: 'setO',
                    value: function (e) {
                      this.particlesMaterial.opacity = e;
                    },
                  },
                  {
                    key: 'setParticleSizeMin',
                    value: function (e) {
                      this.particlesMaterial.size.setX(e);
                    },
                  },
                  {
                    key: 'setParticleSizeMax',
                    value: function (e) {
                      this.particlesMaterial.size.setY(e);
                    },
                  },
                  {
                    key: 'whileV',
                    value: function () {
                      (this.props.rY -= 5e-4),
                        (this.particlesMaterial.time += 0.01),
                        (this.particlesMaterial.time =
                          this.particlesMaterial.time % 1e3);
                    },
                  },
                ]) && Fa(n.prototype, i),
                r && Fa(n, r),
                t
              );
            })()),
          ) || Sa;
        function Ia(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function Da(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Ua(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function za(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Na(e) {
          return (Na = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ba(e, t) {
          return (Ba =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Va = Object(u.a)(),
          Ya = (function (e) {
            function t() {
              var e, n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = za(
                  this,
                  (e = Na(t)).call.apply(e, [this].concat(r)),
                )).options = { width: 20, height: 12, farMin: 20, farMax: 40 }),
                (n.props = {
                  pointerPosition: c.a.isMobile
                    ? [0, 0.6]
                    : [
                        Va,
                        function (e) {
                          return e.pointerPositionMapped;
                        },
                      ],
                  pointerActive: !!c.a.isMobile || [
                    Va,
                    function (e) {
                      return e.pointer.active;
                    },
                  ],
                  active: !0,
                }),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Ba(e, t);
              })(t, le['a']),
              (n = t),
              (i = [
                {
                  key: 'onSetup',
                  value: (function () {
                    var e,
                      t =
                        ((e = regeneratorRuntime.mark(function e() {
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    (this.dofFocus = new $e.Vector3()),
                                      (this.dofFocusTarget = new $e.Vector3()),
                                      (this.dofAmount = new $e.Vector2(4, 15)),
                                      (this.dofFar = 15),
                                      (this.dofFarTarget = 15);
                                  case 5:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        })),
                        function () {
                          var t = this,
                            n = arguments;
                          return new Promise(function (i, r) {
                            var o = e.apply(t, n);
                            function a(e) {
                              Da(o, i, r, a, s, 'next', e);
                            }
                            function s(e) {
                              Da(o, i, r, a, s, 'throw', e);
                            }
                            a(void 0);
                          });
                        });
                    return function () {
                      return t.apply(this, arguments);
                    };
                  })(),
                },
                {
                  key: 'whileActive',
                  value: function () {
                    (this.dofFocus.x +=
                      0.05 * (this.dofFocusTarget.x - this.dofFocus.x)),
                      (this.dofFocus.y +=
                        0.05 * (this.dofFocusTarget.y - this.dofFocus.y)),
                      (this.dofFocus.z +=
                        0.05 * (this.dofFocusTarget.z - this.dofFocus.z)),
                      (this.dofFar += 0.05 * (this.dofFarTarget - this.dofFar)),
                      (this.dofAmount.y = this.dofFar);
                  },
                },
                {
                  key: 'setPointerPosition',
                  value: function (e) {
                    var t = Ia(e, 2),
                      n = t[0],
                      i = t[1];
                    (this.dofFocusTarget.z = -2),
                      (this.dofFocusTarget.x = Object(o.a)(
                        n,
                        -1,
                        1,
                        -this.options.width / 2,
                        this.options.width / 2,
                      )),
                      (this.dofFocusTarget.y = Object(o.a)(
                        i,
                        -1,
                        1,
                        -this.options.height / 2,
                        this.options.height / 2,
                      ));
                  },
                },
                {
                  key: 'setPointerActive',
                  value: function (e) {
                    this.dofFarTarget = e
                      ? this.options.farMax
                      : this.options.farMin;
                  },
                },
              ]) && Ua(n.prototype, i),
              r && Ua(n, r),
              t
            );
          })(),
          Ha = n(420);
        function Xa(e) {
          return (Xa = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ga(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function Wa(e, t) {
          return (Wa =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Qa() {
          var e = Za([
            '\n    precision highp float;\n    uniform sampler2D map;\n    uniform sampler2D noise;\n    uniform vec2 resolution;\n    uniform float edgeTop;\n    uniform float edgeBottom;\n    uniform float slopeTop;\n    uniform float slopeBottom;\n    uniform float inProgress;\n\n    vec3 gammaCorrect(vec3 color, float gamma){\n        return pow(color, vec3(1.0/gamma));\n    }\n\n    vec3 levelRange(vec3 color, float minInput, float maxInput){\n        return min(max(color - vec3(minInput), vec3(0.0)) / (vec3(maxInput) - vec3(minInput)), vec3(1.0));\n    }\n\n    vec3 levels(vec3 color, float minInput, float gamma, float maxInput){\n        return gammaCorrect(levelRange(color, minInput, maxInput), gamma);\n    }\n\n    float random (vec2 st) { return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123); }\n\n    vec2 rotateUV(vec2 uv, float rotation)\n    {\n        float mid = 0.5;\n        return vec2(\n            cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n            cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n        );\n    }\n\n    void main() {\n        vec2 uv = gl_FragCoord.xy / resolution.xy;\n        vec4 color = texture2D(map, uv);\n        vec3 black = vec3(0.0);\n    \n        // uv.y += 0.05;\n        uv = rotateUV(uv, -0.5);\n        color.rgb *= smoothstep(0.0, 0.5, uv.y * inProgress);\n        // color += black * (1.0 - smoothstep(0.0, 0.5, distance(uv, vec2(0.2))));\n\n        float r = random( uv );\n        float rStr = 0.04;\n        color += mix(-rStr/2.0, rStr/2.0, r);\n        // color.rgb = mix(color.rgb, vec3(r), 0.05);\n\n        ',
            '\n\n        gl_FragColor = vec4(color);\n        // gl_FragColor = vec4(uv,0.0, 1.0);\n    }\n',
          ]);
          return (
            (Qa = function () {
              return e;
            }),
            e
          );
        }
        function qa() {
          var e = Za([
            '\n    precision highp float;\n    attribute vec2 position;\n\n    void main() {\n    gl_Position = vec4(position, 1.0, 1.0);\n}',
          ]);
          return (
            (qa = function () {
              return e;
            }),
            e
          );
        }
        function Za(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var Ka,
          $a,
          Ja = Mt(qa()),
          es = Mt(Qa(), Kt),
          ts = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.map,
                a = r.resolution,
                u = void 0 === a ? new $e.Vector2() : a;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = Xa(t).call(this, {
                  uniforms: {
                    map: { value: o },
                    resolution: { value: u },
                    edgeTop: { value: 0 },
                    edgeBottom: { value: 0 },
                    slopeTop: { value: 0 },
                    slopeBottom: { value: 0 },
                    inProgress: { value: 0 },
                  },
                  vertexShader: Ja,
                  fragmentShader: es,
                  depthTest: !1,
                  transparent: !0,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? Ga(n)
                    : i).type = 'LandingPostProcessingMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(Ga(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Wa(e, t);
              })(t, $e['RawShaderMaterial']),
              t
            );
          })();
        function ns(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function is(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                ns(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                ns(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function rs(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function os(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function as(e) {
          return (as = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function ss(e, t) {
          return (ss =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var us,
          ls = Object(u.a)(),
          cs =
            Object(it.a)($r)(
              (Ka =
                Object(it.a)(
                  c.a.isSandbox
                    ? Object(Ri.a)({ without: 'dofController' })
                    : null,
                )(
                  ((function (e, t, n, i, r) {
                    var o = {};
                    Object.keys(i).forEach(function (e) {
                      o[e] = i[e];
                    }),
                      (o.enumerable = !!o.enumerable),
                      (o.configurable = !!o.configurable),
                      ('value' in o || o.initializer) && (o.writable = !0),
                      (o = n
                        .slice()
                        .reverse()
                        .reduce(function (n, i) {
                          return i(e, t, n) || n;
                        }, o)),
                      r &&
                        void 0 !== o.initializer &&
                        ((o.value = o.initializer
                          ? o.initializer.call(r)
                          : void 0),
                        (o.initializer = void 0)),
                      void 0 === o.initializer &&
                        (Object.defineProperty(e, t, o), (o = null));
                  })(
                    ($a = (function (e) {
                      function t() {
                        var e, n;
                        !(function (e, t) {
                          if (!(e instanceof t))
                            throw new TypeError(
                              'Cannot call a class as a function',
                            );
                        })(this, t);
                        for (
                          var i = arguments.length, r = new Array(i), o = 0;
                          o < i;
                          o++
                        )
                          r[o] = arguments[o];
                        return (
                          ((n = os(
                            this,
                            (e = as(t)).call.apply(e, [this].concat(r)),
                          )).options = {
                            size: 1,
                            postProcessingMaterial: new ts(),
                          }),
                          (n.props = {
                            visible: !1,
                            vh: [
                              ls,
                              function (e) {
                                return e.viewport.height;
                              },
                            ],
                            progress: 0.5,
                            gyro: [
                              ls,
                              function (e) {
                                return s.a.pick(e.gyro, 'alpha', 'beta', 'gamma');
                              },
                            ],
                            pointerActive: [
                              ls,
                              function (e) {
                                return e.pointer.active;
                              },
                            ],
                            resolution: [
                              ls,
                              function (e) {
                                return s.a.pick(
                                  e.viewport,
                                  'width',
                                  'height',
                                  'pixelRatio',
                                );
                              },
                            ],
                            menuStates: [
                              ls,
                              function (e) {
                                return e.menuStates;
                              },
                            ],
                            appStart: [
                              ls,
                              function (e) {
                                return e.started;
                              },
                            ],
                          }),
                          n
                        );
                      }
                      var n, i, r;
                      return (
                        (function (e, t) {
                          if ('function' != typeof t && null !== t)
                            throw new TypeError(
                              'Super expression must either be null or a function',
                            );
                          (e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                              value: e,
                              writable: !0,
                              configurable: !0,
                            },
                          })),
                            t && ss(e, t);
                        })(t, le['a']),
                        (n = t),
                        (i = [
                          {
                            key: 'onSetup',
                            value: (function () {
                              var e = is(
                                regeneratorRuntime.mark(function e() {
                                  var t, n, i;
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (window.landing = this),
                                              (this.tweens = {
                                                inProgress: 0,
                                                inZProgress: 0,
                                                inRotProgress: 0,
                                                inFadeProgress: 0,
                                              }),
                                              (this.gyroNorm = [0, 0]),
                                              (this.pointerEased = [0, 0]),
                                              (this.resolution = new $e.Vector2()),
                                              (this.object = new $e.Object3D()),
                                              (this.particlesObj = new $e.Object3D()),
                                              this.scene.add(this.object),
                                              this.scene.add(this.particlesObj),
                                              (e.next = 11),
                                              new Ya().setup({
                                                options: {
                                                  width: 5,
                                                  height: 12,
                                                  farMin: 25,
                                                  farMax: 40,
                                                },
                                              })
                                            );
                                          case 11:
                                            return (
                                              (this.dofController = e.sent),
                                              (t = this.dofController),
                                              (n = t.dofFocus),
                                              (i = t.dofAmount),
                                              (e.next = 15),
                                              new na().setup({
                                                options: { layer: 1, height: 2 },
                                                props: {
                                                  baseColor: '#00160a',
                                                  accentColor1: '#004484',
                                                  accentColor2: '#025b15',
                                                },
                                              })
                                            );
                                          case 15:
                                            return (
                                              (this.bg = e.sent),
                                              this.scene.add(this.bg.object),
                                              (e.next = 19),
                                              this.setupCopy()
                                            );
                                          case 19:
                                            return (
                                              (e.next = 21),
                                              new La().setup({
                                                options: {
                                                  dofFocus: n,
                                                  dofAmount: i,
                                                  layer: 2,
                                                  resolution: this.resolution,
                                                },
                                                props: Ha.areaBack1,
                                              })
                                            );
                                          case 21:
                                            return (
                                              (this.areaBack1 = e.sent),
                                              this.particlesObj.add(
                                                this.areaBack1.object,
                                              ),
                                              (e.next = 25),
                                              new La().setup({
                                                options: {
                                                  dofFocus: n,
                                                  dofAmount: i,
                                                  particlesAmount: 200,
                                                  layer: 2,
                                                  resolution: this.resolution,
                                                },
                                                props: Ha.areaBack2,
                                              })
                                            );
                                          case 25:
                                            return (
                                              (this.areaBack2 = e.sent),
                                              this.particlesObj.add(
                                                this.areaBack2.object,
                                              ),
                                              (e.next = 29),
                                              new La().setup({
                                                options: {
                                                  dofFocus: n,
                                                  dofAmount: i,
                                                  layer: 2,
                                                  particlesAmount: 500,
                                                  resolution: this.resolution,
                                                },
                                                props: Ha.areaFront,
                                              })
                                            );
                                          case 29:
                                            return (
                                              (this.areaFront = e.sent),
                                              this.particlesObj.add(
                                                this.areaFront.object,
                                              ),
                                              (e.next = 33),
                                              new ha().setup({
                                                options: { layer: 2 },
                                                props: {
                                                  progress: [
                                                    this.store,
                                                    function (e) {
                                                      return e.progress;
                                                    },
                                                  ],
                                                  motionRotation: [0, 0, 0],
                                                },
                                              })
                                            );
                                          case 33:
                                            (this.corn = e.sent),
                                              this.object.add(this.corn.object);
                                          case 35:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'setupCopy',
                            value: (function () {
                              var e = is(
                                regeneratorRuntime.mark(function e() {
                                  var t = this;
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (e.next = 2),
                                              new yo().setup({
                                                options: {
                                                  layer: 3,
                                                  align: c.a.isMobile
                                                    ? 'left'
                                                    : 'center',
                                                  text: p['landing-title'],
                                                  lineWidth: c.a.isMobile
                                                    ? 0.2
                                                    : 0.12,
                                                  particlesPerGlyph: c.a.isMobile
                                                    ? 8
                                                    : 20,
                                                },
                                                props: {
                                                  fontSize: [
                                                    ls,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile
                                                          ? 110
                                                          : 150) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                  width: [
                                                    ls,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile
                                                          ? 940
                                                          : 1720) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                },
                                              })
                                            );
                                          case 2:
                                            return (
                                              (this.title = e.sent),
                                              this.scene.add(this.title.object),
                                              (e.next = 6),
                                              new Ao()
                                            );
                                          case 6:
                                            return (
                                              (this.bodyText = e.sent),
                                              (e.next = 9),
                                              this.bodyText.setup({
                                                options: {
                                                  layer: 3,
                                                  position: c.a.isMobile
                                                    ? 'top-left'
                                                    : 'center',
                                                  align: c.a.isMobile
                                                    ? 'left'
                                                    : 'center',
                                                  text: p['landing-body'],
                                                },
                                                props: {
                                                  fontSize: [
                                                    ls,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile ? 40 : 20) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                  pX: [
                                                    ls,
                                                    function (e) {
                                                      return (
                                                        e.viewport.width *
                                                        (c.a.isMobile ? -0.42 : 0)
                                                      );
                                                    },
                                                  ],
                                                  width: [
                                                    ls,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile
                                                          ? 920
                                                          : 800) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                },
                                              })
                                            );
                                          case 9:
                                            return (
                                              this.scene.add(
                                                this.bodyText.object,
                                              ),
                                              this.title.store.compute(function (
                                                e,
                                              ) {
                                                var n = e.height,
                                                  i =
                                                    e.viewport.scale *
                                                      (c.a.isMobile, -100) -
                                                    n / 2;
                                                t.bodyText.props.pY = i;
                                              }),
                                              (e.next = 13),
                                              new yi().setup({
                                                options: {
                                                  layer: 3,
                                                  align: 'center',
                                                  textTransform: 'uppercase',
                                                  letterSpacing: 4,
                                                  text: p['landing-cta'],
                                                },
                                                props: {
                                                  alpha: 0,
                                                  width: [
                                                    ls,
                                                    function (e) {
                                                      return (
                                                        e.viewport.scale *
                                                        (c.a.isMobile ? 400 : 300)
                                                      );
                                                    },
                                                  ],
                                                  fontSize: [
                                                    ls,
                                                    function (e) {
                                                      return (
                                                        e.viewport.scale *
                                                        (c.a.isMobile ? 28 : 16)
                                                      );
                                                    },
                                                  ],
                                                  pY: [
                                                    ls,
                                                    function (e) {
                                                      return (
                                                        e.viewport.height *
                                                        (c.a.isMobile, -0.4)
                                                      );
                                                    },
                                                  ],
                                                },
                                              })
                                            );
                                          case 13:
                                            (this.scrollText = e.sent),
                                              this.scene.add(
                                                this.scrollText.object,
                                              );
                                          case 15:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'onMenuStates',
                            value: function () {
                              this.title && this.title.hide(),
                                this.bodyText && this.bodyText.hide();
                            },
                          },
                          {
                            key: 'offMenuStates',
                            value: function () {
                              this.props.active &&
                                this.props.appStart &&
                                (this.title && this.title.show({ delay: 0.2 }),
                                this.bodyText &&
                                  this.bodyText.show({ delay: 1.2 }));
                            },
                          },
                          {
                            key: 'onVisible',
                            value: function () {
                              (this.scene.visible = !0),
                                (this.corn.props.active = !0),
                                L.b.killDelayedCallsTo(this.offVisibleDelay);
                            },
                          },
                          {
                            key: 'offVisible',
                            value: function () {
                              (this.corn.props.active = !1),
                                L.b.delayedCall(2, this.offVisibleDelay);
                            },
                          },
                          {
                            key: 'offVisibleDelay',
                            value: function () {
                              this.scene.visible = !1;
                            },
                          },
                          {
                            key: 'onAppStart',
                            value: function () {
                              this.title &&
                                this.title.show({
                                  delay: 2.4,
                                  dur: 1.3,
                                  stagger: 0.05,
                                  fillDelay: 1.2,
                                  fillDur: 1,
                                  ease: 'easeInOutQuart',
                                }),
                                this.bodyText &&
                                  this.bodyText.show({ delay: 2.4 + 1.2 }),
                                (this.scrollText.props.active = !0),
                                L.b.killTweensOf(this.scrollText.props),
                                L.b.to(this.scrollText.props, 2, {
                                  alpha: 1,
                                  ease: 'easeOutSine',
                                  delay: 2.4 + 1.2,
                                }),
                                L.b.to(this.tweens, 3, {
                                  inProgress: 1,
                                  ease: 'easeOutQuint',
                                  delay: 1.2,
                                });
                            },
                          },
                          {
                            key: 'onActive',
                            value: function () {
                              this.props.appStart &&
                                (this.title && this.title.show(),
                                this.bodyText &&
                                  this.bodyText.show({ delay: 1.2 }));
                            },
                          },
                          {
                            key: 'offActive',
                            value: function () {
                              this.title && this.title.hide(),
                                this.bodyText && this.bodyText.hide(),
                                (this.scrollText.props.active = !1),
                                L.b.killTweensOf(this.scrollText.props),
                                L.b.to(this.scrollText.props, 0.5, {
                                  alpha: 0,
                                  ease: 'easeOutSine',
                                });
                            },
                          },
                          {
                            key: 'onPointerActive',
                            value: function () {
                              c.a.isMobile && (this.useGyro = !1);
                            },
                          },
                          {
                            key: 'offPointerActive',
                            value: function () {
                              c.a.isMobile && (this.useGyro = !0);
                            },
                          },
                          {
                            key: 'whileVisible',
                            value: function () {
                              var e;
                              (e = c.a.isMobile
                                ? this.gyroNorm
                                : ls.state.pointer.positionNorm),
                                (this.pointerEased[0] +=
                                  0.08 * (e[0] - this.pointerEased[0])),
                                (this.pointerEased[1] +=
                                  0.08 * (e[1] - this.pointerEased[1]));
                              var t = Object(Jr.a)(this.tweens.inProgress, 1, 0),
                                n = Object(Jr.a)(this.tweens.inProgress, -3, 0),
                                i = Zn(
                                  Object(Jr.a)(this.tweens.inProgress, -30, 0),
                                ),
                                r = Zn(
                                  Object(Jr.a)(this.tweens.inProgress, 10, 0),
                                ),
                                o = Object(Jr.a)(this.props.progress, 3, -3),
                                a = Zn(
                                  Object(Jr.a)(this.pointerEased[1], -20, 0),
                                ),
                                s = Zn(
                                  Object(Jr.a)(this.pointerEased[0], -5, 15),
                                );
                              (this.corn.props.sceneRotation[0] = Uo(a)),
                                (this.corn.props.sceneRotation[1] = Uo(s)),
                                (this.corn.props.pointerEased = this.pointerEased),
                                (this.camera.position.y = o + t),
                                (this.object.position.z = n),
                                (this.object.rotation.x = a + r),
                                (this.object.rotation.y = s + i),
                                (this.particlesObj.rotation.x +=
                                  0.08 * (a - this.particlesObj.rotation.x)),
                                (this.particlesObj.rotation.y +=
                                  0.08 * (s - this.particlesObj.rotation.y));
                            },
                          },
                          {
                            key: 'preCompile',
                            value: function (e) {
                              var t = e.renderer,
                                n = e.ortho;
                              t.compile(this.scene, n),
                                t.compile(this.scene, this.camera);
                            },
                          },
                          {
                            key: 'render',
                            value: function (e) {
                              var t = e.renderer,
                                n = e.ortho;
                              e.target, e.quad, e.edgeTop, e.edgeBottom;
                              n.layers.set(1),
                                t.render(this.scene, n),
                                this.camera.layers.set(2),
                                t.render(this.scene, this.camera),
                                (this.options.postProcessingMaterial.inProgress = this.tweens.inProgress);
                            },
                          },
                          {
                            key: 'renderUi',
                            value: function (e) {
                              var t = e.renderer,
                                n = e.ortho;
                              e.texture;
                              n.layers.set(3), t.render(this.scene, n);
                            },
                          },
                          {
                            key: 'setGyro',
                            value: function (e) {
                              if (this.useGyro) {
                                var t = Object(o.a)(
                                    Object(A.a)(e.gamma, -40, 40),
                                    -40,
                                    40,
                                    1,
                                    0,
                                  ),
                                  n = Object(o.a)(
                                    Object(A.a)(e.beta, -40, 40),
                                    -40,
                                    40,
                                    1,
                                    0,
                                  );
                                (this.gyroNorm[0] = t), (this.gyroNorm[1] = n);
                              }
                            },
                          },
                          {
                            key: 'setResolution',
                            value: function (e) {
                              var t = e.width,
                                n = e.height,
                                i = e.pixelRatio;
                              this.resolution.set(t, n),
                                this.options.postProcessingMaterial.resolution.set(
                                  t * i,
                                  n * i,
                                );
                            },
                          },
                        ]) && rs(n.prototype, i),
                        r && rs(n, r),
                        t
                      );
                    })()).prototype,
                    'offVisibleDelay',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      $a.prototype,
                      'offVisibleDelay',
                    ),
                    $a.prototype,
                  ),
                  (Ka = $a)),
                ) || Ka),
            ) || Ka,
          ps = n(89),
          hs = function (e) {
            if (e < 0.5) return 2 * e * e;
            var t = 1 - e;
            return 1 - 2 * t * t;
          },
          fs = function (e) {
            return 1 + Math.sin((Math.PI / 2) * e - Math.PI / 2);
          },
          ds =
            '#define GLSLIFY 1\nuniform float uProgress;\nuniform vec3 color;\nuniform sampler2D msdfMap;\n\nvarying vec2 vUv;\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\n\nvoid main() {\n    vec3 msdfSample = texture2D(msdfMap, vUv).rgb;\n    float sigDist = median(msdfSample.r, msdfSample.g, msdfSample.b) - 0.5;\n\n    float border = fwidth(sigDist);\n    \n    sigDist = sigDist / border;\n    float fill = clamp(sigDist + 0.5, 0.0, 1.0);\n\n    float mask = step(0.5, vUv.y);\n\n    float alpha = fill * uProgress;\n\n    gl_FragColor = vec4(color, alpha);\n    // gl_FragColor = vec4(vec3(color), fill);\n}';
        function vs(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function ms(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                vs(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                vs(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function gs(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function bs(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function ys(e) {
          return (ys = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function ws(e, t) {
          return (ws =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        Object(u.a)();
        var xs,
          Ps,
          _s =
            Fi()(
              (us =
                Object(it.a)(rt)(
                  (us = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = bs(
                          this,
                          (e = ys(t)).call.apply(e, [this].concat(r)),
                        )).options = {
                          text: 'Text',
                          align: 'center',
                          lineHeight: 1,
                          layer: 1,
                        }),
                        (n.props = {
                          v: !0,
                          active: !1,
                          fontSize: 20,
                          width: 100,
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && ws(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e = ms(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (this.tweens = { progress: 0 }),
                                            (this.charLength = this.options.text.replace(
                                              ' ',
                                              '',
                                            ).length),
                                            (this.textScale = 0),
                                            (this.baseFontSize =
                                              Kn.json.info.size),
                                            (e.next = 6),
                                            this.setupTitle()
                                          );
                                        case 6:
                                          this.text = e.sent;
                                        case 7:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupTitle',
                          value: (function () {
                            var e = ms(
                              regeneratorRuntime.mark(function e() {
                                var t, n, i;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (t = si({
                                              width: this.props.width,
                                              align: this.options.align,
                                              font: Kn.json,
                                              lineHeight:
                                                Kn.json.common.lineHeight *
                                                this.options.lineHeight,
                                              letterSpacing: 3,
                                              text: this.options.text.toUpperCase(),
                                            })),
                                            ((n = new $e.ShaderMaterial({
                                              uniforms: {
                                                uProgress: { value: 0 },
                                                msdfMap: { value: Kn.map },
                                                color: {
                                                  value: new $e.Color('white'),
                                                },
                                              },
                                              transparent: !0,
                                              vertexShader: Je,
                                              fragmentShader: ds,
                                            })).extensions.derivatives = !0),
                                            ((i = new $e.Mesh(
                                              t,
                                              n,
                                            )).rotation.x = Zn(180)),
                                            i.layers.set(this.options.layer),
                                            (i.renderOrder = 50),
                                            this.object.add(i),
                                            e.abrupt('return', i)
                                          );
                                        case 9:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setFontSize',
                          value: function (e) {
                            this.updateText();
                          },
                        },
                        {
                          key: 'updateText',
                          value: function () {
                            var e = this.props.fontSize / this.baseFontSize;
                            this.text.scale.setScalar(e),
                              this.text.geometry.update({
                                width: this.props.width / e,
                              });
                            var t =
                                this.text.geometry.layout.width /
                                this.text.geometry.layout.height,
                              n = this.props.width / 2,
                              i = this.props.width / t / 2;
                            this.text.position.set(-n, -i, 0);
                          },
                        },
                        {
                          key: 'highlight',
                          value: function () {
                            var e = this,
                              t = 0.15 * this.props.width;
                            L.b.killTweensOf(this.tweens),
                              L.b.to(this.tweens, 0.1, {
                                progress: 0,
                                ease: 'easeOutQuart',
                              }),
                              L.b.to(this.tweens, 1, {
                                progress: 1,
                                ease: 'easeOutQuart',
                                delay: 0.1,
                              }),
                              L.b.to(this.props, 0.1, {
                                pY: 0.5 * t,
                                ease: 'easeOutQuart',
                                onComplete: function () {
                                  L.b.fromTo(
                                    e.props,
                                    1,
                                    { pY: -t },
                                    { pY: 0, ease: 'easeOutQuart' },
                                  );
                                },
                              });
                          },
                        },
                        {
                          key: 'show',
                          value: function () {
                            var e =
                                arguments.length > 0 && void 0 !== arguments[0]
                                  ? arguments[0]
                                  : {},
                              t = e.delay,
                              n = void 0 === t ? 0 : t,
                              i = e.dur,
                              r = void 0 === i ? 1 : i;
                            (this.props.active = !0),
                              L.b.killTweensOf([this.tweens, this.props]),
                              L.b.to(this.tweens, r, {
                                progress: 1,
                                ease: 'easeOutQuart',
                                delay: n,
                              }),
                              L.b.to(this.props, r, {
                                pY: 0,
                                ease: 'easeOutQuart',
                                delay: n,
                              });
                          },
                        },
                        {
                          key: 'hide',
                          value: function () {
                            var e = this,
                              t =
                                arguments.length > 0 && void 0 !== arguments[0]
                                  ? arguments[0]
                                  : {},
                              n = t.delay,
                              i = void 0 === n ? 0 : n,
                              r = t.dur,
                              o = void 0 === r ? 0.5 : r;
                            L.b.killTweensOf([this.tweens, this.props]),
                              L.b.to(this.tweens, o, {
                                progress: 0,
                                ease: 'easeInQuart',
                                delay: i,
                              }),
                              L.b.to(this.props, o, {
                                pY: 0.15 * this.props.width,
                                ease: 'easeInQuart',
                                delay: i,
                                onComplete: function () {
                                  (e.props.active = !1),
                                    (e.props.pY = 0.15 * -e.props.width);
                                },
                              });
                          },
                        },
                        {
                          key: 'whileActive',
                          value: function () {
                            this.text.material.uniforms.uProgress.value = this.tweens.progress;
                          },
                        },
                      ]) && gs(n.prototype, i),
                      r && gs(n, r),
                      t
                    );
                  })()),
                ) || us),
            ) || us;
        function ks(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Os(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ss(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Ts(e) {
          return (Ts = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function As(e, t) {
          return (As =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Ms = Object(u.a)(),
          js =
            Qe(
              (xs =
                Fi()(
                  (xs =
                    Object(it.a)(rt)(
                      ((function (e, t, n, i, r) {
                        var o = {};
                        Object.keys(i).forEach(function (e) {
                          o[e] = i[e];
                        }),
                          (o.enumerable = !!o.enumerable),
                          (o.configurable = !!o.configurable),
                          ('value' in o || o.initializer) && (o.writable = !0),
                          (o = n
                            .slice()
                            .reverse()
                            .reduce(function (n, i) {
                              return i(e, t, n) || n;
                            }, o)),
                          r &&
                            void 0 !== o.initializer &&
                            ((o.value = o.initializer
                              ? o.initializer.call(r)
                              : void 0),
                            (o.initializer = void 0)),
                          void 0 === o.initializer &&
                            (Object.defineProperty(e, t, o), (o = null));
                      })(
                        (Ps = (function (e) {
                          function t() {
                            var e, n;
                            !(function (e, t) {
                              if (!(e instanceof t))
                                throw new TypeError(
                                  'Cannot call a class as a function',
                                );
                            })(this, t);
                            for (
                              var i = arguments.length, r = new Array(i), o = 0;
                              o < i;
                              o++
                            )
                              r[o] = arguments[o];
                            return (
                              ((n = Ss(
                                this,
                                (e = Ts(t)).call.apply(e, [this].concat(r)),
                              )).options = { text: 'Default text' }),
                              (n.props = {
                                v: !1,
                                active: !1,
                                eventsActive: !1,
                                rotation: 0,
                                progress: 0,
                                progressStart: 0,
                                progressEnd: 1,
                                renderActive: !1,
                                pointerClick: [
                                  Ms,
                                  function (e) {
                                    return e.pointer.click;
                                  },
                                ],
                                pointerPosition: [
                                  Ms,
                                  function (e) {
                                    return e.pointer.position;
                                  },
                                ],
                                cursorDefault: 'default',
                                rollover: !1,
                                velInner: 0.2,
                                velOuter: 0.2,
                                springInner: 0.015,
                                frictionInner: 0.83,
                                springOuter: 0.008,
                                frictionOuter: 0.86,
                                viewport: [
                                  Ms,
                                  function (e) {
                                    return s.a.pick(
                                      e.viewport,
                                      'width',
                                      'height',
                                      'scale',
                                    );
                                  },
                                ],
                                size: function (e) {
                                  return (
                                    e.viewport.scale * (c.a.isMobile ? 250 : 150)
                                  );
                                },
                              }),
                              n
                            );
                          }
                          var n, i, r;
                          return (
                            (function (e, t) {
                              if ('function' != typeof t && null !== t)
                                throw new TypeError(
                                  'Super expression must either be null or a function',
                                );
                              (e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                  value: e,
                                  writable: !0,
                                  configurable: !0,
                                },
                              })),
                                t && As(e, t);
                            })(t, le['a']),
                            (n = t),
                            (i = [
                              {
                                key: 'onSetup',
                                value: (function () {
                                  var e,
                                    t =
                                      ((e = regeneratorRuntime.mark(function e() {
                                        return regeneratorRuntime.wrap(
                                          function (e) {
                                            for (;;)
                                              switch ((e.prev = e.next)) {
                                                case 0:
                                                  return (
                                                    (window.prRing = this),
                                                    (this.tweens = {
                                                      rotation: 0,
                                                      inProgress: 0,
                                                      startProgress: 0,
                                                      endProgress: 0,
                                                    }),
                                                    (this.time = 0),
                                                    (this.angle = 0),
                                                    (this.progress = 0),
                                                    (this.bbox = new $e.Box3()),
                                                    (this.scaleInnerPrVel = 0),
                                                    (this.scaleOuterPrVel = 0),
                                                    (this.scaleInnerPr = 0),
                                                    (this.scaleOuterPr = 0),
                                                    this.setupRings(),
                                                    (e.next = 13),
                                                    new _s()
                                                  );
                                                case 13:
                                                  return (
                                                    (this.text = e.sent),
                                                    (e.next = 16),
                                                    this.text.setup({
                                                      options: {
                                                        layer: this.options.layer,
                                                        text: this.options.text,
                                                      },
                                                      props: {
                                                        fontSize: [
                                                          this.store,
                                                          function (e) {
                                                            return (
                                                              (c.a.isMobile
                                                                ? 32
                                                                : 16) *
                                                              e.viewport.scale
                                                            );
                                                          },
                                                        ],
                                                        width: 100,
                                                      },
                                                    })
                                                  );
                                                case 16:
                                                  this.object.add(
                                                    this.text.object,
                                                  );
                                                case 17:
                                                case 'end':
                                                  return e.stop();
                                              }
                                          },
                                          e,
                                          this,
                                        );
                                      })),
                                      function () {
                                        var t = this,
                                          n = arguments;
                                        return new Promise(function (i, r) {
                                          var o = e.apply(t, n);
                                          function a(e) {
                                            ks(o, i, r, a, s, 'next', e);
                                          }
                                          function s(e) {
                                            ks(o, i, r, a, s, 'throw', e);
                                          }
                                          a(void 0);
                                        });
                                      });
                                  return function () {
                                    return t.apply(this, arguments);
                                  };
                                })(),
                              },
                              {
                                key: 'setupRings',
                                value: function () {
                                  (this.innerRing = this.setupRing({
                                    outerCircle: !1,
                                    strokeWidth: 2,
                                  })),
                                    (this.outerRing = this.setupRing({
                                      outerCircle: !0,
                                      strokeWidth: 1.5,
                                    })),
                                    (this.object.name = 'Hotspot');
                                },
                              },
                              {
                                key: 'setupRing',
                                value: function (e) {
                                  var t = e.outerCircle,
                                    n = void 0 === t || t,
                                    i = e.strokeWidth,
                                    r = void 0 === i ? 2 : i,
                                    o =
                                      (e.size,
                                      new $e.ShaderMaterial({
                                        defines: { OUTER_CIRCLE: n },
                                        uniforms: {
                                          uRotation: { value: 0 },
                                          uProgress: { value: 0 },
                                          uProgressEdges: {
                                            value: new $e.Vector2(0, 1),
                                          },
                                          uStrokeWidth: {
                                            value:
                                              r * Ms.state.viewport.pixelRatio,
                                          },
                                        },
                                        transparent: !0,
                                        vertexShader: Je,
                                        fragmentShader:
                                          '#define GLSLIFY 1\n#define PI 3.141592653589793\n\nuniform float uProgress;\nuniform float uStrokeWidth;\nuniform float uRotation;\nuniform vec2 uProgressEdges;\n\nvarying vec2 vUv;\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat toRadians(float deg) {\n\treturn deg * (3.141592653589793 / 180.0);\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s) {\n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(uv - 0.5) * scale;\n    \n    // Calculate edge antialias feather\n    float distance = length(center);\n    float edgeFeather = fwidth(distance) * feather;\n\n    // Calculate fixed stroke width regardless of scale\n    float dx = dFdx(uv.x);\n    strokeWidth = dx * strokeWidth;\n  \n    float innerRadius = radius - strokeWidth;\n    float outerRadius = radius;\n    float value = smoothstep(innerRadius - edgeFeather, innerRadius, distance) * \n                  smoothstep(outerRadius, outerRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s, float alignStroke) {\n    // alignStroke values: 0 = innner, 0.5 = center,  1 = outer\n    \n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeWidth = dDistance * feather;\n    float innerEdge = mix(1.0, 0.0, alignStroke);\n    float outerEdge = mix(0.0, 1.0, alignStroke);\n\n    // Apply stroke width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float dxStrokeWidth = dx * strokeWidth;\n    float innerRadius = radius - dxStrokeWidth * innerEdge;\n    float outerRadius = radius + dxStrokeWidth * outerEdge;\n    float value = smoothstep(innerRadius - edgeWidth * .5, innerRadius + edgeWidth * .5, distance) * (1. - smoothstep(outerRadius - edgeWidth * .5, outerRadius + edgeWidth * .5, distance));\n\n    return value;\n}\n\nfloat createGradient(vec2 point) {\n    float angleFromPoint = atan(point.x, point.y);\n    return (angleFromPoint + PI) / (PI * 2.0);\n}\n\nfloat createCircle(vec2 uv, float s) {\n    float scale = 1.0 / s;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n    float radius = 0.5;\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeFeather = dDistance * feather;\n\n    // Apply radius width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float circleRadius = radius;\n    float value = smoothstep(circleRadius + edgeFeather * .5, circleRadius - edgeFeather * .5, distance);\n    // float value = smoothstep(circleRadius, circleRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createCircle(vec2 uv, float radius, float s) {\n    float scale = 1.0 / s;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeFeather = dDistance * feather;\n\n    // Apply radius width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float circleRadius = dx * radius;\n    float value = smoothstep(circleRadius, circleRadius - edgeFeather, distance);\n\n    return value;\n}\n\nvoid main() {\n    vec2 uv = vUv;\n\n    // uv = rotateUV(uv, toRadians(uRotation));\n    uv = rotateUV(uv, uRotation);\n\n    vec2 center = uv - 0.5;\n\n    // float ring = createRing(uv, 1.0);\n    float ring = createRing(vUv, uStrokeWidth, 1.0);\n    float gradient = createGradient(center);\n\n    float start = step(uProgressEdges.x, gradient);\n    float end = 1.0 - step(uProgressEdges.y, gradient);\n    float progressRing = start * end * ring;\n\n    float alpha = progressRing;\n    \n    #ifdef OUTER_CIRCLE\n        alpha *= gradient;\n    #else\n        alpha += createCircle(uv,  1.0) * 0.08 * uProgress;\n    #endif\n\n    \n    gl_FragColor = vec4(vec3(1.0), alpha);\n    // gl_FragColor = vec4(vec3(1.0), circle);\n    // gl_FragColor = vec4(1.0);\n}\n\n',
                                      }));
                                  o.extensions.derivatives = !0;
                                  var a = new $e.Mesh(et, o);
                                  return (
                                    a.layers.set(this.options.layer),
                                    this.object.add(a),
                                    a
                                  );
                                },
                              },
                              {
                                key: 'highlightHotspot',
                                value: function () {
                                  this.props.size, this.props.size;
                                  (this.scaleInnerPrVel = this.props.velInner),
                                    (this.scaleOuterPrVel = this.props.velOuter),
                                    L.b.killDelayedCallsTo(this.highlightHotspot),
                                    L.b.delayedCall(3, this.highlightHotspot);
                                },
                              },
                              {
                                key: 'show',
                                value: function () {
                                  var e = this,
                                    t = (arguments.length > 0 &&
                                    void 0 !== arguments[0]
                                      ? arguments[0]
                                      : {}
                                    ).delay,
                                    n = void 0 === t ? 0 : t;
                                  (this.props.active = !0),
                                    this.tweenOut && (n = 0),
                                    this.tweenOut &&
                                      console.log('this.tweenOut', this.tweenOut),
                                    L.b.killTweensOf(this.tweens),
                                    L.b.to(this.tweens, 2, {
                                      inProgress: 1,
                                      startProgress: 0,
                                      endProgress: 1,
                                      delay: n,
                                      ease: 'easeInOutQuart',
                                      onStart: function () {
                                        (e.props.v = !0),
                                          (e.props.eventsActive = !0);
                                      },
                                    }),
                                    this.text.show({ delay: n + 1, dur: 1 }),
                                    L.b.delayedCall(4, this.highlightHotspot);
                                },
                              },
                              {
                                key: 'hide',
                                value: function () {
                                  var e = this,
                                    t = (arguments.length > 0 &&
                                    void 0 !== arguments[0]
                                      ? arguments[0]
                                      : {}
                                    ).delay,
                                    n = void 0 === t ? 0 : t;
                                  (this.props.eventsActive = !1),
                                    (this.props.rollover = !1),
                                    L.b.killTweensOf(this.tweens),
                                    (this.tweenOut = L.b.to(this.tweens, 1, {
                                      inProgress: 0,
                                      startProgress: 1,
                                      endProgress: 1,
                                      delay: n,
                                      ease: 'easeInOutQuart',
                                      onComplete: function () {
                                        (e.tweens.endProgress = 0),
                                          (e.tweens.startProgress = 0),
                                          (e.props.active = !1),
                                          (e.props.v = !1),
                                          (e.tweenOut = null);
                                      },
                                    })),
                                    this.text.hide({ delay: n }),
                                    L.b.killDelayedCallsTo(this.highlightHotspot);
                                },
                              },
                              {
                                key: 'setPointerClick',
                                value: function () {
                                  this.props.eventsActive &&
                                    !Ms.state.menuStates &&
                                    Ke(this.bbox) &&
                                    this.emit('click');
                                },
                              },
                              {
                                key: 'setPointerPosition',
                                value: function () {
                                  if (
                                    this.props.eventsActive &&
                                    !Ms.state.menuStates
                                  ) {
                                    this.bbox.setFromObject(this.outerRing);
                                    var e = Ke(this.bbox);
                                    this.props.rollover = !!e;
                                  }
                                },
                              },
                              {
                                key: 'setRollover',
                                value: function (e) {
                                  e
                                    ? ((Ms.state.cursor = 'pointer'),
                                      this.highlightHotspot())
                                    : (Ms.state.cursor = this.props.cursorDefault);
                                },
                              },
                              {
                                key: 'setSize',
                                value: function (e) {
                                  this.outerRing.scale.set(1.3 * e, 1.3 * e, 1),
                                    (this.text.props.width = e);
                                },
                              },
                              {
                                key: 'whileActive',
                                value: function () {
                                  (this.innerRing.material.uniforms.uProgress.value = this.tweens.inProgress),
                                    (this.innerRing.material.uniforms.uProgressEdges.value.x = this.tweens.startProgress),
                                    (this.innerRing.material.uniforms.uProgressEdges.value.y = this.tweens.endProgress),
                                    (this.outerRing.material.uniforms.uProgress.value = this.tweens.inProgress),
                                    (this.outerRing.material.uniforms.uProgressEdges.value.x = this.tweens.startProgress),
                                    (this.outerRing.material.uniforms.uProgressEdges.value.y = this.tweens.endProgress),
                                    (this.scaleInnerPrVel =
                                      (1 - this.scaleInnerPr) *
                                        this.props.springInner +
                                      this.scaleInnerPrVel *
                                        this.props.frictionInner),
                                    (this.scaleOuterPrVel =
                                      (1 - this.scaleOuterPr) *
                                        this.props.springOuter +
                                      this.scaleOuterPrVel *
                                        this.props.frictionOuter),
                                    (this.scaleInnerPr += this.scaleInnerPrVel),
                                    (this.scaleOuterPr += this.scaleOuterPrVel),
                                    (this.outerRing.material.uniforms.uRotation.value =
                                      3 * -Ms.state.time);
                                  var e =
                                      1 *
                                      this.props.size *
                                      Object(Jr.a)(this.scaleInnerPr, 1, 1.2),
                                    t =
                                      1.3 *
                                      this.props.size *
                                      Object(Jr.a)(this.scaleOuterPr, 1, 1.2);
                                  this.innerRing.scale.set(e, e, 1),
                                    this.outerRing.scale.set(t, t, 1);
                                },
                              },
                            ]) && Os(n.prototype, i),
                            r && Os(n, r),
                            t
                          );
                        })()).prototype,
                        'highlightHotspot',
                        [X.a],
                        Object.getOwnPropertyDescriptor(
                          Ps.prototype,
                          'highlightHotspot',
                        ),
                        Ps.prototype,
                      ),
                      (xs = Ps)),
                    ) || xs),
                ) || xs),
            ) || xs;
        function Fs(e) {
          return (Fs = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Rs(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function Cs(e, t) {
          return (Cs =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Es() {
          var e = Is([
            '\n    uniform vec2 progress;\n    uniform vec3 color;\n    uniform float opacity;\n    varying float vSize;\n    varying vec3 vViewPosition;\n    // varying vec3 vNormal;\n    varying vec2 vUv;\n\n    void main() {\n        float distanceAlpha = mix(1.0, 0.2, smoothstep(0.0, 0.2, vSize));\n        float distanceAddColor = mix(0.2, 0.0, smoothstep(0.0, 0.5, vSize));\n        float distanceMultColor = mix(1.0, 0.5, smoothstep(0.0, 0.5, vSize));\n        // float blurcolorred = (1.0 - vSize) + dot(vViewPosition, vNormal) / 10.0;\n        float progressAlpha = step(progress.x, vUv.x) * step(vUv.x, progress.y);\n        float endFade = smoothstep(0.05, 0.4, vUv.x);\n        vec3 progressColor = (1.0 - endFade) * vec3(0.4) * (smoothstep(progress.x + 0.1, progress.x, vUv.x) + smoothstep(progress.y - 0.1, progress.y, vUv.x));\n        gl_FragColor = vec4(\n            (color + distanceAddColor) * distanceMultColor * 0.5 + progressColor,\n            distanceAlpha * opacity * progressAlpha * endFade\n        );\n    }\n',
          ]);
          return (
            (Es = function () {
              return e;
            }),
            e
          );
        }
        function Ls() {
          var e = Is([
            '\n    ',
            '\n    uniform float time;\n    uniform vec2 dofAmount;\n    uniform vec3 dofFocus;\n    varying float vSize;\n    varying vec3 vViewPosition;\n    // varying vec3 vNormal;\n    varying vec2 vUv;\n    void main() {\n        vec4 transformed = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        ',
            '\n        ',
            '\n        // transformed.xyz += normal.xyz * (0.01 + vSize) * 0.3;\n        transformed = projectionMatrix * modelViewMatrix * vec4(position + normal.xyz * vSize * 0.1, 1.0);\n        ',
            '\n\n        // transformed.xyz += normal.xyz * (vSize);\n        gl_Position = transformed;\n        vViewPosition = -(modelViewMatrix * vec4( position, 1.0 )).xyz;\n        // vNormal = normal;\n        vUv = uv;\n    }\n',
          ]);
          return (
            (Ls = function () {
              return e;
            }),
            e
          );
        }
        function Is(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var Ds,
          Us = function (e) {
            return Mt(
              Ls(),
              e.noise ? da : '',
              e.noise ? ba : '',
              ya,
              e.noise ? ba : '',
            );
          },
          zs = function () {
            return Mt(Es());
          },
          Ns = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.progress,
                a = void 0 === o ? new $e.Vector2() : o,
                u = r.color,
                l = void 0 === u ? new $e.Color('#333333') : u,
                c = r.opacity,
                p = void 0 === c ? 1 : c,
                h = r.dofAmount,
                f = void 0 === h ? new $e.Vector2(7, 15) : h,
                d = r.dofFocus,
                v = void 0 === d ? new $e.Vector3() : d,
                m = r.noise,
                g = void 0 !== m && m;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = Fs(t).call(this, {
                  uniforms: {
                    progress: { value: a },
                    color: { value: l },
                    opacity: { value: p },
                    time: { value: 0 },
                    dofAmount: { value: f },
                    dofFocus: { value: v },
                  },
                  vertexShader: Us({ noise: g }),
                  fragmentShader: zs(),
                  blending: $e.AdditiveBlending,
                  transparent: !0,
                  depthTest: !1,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? Rs(n)
                    : i).type = 'ParticlesThreadMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(Rs(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Cs(e, t);
              })(t, $e['ShaderMaterial']),
              t
            );
          })(),
          Bs = 2 * Math.PI,
          Vs = function (e) {
            var t = e.height,
              n = void 0 === t ? 1 : t,
              i = e.radius,
              r = void 0 === i ? 0.1 : i,
              a = e.frequency,
              u = void 0 === a ? 10 : a,
              l = e.phase,
              c = void 0 === l ? 0 : l,
              p = e.radius2,
              h = void 0 === p ? 0 : p,
              f = e.frequency2,
              d = void 0 === f ? 20 : f,
              v = e.phase2,
              m = void 0 === v ? 0 : v,
              g = e.crossAt,
              b = void 0 === g ? [0.5] : g,
              y = 0;
            return new $e.CatmullRomCurve3(
              s.a.flatten(
                s.a.range(13).map(function (e) {
                  var t = e / 13,
                    i = (e - 1) / 13,
                    a =
                      -1 !==
                      b.findIndex(function (e) {
                        return t >= e && i < e;
                      });
                  a && (y += Math.PI);
                  var l = [],
                    p = t * Bs * u + c + y,
                    f = t * Bs * d + m;
                  if (
                    (l.push(
                      new $e.Vector3(
                        r * Math.sin(p) + h * Math.sin(f),
                        t * n - n / 2,
                        r * Math.cos(p) + h * Math.cos(f),
                      ),
                    ),
                    a)
                  ) {
                    var v = n / 13,
                      g = Object(o.a)(Math.random(), 0, 1, -v / 8, v / 8),
                      w = Object(o.a)(Math.random(), 0, 1, -v / 4, v / 4),
                      x = Object(o.a)(Math.random(), 0, 1, -v / 4, v / 4);
                    s.a.times(2, function (e) {
                      var i = -(((e + 1) / 5) * 2 - 1) * r;
                      l.unshift(
                        new $e.Vector3(
                          i * Math.sin(p) + w,
                          t * n - n / 2 - v / 2 + g,
                          i * Math.cos(p) + x,
                        ),
                      );
                    });
                  }
                  return l;
                }),
              ),
            );
          };
        function Ys(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Hs(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Xs(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Gs(e) {
          return (Gs = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ws(e, t) {
          return (Ws =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Qs,
          qs =
            Object(it.a)(rt)(
              (Ds = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Xs(
                      this,
                      (e = Gs(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      threadSegments: 200,
                      radiusSegments: 5,
                      particlesAmount: 100,
                      height: 12,
                      radius: 1,
                      frequency: 0.5,
                      phase: 0,
                      radius2: 0,
                      frequency2: 1,
                      phase2: 0,
                      thread: !0,
                      randomness: 0,
                      crossAt: [-1],
                      dofFocus: new $e.Vector3(),
                      dofAmount: new $e.Vector3(7, 15),
                      resolution: new $e.Vector2(),
                      noise: !1,
                    }),
                    (n.props = {
                      startProgress: 0,
                      endProgress: 0.5,
                      color: '#be8b42',
                      o: 1,
                      particleSizeMin: 10,
                      particleSizeMax: 35,
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && Ws(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (this.spline = Vs(
                                          s.a.pick(this.options, [
                                            'height',
                                            'radius',
                                            'frequency',
                                            'phase',
                                            'radius2',
                                            'frequency2',
                                            'phase2',
                                            'crossAt',
                                          ]),
                                        )),
                                          this.options.thread &&
                                            this.setupThread(),
                                          this.setupParticles();
                                      case 3:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  Ys(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  Ys(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    /******** PARTICLES ***************************************************************************************************************************** */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    {
                      key: 'setupThread',
                      value: function () {
                        (this.threadGeometry = new $e.TubeBufferGeometry(
                          this.spline,
                          this.options.threadSegments,
                          0.004,
                          this.options.radiusSegments,
                          !1,
                        )),
                          (this.threadMaterial =
                            this.options.threadMaterial ||
                            new Ns({
                              progress: new $e.Vector2(
                                this.props.startProgress,
                                this.props.endProgress,
                              ),
                              color: new $e.Color('#af864c'),
                              dofFocus: this.options.dofFocus,
                              dofAmount: this.options.dofAmount,
                              noise: this.options.noise,
                              resolution: this.options.resolution,
                            })),
                          (this.thread = new $e.Mesh(
                            this.threadGeometry,
                            this.threadMaterial,
                          )),
                          (this.thread.renderOrder = 0),
                          this.object.add(this.thread);
                      },
                    },
                    {
                      key: 'setupParticles',
                      value: function () {
                        var e = this;
                        this.particlesGeometry = new $e.BufferGeometry();
                        var t = new Float32Array(
                          s.a.range(this.options.particlesAmount),
                        );
                        this.particlesGeometry.addAttribute(
                          'id',
                          new $e.BufferAttribute(t, 1),
                        );
                        var n = new Float32Array(
                            s.a.range(this.options.particlesAmount),
                          ),
                          i = new Float32Array(
                            s.a.flatten(
                              s.a
                                .range(this.options.particlesAmount)
                                .map(function (t) {
                                  var i = 1 / e.options.particlesAmount,
                                    r = Object(A.a)(
                                      t * i +
                                        Object(o.a)(
                                          Math.random(),
                                          0,
                                          1,
                                          0.9 * -i,
                                          0.9 * i,
                                        ),
                                      0,
                                      1,
                                    );
                                  n.set([r], t);
                                  var a = e.spline.getPoint(r);
                                  return (
                                    (a.x +=
                                      (2 * Math.random() - 1) *
                                      e.options.randomness),
                                    (a.y +=
                                      (2 * Math.random() - 1) *
                                      e.options.randomness),
                                    (a.z +=
                                      (2 * Math.random() - 1) *
                                      e.options.randomness),
                                    a.toArray()
                                  );
                                }),
                            ),
                          );
                        this.particlesGeometry.addAttribute(
                          'position',
                          new $e.BufferAttribute(i, 3),
                        ),
                          this.particlesGeometry.addAttribute(
                            't',
                            new $e.BufferAttribute(n, 1),
                          ),
                          (this.particlesMaterial =
                            this.options.particlesMaterial ||
                            new Ma({
                              progress: new $e.Vector2(
                                this.props.startProgress,
                                this.props.endProgress,
                              ),
                              color: new $e.Color('#be8b42'),
                              dofFocus: this.options.dofFocus,
                              dofAmount: this.options.dofAmount,
                              noise: this.options.noise,
                              resolution: this.options.resolution,
                            })),
                          (this.particles = new $e.Points(
                            this.particlesGeometry,
                            this.particlesMaterial,
                          )),
                          (this.particles.renderOrder = 1),
                          this.object.add(this.particles);
                      },
                    },
                    {
                      key: 'setColor',
                      value: function (e) {
                        this.options.thread &&
                          this.threadMaterial.color.setStyle(e),
                          this.particlesMaterial.color.setStyle(e);
                      },
                    },
                    {
                      key: 'setO',
                      value: function (e) {
                        this.options.thread && (this.threadMaterial.opacity = e),
                          (this.particlesMaterial.opacity = e);
                      },
                    },
                    {
                      key: 'setParticleSizeMin',
                      value: function (e) {
                        this.particlesMaterial.size.setX(e);
                      },
                    },
                    {
                      key: 'setParticleSizeMax',
                      value: function (e) {
                        this.particlesMaterial.size.setY(e);
                      },
                    },
                    {
                      key: 'setStartProgress',
                      value: function (e) {
                        this.threadMaterial &&
                          (this.threadMaterial.progress.x = e),
                          (this.particlesMaterial.progress.x = e);
                      },
                    },
                    {
                      key: 'setEndProgress',
                      value: function (e) {
                        this.threadMaterial &&
                          (this.threadMaterial.progress.y = e),
                          (this.particlesMaterial.progress.y = e);
                      },
                    },
                  ]) && Hs(n.prototype, i),
                  r && Hs(n, r),
                  t
                );
              })()),
            ) || Ds;
        function Zs(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Ks(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Zs(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Zs(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function $s(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Js(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function eu(e) {
          return (eu = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function tu(e, t) {
          return (tu =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var nu,
          iu = 2 * Math.PI,
          ru =
            Object(it.a)(rt)(
              (Qs = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Js(
                      this,
                      (e = eu(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      dofFocus: new $e.Vector3(),
                      dofAmount: new $e.Vector3(7, 15),
                      resolution: new $e.Vector2(),
                    }),
                    (n.props = {
                      startProgress: -1,
                      endProgress: 3,
                      color: '#be8b42',
                      o: 1,
                      particleSizeMin: 10,
                      particleSizeMax: 35,
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && tu(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = Ks(
                          regeneratorRuntime.mark(function e() {
                            var t,
                              n = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.stripes = []),
                                        20,
                                        7,
                                        (t = s.a.range(7).map(function (e) {
                                          return (e % 7) / 7 + 0.5 / 7;
                                        })),
                                        (e.next = 6),
                                        Promise.all(
                                          s.a.flatten(
                                            [0, Math.PI].map(function (e) {
                                              return s.a.range(0, 20).map(
                                                (function () {
                                                  var i = Ks(
                                                    regeneratorRuntime.mark(
                                                      function i(r) {
                                                        var a, u, l;
                                                        return regeneratorRuntime.wrap(
                                                          function (i) {
                                                            for (;;)
                                                              switch (
                                                                (i.prev = i.next)
                                                              ) {
                                                                case 0:
                                                                  return (
                                                                    (a =
                                                                      0.2 *
                                                                      Math.sin(
                                                                        10348.4726191 *
                                                                          r,
                                                                      )),
                                                                    (u =
                                                                      (r / 20) *
                                                                        iu +
                                                                      0.8 *
                                                                        (Math.random() -
                                                                          0.5)),
                                                                    (i.next = 4),
                                                                    new qs().setup(
                                                                      {
                                                                        options: {
                                                                          height: 15,
                                                                          phase: e,
                                                                          phase2: u,
                                                                          radius:
                                                                            1.3 *
                                                                            0.9,
                                                                          radius2:
                                                                            0.9 *
                                                                            Object(
                                                                              o.a,
                                                                            )(
                                                                              Math.random(),
                                                                              0,
                                                                              1,
                                                                              0.2,
                                                                              0.3,
                                                                            ),
                                                                          frequency: 0.9,
                                                                          frequency2: 4,
                                                                          crossAt: s.a.filter(
                                                                            t,
                                                                            function (
                                                                              e,
                                                                              t,
                                                                            ) {
                                                                              return (
                                                                                t %
                                                                                  3 ==
                                                                                  r %
                                                                                    3 &&
                                                                                0 !==
                                                                                  t &&
                                                                                1 !==
                                                                                  t
                                                                              );
                                                                            },
                                                                          ),
                                                                          dofFocus:
                                                                            n
                                                                              .options
                                                                              .dofFocus,
                                                                          dofAmount:
                                                                            n
                                                                              .options
                                                                              .dofAmount,
                                                                          noise: !0,
                                                                          particlesAmount: 150,
                                                                          thread: !0,
                                                                          resolution:
                                                                            n
                                                                              .options
                                                                              .resolution,
                                                                        },
                                                                        props: {
                                                                          startProgress: [
                                                                            n.store,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return (
                                                                                e.startProgress +
                                                                                a
                                                                              );
                                                                            },
                                                                          ],
                                                                          endProgress: [
                                                                            n.store,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return (
                                                                                e.endProgress +
                                                                                a
                                                                              );
                                                                            },
                                                                          ],
                                                                          color: [
                                                                            n.store,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return e.color;
                                                                            },
                                                                          ],
                                                                          o: [
                                                                            n.store,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return e.o;
                                                                            },
                                                                          ],
                                                                          particleSizeMin: [
                                                                            n.store,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return e.particleSizeMin;
                                                                            },
                                                                          ],
                                                                          particleSizeMax: [
                                                                            n.store,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return e.particleSizeMax;
                                                                            },
                                                                          ],
                                                                        },
                                                                      },
                                                                    )
                                                                  );
                                                                case 4:
                                                                  return (
                                                                    (l = i.sent),
                                                                    n.object.add(
                                                                      l.object,
                                                                    ),
                                                                    i.abrupt(
                                                                      'return',
                                                                      l,
                                                                    )
                                                                  );
                                                                case 7:
                                                                case 'end':
                                                                  return i.stop();
                                                              }
                                                          },
                                                          i,
                                                        );
                                                      },
                                                    ),
                                                  );
                                                  return function (e) {
                                                    return i.apply(
                                                      this,
                                                      arguments,
                                                    );
                                                  };
                                                })(),
                                              );
                                            }),
                                          ),
                                        )
                                      );
                                    case 6:
                                      this.stripes = e.sent;
                                    case 7:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                  ]) && $s(n.prototype, i),
                  r && $s(n, r),
                  t
                );
              })()),
            ) || Qs;
        function ou(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function au(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function su(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function uu(e) {
          return (uu = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function lu(e, t) {
          return (lu =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var cu =
            Object(it.a)(rt)(
              (nu = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = su(
                      this,
                      (e = uu(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      points: [],
                      threadSegments: 200,
                      radiusSegments: 8,
                      particlesAmount: 300,
                      thread: !0,
                      dofFocus: new $e.Vector3(),
                      dofAmount: new $e.Vector3(7, 15),
                      resolution: new $e.Vector2(),
                      noise: !1,
                      randomness: 0,
                    }),
                    (n.props = {
                      color: '#be8b42',
                      o: 1,
                      particleSizeMin: 10,
                      particleSizeMax: 35,
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && lu(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (this.spline = new $e.CatmullRomCurve3(
                                          this.options.points,
                                        )),
                                          this.options.thread &&
                                            this.setupThread(),
                                          this.setupParticles();
                                      case 3:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  ou(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  ou(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupThread',
                      value: function () {
                        (this.threadGeometry = new $e.TubeBufferGeometry(
                          this.spline,
                          this.options.threadSegments,
                          0.01,
                          this.options.radiusSegments,
                          !1,
                        )),
                          (this.threadMaterial =
                            this.options.threadMaterial ||
                            new Ns({
                              color: new $e.Color('#af864c'),
                              dofFocus: this.options.dofFocus,
                              dofAmount: this.options.dofAmount,
                              noise: this.options.noise,
                            })),
                          (this.thread = new $e.Mesh(
                            this.threadGeometry,
                            this.threadMaterial,
                          )),
                          (this.thread.renderOrder = 0),
                          this.object.add(this.thread);
                      },
                    },
                    {
                      key: 'setupParticles',
                      value: function () {
                        var e = this;
                        this.particlesGeometry = new $e.BufferGeometry();
                        var t = new Float32Array(
                          s.a.range(this.options.particlesAmount),
                        );
                        this.particlesGeometry.addAttribute(
                          'id',
                          new $e.BufferAttribute(t, 1),
                        );
                        var n = new Float32Array(
                          s.a.flatten(
                            s.a
                              .range(this.options.particlesAmount)
                              .map(function (t) {
                                var n = 1 / e.options.particlesAmount,
                                  i = Object(A.a)(
                                    t * n +
                                      Object(o.a)(
                                        Math.random(),
                                        0,
                                        1,
                                        0.9 * -n,
                                        0.9 * n,
                                      ),
                                    0,
                                    1,
                                  ),
                                  r = e.spline.getPoint(i);
                                return (
                                  (r.x +=
                                    (2 * Math.random() - 1) *
                                    e.options.randomness),
                                  (r.y +=
                                    (2 * Math.random() - 1) *
                                    e.options.randomness),
                                  (r.z +=
                                    (2 * Math.random() - 1) *
                                    e.options.randomness),
                                  r.toArray()
                                );
                              }),
                          ),
                        );
                        this.particlesGeometry.addAttribute(
                          'position',
                          new $e.BufferAttribute(n, 3),
                        ),
                          (this.particlesMaterial =
                            this.options.particlesMaterial ||
                            new Ma({
                              color: new $e.Color('#be8b42'),
                              dofFocus: this.options.dofFocus,
                              dofAmount: this.options.dofAmount,
                              resolution: this.options.resolution,
                              noise: this.options.noise,
                            })),
                          (this.particles = new $e.Points(
                            this.particlesGeometry,
                            this.particlesMaterial,
                          )),
                          (this.particles.renderOrder = 1),
                          this.object.add(this.particles);
                      },
                    },
                    {
                      key: 'setColor',
                      value: function (e) {
                        this.options.thread &&
                          this.threadMaterial.color.setStyle(e),
                          this.particlesMaterial.color.setStyle(e);
                      },
                    },
                    {
                      key: 'setO',
                      value: function (e) {
                        this.options.thread && (this.threadMaterial.opacity = e),
                          (this.particlesMaterial.opacity = e);
                      },
                    },
                    {
                      key: 'setParticleSizeMin',
                      value: function (e) {
                        this.particlesMaterial.size.setX(e);
                      },
                    },
                    {
                      key: 'setParticleSizeMax',
                      value: function (e) {
                        this.particlesMaterial.size.setY(e);
                      },
                    },
                    {
                      key: 'whileV',
                      value: function () {
                        this.particlesMaterial.time += 0.2;
                      },
                    },
                  ]) && au(n.prototype, i),
                  r && au(n, r),
                  t
                );
              })()),
            ) || nu,
          pu = function (e, t, n) {
            var i = new $e.Vector3(0, 0, 0.5),
              r = $e.Math.degToRad(t.fov),
              o =
                ((n = n || i.sub(t.position).normalize()),
                (e - t.position.z) / n.z),
              a = 2 * Math.tan(r / 2) * o;
            return [a * t.aspect, a];
          };
        function hu(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        var fu = (function () {
          function e(t, n, i, r, o) {
            !(function (e, t) {
              if (!(e instanceof t))
                throw new TypeError('Cannot call a class as a function');
            })(this, e),
              (this.imageWidth = n),
              (this.imageHeight = i),
              (this.frameWidth = r),
              (this.frameHeight = o),
              (this.framesTotal = t),
              (this.framesPerRow = Math.floor(this.imageWidth / this.frameWidth)),
              (this.framesPerSpritesheet =
                this.framesPerRow *
                Math.floor(this.imageHeight / this.frameHeight)),
              (this.numSpritesheets = Math.ceil(
                this.framesTotal / this.framesPerSpritesheet,
              ));
          }
          var t, n, i;
          return (
            (t = e),
            (n = [
              {
                key: 'getDataByFrame',
                value: function (e) {
                  for (var t, n = 0, i = 0; i < this.numSpritesheets; i += 1) {
                    if (e >= n && e <= n + this.framesPerSpritesheet - 1) {
                      var r = e - n,
                        o = r % this.framesPerRow,
                        a = Math.floor(r / this.framesPerRow);
                      t = {
                        index: i,
                        frame: r,
                        x: o * this.frameWidth,
                        y: a * this.frameHeight,
                      };
                      break;
                    }
                    n += this.framesPerSpritesheet;
                  }
                  return t;
                },
              },
            ]) && hu(t.prototype, n),
            i && hu(t, i),
            e
          );
        })();
        function du(e) {
          return e.concat().reverse();
        }
        var vu,
          mu = function (e, t, n, i, r) {
            var o = r;
            void 0 === o && (o = t < n ? 1 : -1);
            var a = (function (e) {
                for (var t = [], n = 0; n < e; n += 1) t.push(n);
                return t;
              })(e),
              s = (a = -1 === o ? du(a) : a).indexOf(t),
              u = a.indexOf(n);
            return (
              (a = (function (e, t, n) {
                var i = e;
                return (i =
                  t >= n ? i.slice(t).concat(i.slice(0, n)) : i.slice(t, n));
              })(a, s, u + 1)),
              (a = i ? a.concat(du(a.slice(1, -1))) : a)
            );
          };
        function gu(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        var bu,
          yu =
            ((function (e, t, n, i, r) {
              var o = {};
              Object.keys(i).forEach(function (e) {
                o[e] = i[e];
              }),
                (o.enumerable = !!o.enumerable),
                (o.configurable = !!o.configurable),
                ('value' in o || o.initializer) && (o.writable = !0),
                (o = n
                  .slice()
                  .reverse()
                  .reduce(function (n, i) {
                    return i(e, t, n) || n;
                  }, o)),
                r &&
                  void 0 !== o.initializer &&
                  ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                  (o.initializer = void 0)),
                void 0 === o.initializer &&
                  (Object.defineProperty(e, t, o), (o = null));
            })(
              (vu = (function () {
                function e(t, n) {
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, e),
                    (this.timerId = void 0),
                    (this.fps = void 0),
                    (this.handler = void 0),
                    (this.startTime = void 0),
                    (this.interval = void 0),
                    (this.maxDelta = 0),
                    (this.startTime = 0),
                    (this.ticks = 0),
                    (this.interval = 50),
                    (this.lastTime = 0),
                    (this.times = []),
                    (this.tickTimes = []),
                    (this.fps = t),
                    (this.handler = n),
                    (this.startTime = this.getTimeSinceStart()),
                    this.times.push(this.lastTime),
                    (this.interval = 1e3 / this.fps),
                    this.setupTick();
                }
                var t, n, i;
                return (
                  (t = e),
                  (n = [
                    {
                      key: 'destroy',
                      value: function () {
                        cancelAnimationFrame(this.timerId),
                          (this.handler = void 0),
                          (this.timerId = void 0),
                          (this.times = void 0),
                          (this.tickTimes = void 0),
                          (this.startTime = 0),
                          (this.lastTime = 0),
                          (this.ticks = 0);
                      },
                    },
                    {
                      key: 'getMeasuredTickTime',
                      value: function (e) {
                        var t = e,
                          n = 0,
                          i = this.tickTimes;
                        if (!i || i.length < 1) return -1;
                        t = Math.min(i.length, t || this.fps);
                        for (var r = 0; r < t; r += 1) n += i[r];
                        return n / t;
                      },
                    },
                    {
                      key: 'getMeasuredFPS',
                      value: function (e) {
                        var t = e,
                          n = this.times;
                        return !n || n.length < 2
                          ? -1
                          : ((t = Math.min(n.length - 1, t || this.fps)),
                            1e3 / ((n[0] - n[t]) / t));
                      },
                    },
                    {
                      key: 'getTime',
                      value: function () {
                        return this.startTime ? this.getTimeSinceStart() : -1;
                      },
                    },
                    {
                      key: 'getEventTime',
                      value: function () {
                        return this.startTime
                          ? this.lastTime || this.startTime
                          : -1;
                      },
                    },
                    {
                      key: 'getTicks',
                      value: function () {
                        return this.ticks;
                      },
                    },
                    {
                      key: 'handleSynch',
                      value: function () {
                        (this.timerId = null),
                          this.setupTick(),
                          this.getTimeSinceStart() - this.lastTime >=
                            0.97 * (this.interval - 1) && this.tick();
                      },
                    },
                    {
                      key: 'setupTick',
                      value: function () {
                        null == this.timerId &&
                          (this.timerId = requestAnimationFrame(
                            this.handleSynch,
                          ));
                      },
                    },
                    {
                      key: 'tick',
                      value: function () {
                        var e = this.getTimeSinceStart(),
                          t = e - this.lastTime;
                        for (
                          this.lastTime = e,
                            this.ticks += 1,
                            this.tickTimes.unshift(this.getTimeSinceStart() - e);
                          this.tickTimes.length > 100;
  
                        )
                          this.tickTimes.pop();
                        for (this.times.unshift(e); this.times.length > 100; )
                          this.times.pop();
                        var n = {},
                          i = this.maxDelta;
                        (n.delta = i && t > i ? i : t),
                          (n.time = e),
                          (n.step = Math.round(n.delta / (1e3 / this.fps))),
                          this.handler(n);
                      },
                    },
                    {
                      key: 'getTimeSinceStart',
                      value: function () {
                        return performance.now() - this.startTime;
                      },
                    },
                  ]) && gu(t.prototype, n),
                  i && gu(t, i),
                  e
                );
              })()).prototype,
              'handleSynch',
              [X.a],
              Object.getOwnPropertyDescriptor(vu.prototype, 'handleSynch'),
              vu.prototype,
            ),
            vu),
          wu = {};
        function xu(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        var Pu,
          _u,
          ku =
            ((function (e, t, n, i, r) {
              var o = {};
              Object.keys(i).forEach(function (e) {
                o[e] = i[e];
              }),
                (o.enumerable = !!o.enumerable),
                (o.configurable = !!o.configurable),
                ('value' in o || o.initializer) && (o.writable = !0),
                (o = n
                  .slice()
                  .reverse()
                  .reduce(function (n, i) {
                    return i(e, t, n) || n;
                  }, o)),
                r &&
                  void 0 !== o.initializer &&
                  ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                  (o.initializer = void 0)),
                void 0 === o.initializer &&
                  (Object.defineProperty(e, t, o), (o = null));
            })(
              (bu = (function () {
                function e(t) {
                  var n =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 60,
                    i =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : function () {},
                    r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : function () {},
                    o =
                      arguments.length > 4 && void 0 !== arguments[4]
                        ? arguments[4]
                        : function () {},
                    a =
                      !(arguments.length > 5 && void 0 !== arguments[5]) ||
                      arguments[5];
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, e),
                    (this.onFrame = void 0),
                    (this.onEnd = void 0),
                    (this.autoUpdate = void 0),
                    (this.fps = void 0),
                    (this.totalFrames = void 0),
                    (this.endFrame = void 0),
                    (this.range = void 0),
                    (this.removeTickerHandler = void 0),
                    (this.range = void 0),
                    (this.direction = 1),
                    (this.currentFrame = 0),
                    (this.currentLoop = 0),
                    (this.maxLoops = 0),
                    (this.currentIndex = 0),
                    (this.startFrame = 0),
                    (this.isPaused = !0),
                    (this.isEnded = !1),
                    (this.isFirstTick = !1),
                    (this.isTicking = !1),
                    (this.autoReverse = !1),
                    (this.isInfiniteLoop = !1),
                    (this.onFrame = i),
                    (this.onLoop = r),
                    (this.onEnd = o),
                    (this.autoUpdate = a),
                    (this.fps = n),
                    (this.totalFrames = t),
                    (this.endFrame = t - 1),
                    (this.range = this.createRangeFromState());
                }
                var t, n, i;
                return (
                  (t = e),
                  (n = [
                        /******** CONTROLS  ***************************************************************************************************************************** */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                    {
                      key: 'play',
                      value: function (e, t, n) {
                        var i =
                            arguments.length > 3 &&
                            void 0 !== arguments[3] &&
                            arguments[3],
                          r =
                            arguments.length > 4 &&
                            void 0 !== arguments[4] &&
                            arguments[4];
                        if (!qe(t, 0, this.totalFrames - 1))
                          throw new Error('Start frame is out of bounds');
                        if (!qe(n, 0, this.totalFrames - 1))
                          throw new Error('End frame is out of bounds');
                        (this.isPaused = !1),
                          (this.isEnded = !1),
                          (this.maxLoops = e),
                          (this.startFrame = t),
                          (this.endFrame = n),
                          (this.autoReverse = i),
                          (this.currentFrame = t),
                          (this.currentLoop = 0),
                          (this.direction = r ? 1 : t > n ? -1 : 1),
                          (this.range = this.createRangeFromState()),
                          (this.currentIndex = 0),
                          (this.isInfiniteLoop = 0 === e),
                          (this.isFirstTick = !0),
                          this.startTicker();
                      },
                    },
                    {
                      key: 'reverse',
                      value: function () {
                        if (!this.isEnded) {
                          var e = this.startFrame,
                            t = this.currentIndex <= 0.5 * this.range.length;
                          (this.startFrame = this.endFrame),
                            (this.endFrame = e),
                            (this.direction *= -1),
                            (this.range = this.createRangeFromState()),
                            (this.currentIndex = t
                              ? this.range.indexOf(this.currentFrame)
                              : this.range.lastIndexOf(this.currentFrame));
                        }
                      },
                    },
                    {
                      key: 'pause',
                      value: function () {
                        (this.isFirstTick = !1),
                          (this.isPaused = !0),
                          this.stopTicker();
                      },
                    },
                    {
                      key: 'pauseAtFrame',
                      value: function (e) {
                        if (!qe(e, 0, this.totalFrames - 1))
                          throw new Error('Frame is out of bounds');
                      },
                    },
                    {
                      key: 'resume',
                      value: function () {
                        this.isPaused &&
                          !this.isEnded &&
                          ((this.isPaused = !1), this.startTicker());
                      },
                    },
                    {
                      key: 'setFPS',
                      value: function (e) {
                        e !== this.fps &&
                          ((this.fps = e),
                          this.isTicking &&
                            (this.stopTicker(), this.startTicker()));
                      },
                    },
                    { key: 'update', value: function () {} },
                    {
                      key: 'getCurrentFrame',
                      value: function () {
                        return this.currentFrame;
                      },
                    },
                    {
                      key: 'startTicker',
                      value: function () {
                        this.isTicking ||
                          ((this.isTicking = !0),
                          (this.removeTickerHandler = (function (e, t) {
                            var n,
                              i = wu[e];
                            if (i)
                              (n = { startTime: i.ticker.getTime(), handler: t }),
                                i.handlers.push(n);
                            else {
                              var r = [];
                              (i = {
                                ticker: new yu(e, function (e) {
                                  r.forEach(function (t) {
                                    t.handler({
                                      delta: e.delta,
                                      step: e.step,
                                      time: e.time - t.startTime,
                                    });
                                  });
                                }),
                                handlers: r,
                              }),
                                (wu[e] = i),
                                (n = { startTime: 0, handler: t }),
                                i.handlers.push(n);
                            }
                            return function () {
                              i &&
                                (i.handlers.splice(i.handlers.indexOf(n), 1),
                                0 === i.handlers.length &&
                                  (i.ticker.destroy(),
                                  (i.ticker = null),
                                  (wu[e] = null)));
                            };
                          })(this.fps, this.onTick)));
                      },
                    },
                    {
                      key: 'stopTicker',
                      value: function () {
                        this.isTicking &&
                          ((this.isTicking = !1),
                          this.removeTickerHandler(),
                          (this.removeTickerHandler = void 0));
                      },
                    },
                    {
                      key: 'onTick',
                      value: function (e) {
                        var t = e.step,
                          n = this.isFirstTick;
                        if (((this.isFirstTick = !1), !n)) {
                          if (
                            !qe(
                              this.currentIndex + t,
                              0,
                              this.range.length - 1,
                            ) &&
                            ((this.currentLoop += 1),
                            this.onLoop(),
                            this.currentLoop === this.maxLoops &&
                              !this.isInfiniteLoop)
                          )
                            return void this.end();
                          this.updateFrame(t);
                        }
                        this.onFrame(this.currentFrame);
                      },
                    },
                    {
                      key: 'updateFrame',
                      value: function (e) {
                        (this.currentIndex =
                          (this.currentIndex + e) % this.range.length),
                          (this.currentFrame = this.range[this.currentIndex]);
                      },
                    },
                    {
                      key: 'end',
                      value: function () {
                        this.stopTicker();
                        var e = this.currentIndex;
                        (this.currentIndex = this.range.length - 1),
                          e !== this.currentIndex &&
                            ((this.currentFrame = this.range[this.currentIndex]),
                            this.onFrame(this.currentFrame)),
                          (this.isEnded = !0),
                          this.onEnd();
                      },
                    },
                    {
                      key: 'createRangeFromState',
                      value: function () {
                        return mu(
                          this.totalFrames,
                          this.startFrame,
                          this.endFrame,
                          this.autoReverse,
                          this.direction,
                        );
                      },
                    },
                  ]) && xu(t.prototype, n),
                  i && xu(t, i),
                  e
                );
              })()).prototype,
              'onTick',
              [X.a],
              Object.getOwnPropertyDescriptor(bu.prototype, 'onTick'),
              bu.prototype,
            ),
            bu),
          Ou = n(81);
        function Su(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Tu(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var Au,
          Mu,
          ju,
          Fu =
            ji(
              'started',
              'start',
              'stop',
              Au,
            )(
              (Tu(
                (_u = (function () {
                  function e(t) {
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, e);
                    var n = (this.data = t.data);
                    (this.name = this.data.name),
                      (this.textures = t.textures),
                      (this.cbRenderFrame = t.cbRenderFrame),
                      (this.cbPlay = t.cbPlay),
                      (this.cbLoop = t.cbLoop),
                      (this.cbEnd = t.cbEnd),
                      (this.fW = n.frameWidth),
                      (this.fH = n.frameHeight),
                      (this.frame = null),
                      (this.frameRendered = null);
                    var i = this.textures[0].image.width,
                      r = this.textures[0].image.height;
                    (this.spritesheet = new fu(
                      n.framesTotal,
                      i,
                      r,
                      this.fW,
                      this.fH,
                    )),
                      (this.sequence = new ku(
                        n.framesTotal,
                        n.fps,
                        this.onFrame,
                        this.onLoop,
                        this.onEnd,
                      ));
                  }
                  var t, n, i;
                  return (
                    (t = e),
                    (n = [
                      {
                        key: 'start',
                        value: function () {
                          this.sequence.resume();
                        },
                      },
                      {
                        key: 'stop',
                        value: function () {
                          this.sequence.pause();
                        },
                      },
                      {
                        key: 'destroy',
                        value: function () {
                          (this.textures = null),
                            this.off(),
                            this.sequence.pause();
                        },
                      },
                      {
                        key: 'playSequence',
                        value: function (e, t) {
                          var n,
                            i,
                            r =
                              ((n = this.data.sequences),
                              (i = { name: e }),
                              n.find(function (e) {
                                return Object.keys(i).every(function (t) {
                                  return e[t] === i[t];
                                });
                              })),
                            o = void 0 !== r.autoReverse && r.autoReverse,
                            a = void 0 !== r.direction ? r.direction : 1;
                          this.sequence.play(
                            r.loops,
                            r.startFrame,
                            r.endFrame,
                            o,
                            a,
                          ),
                            (this.sequence._currentIndex = t || 0),
                            (this.currSequence = e),
                            this.cbPlay && this.cbPlay(e);
                        },
                      },
                      {
                        key: 'reverse',
                        value: function () {
                          this.sequence.reverse();
                        },
                      },
                      {
                        key: 'setFrame',
                        value: function (e) {
                          this.render(e);
                        },
                      },
                      {
                        key: 'getFrameData',
                        value: function (e) {
                          var t = this.spritesheet.getDataByFrame(e);
                          if (void 0 === t)
                            throw new Error("Couldn't find data., frame: " + e);
                          return t;
                        },
                      },
                      {
                        key: 'getCurrentSequence',
                        value: function () {
                          return this.currSequence;
                        },
                      },
                      {
                        key: 'onFrame',
                        value: function (e) {
                          (this.frame = e), this._started && this.render(e);
                        },
                      },
                      {
                        key: 'onLoop',
                        value: function () {
                          this.cbLoop && this.cbLoop(this.currSequence);
                        },
                      },
                      {
                        key: 'onEnd',
                        value: function () {
                          this.cbEnd && this.cbEnd(this.currSequence);
                        },
                      },
                      {
                        key: 'update',
                        value: function () {
                          this.sequence.update();
                        },
                      },
                      {
                        key: 'render',
                        value: function (e) {
                          this.frameRendered = e;
                          var t = this.getFrameData(this.frameRendered),
                            n =
                              (t.frame,
                              this.data.spritesheets[t.index],
                              Object(Ou.b)(t.x, t.y, this.fW, this.fH));
                          this.cbRenderFrame({
                            frameRect: n,
                            frameNum: t.frame,
                            frameTextureIndex: t.index,
                          });
                        },
                      },
                    ]) && Su(t.prototype, n),
                    i && Su(t, i),
                    e
                  );
                })()).prototype,
                'onFrame',
                [X.a],
                Object.getOwnPropertyDescriptor(_u.prototype, 'onFrame'),
                _u.prototype,
              ),
              Tu(
                _u.prototype,
                'onLoop',
                [X.a],
                Object.getOwnPropertyDescriptor(_u.prototype, 'onLoop'),
                _u.prototype,
              ),
              Tu(
                _u.prototype,
                'onEnd',
                [X.a],
                Object.getOwnPropertyDescriptor(_u.prototype, 'onEnd'),
                _u.prototype,
              ),
              (Pu = _u)),
            ) || Pu,
          Ru = {
            fps: 30,
            framesTotal: 1200,
            frameWidth: 100,
            frameHeight: 100,
            spritesheets: [
              { id: 'icons-0', framesTotal: 400 },
              { id: 'icons-1', framesTotal: 400 },
              { id: 'icons-2', framesTotal: 400 },
            ],
            sequences: [
              { name: 'disease-in', startFrame: 0, endFrame: 48, loops: 1 },
              { name: 'disease-loop', startFrame: 48, endFrame: 149, loops: 0 },
              { name: 'drought-in', startFrame: 150, endFrame: 240, loops: 1 },
              { name: 'drought-loop', startFrame: 240, endFrame: 299, loops: 0 },
              {
                name: 'field-density-in',
                startFrame: 300,
                endFrame: 354,
                loops: 1,
              },
              {
                name: 'field-density-loop',
                startFrame: 354,
                endFrame: 449,
                loops: 0,
              },
              { name: 'soil-in', startFrame: 450, endFrame: 503, loops: 1 },
              { name: 'soil-loop', startFrame: 503, endFrame: 599, loops: 0 },
              { name: 'wind-in', startFrame: 600, endFrame: 637, loops: 1 },
              { name: 'wind-loop', startFrame: 637, endFrame: 749, loops: 0 },
              { name: 'dna', startFrame: 751, endFrame: 988, loops: 0 },
            ],
          };
        function Cu(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Eu(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Lu(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Iu(e) {
          return (Iu = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Du(e, t) {
          return (Du =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Uu,
          zu = Object(u.a)(),
          Nu =
            Object(it.a)(rt)(
              ((function (e, t, n, i, r) {
                var o = {};
                Object.keys(i).forEach(function (e) {
                  o[e] = i[e];
                }),
                  (o.enumerable = !!o.enumerable),
                  (o.configurable = !!o.configurable),
                  ('value' in o || o.initializer) && (o.writable = !0),
                  (o = n
                    .slice()
                    .reverse()
                    .reduce(function (n, i) {
                      return i(e, t, n) || n;
                    }, o)),
                  r &&
                    void 0 !== o.initializer &&
                    ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                    (o.initializer = void 0)),
                  void 0 === o.initializer &&
                    (Object.defineProperty(e, t, o), (o = null));
              })(
                (ju = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = Lu(
                        this,
                        (e = Iu(t)).call.apply(e, [this].concat(r)),
                      )).options = {
                        layer: 1,
                        dir: 1,
                        renderOrder: 0,
                        id: 'dna',
                      }),
                      (n.props = {
                        active: !1,
                        s: 0,
                        beam: !1,
                        size: [
                          zu,
                          function (e) {
                            return e.viewport.scale * (c.a.isMobile ? 200 : 120);
                          },
                        ],
                        worldRotation: 0,
                      }),
                      (n.anim = { dur: 2, delay: 0 }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && Du(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e,
                            t =
                              ((e = regeneratorRuntime.mark(function e() {
                                var t, n;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          (this.tweens = { beamProgress: -1 }),
                                            (this.textures = Ru.spritesheets.map(
                                              function (e) {
                                                return Qn(e.id) || Gn(e.id);
                                              },
                                            )),
                                            (t = this.options.selected
                                              ? this.options.colors.highlight
                                              : this.options.colors.base),
                                            (n = new $e.CircleBufferGeometry(
                                              0.5,
                                              32,
                                            )),
                                            (this.mesh = new $e.Mesh(
                                              et,
                                              new $e.ShaderMaterial({
                                                uniforms: {
                                                  uAlpha: { value: 1 },
                                                  uRotation: { value: 0 },
                                                  uInverseWorldRotation: {
                                                    value: 0,
                                                  },
                                                  uProgress: { value: 1 },
                                                  uStrokeWidth: {
                                                    value:
                                                      2 *
                                                      zu.state.viewport
                                                        .pixelRatio,
                                                  },
                                                  uSize: {
                                                    value: this.props.size,
                                                  },
                                                  uColor: {
                                                    value: new $e.Color(t),
                                                  },
                                                  uMobile: {
                                                    value: c.a.isMobile,
                                                  },
                                                  uResolution: {
                                                    value: this.options
                                                      .resolution,
                                                  },
                                                  uTextureFrame: {
                                                    type: 'v4',
                                                    value: new $e.Vector4(),
                                                  },
                                                  uTextureIdx: {
                                                    type: 'f',
                                                    value: 0,
                                                  },
                                                  tDiffuses: {
                                                    type: 'tv',
                                                    value: this.textures,
                                                  },
                                                },
                                                transparent: !0,
                                                vertexShader: Je,
                                                fragmentShader:
                                                  '#define GLSLIFY 1\nuniform float uSize;\nuniform float uStrokeWidth;\nuniform float uRotation;\nuniform float uInverseWorldRotation;\nuniform float uProgress;\nuniform float uAlpha;\nuniform vec3 uColor;\nuniform vec2 uResolution;\nuniform bool uMobile;\n\nuniform sampler2D tDiffuses[3];\nuniform vec4 uTextureFrame;\nuniform float uTextureIdx;\n\nvarying vec2 vUv;\n\n#define PI 3.141592653589793\nfloat createRing(vec2 uv, float strokeWidth, float s) {\n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(uv - 0.5) * scale;\n    \n    // Calculate edge antialias feather\n    float distance = length(center);\n    float edgeFeather = fwidth(distance) * feather;\n\n    // Calculate fixed stroke width regardless of scale\n    float dx = dFdx(uv.x);\n    strokeWidth = dx * strokeWidth;\n  \n    float innerRadius = radius - strokeWidth;\n    float outerRadius = radius;\n    float value = smoothstep(innerRadius - edgeFeather, innerRadius, distance) * \n                  smoothstep(outerRadius, outerRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s, float alignStroke) {\n    // alignStroke values: 0 = innner, 0.5 = center,  1 = outer\n    \n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeWidth = dDistance * feather;\n    float innerEdge = mix(1.0, 0.0, alignStroke);\n    float outerEdge = mix(0.0, 1.0, alignStroke);\n\n    // Apply stroke width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float dxStrokeWidth = dx * strokeWidth;\n    float innerRadius = radius - dxStrokeWidth * innerEdge;\n    float outerRadius = radius + dxStrokeWidth * outerEdge;\n    float value = smoothstep(innerRadius - edgeWidth * .5, innerRadius + edgeWidth * .5, distance) * (1. - smoothstep(outerRadius - edgeWidth * .5, outerRadius + edgeWidth * .5, distance));\n\n    return value;\n}\n\nfloat createGradient(vec2 point) {\n    float angleFromPoint = atan(point.x, point.y);\n    return (angleFromPoint + PI) / (PI * 2.0);\n}\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 scaleUv(vec2 uv, float scale) {\n    uv -= 0.5;\n    uv *= 1.0 / scale;\n    uv += 0.5;\n\n    return uv;\n}\n\n    \nfloat toRadians(float deg) {\n\treturn deg * (3.141592653589793 / 180.0);\n}\n\nvec4 getSampleFromArray(sampler2D textures[3], int ndx, vec2 uv) {\n    vec4 color;\n    if (ndx == 0) {\n        color = texture2D(tDiffuses[0], uv);\n    } else if (ndx == 1) {\n        color = texture2D(tDiffuses[1], uv);\n    } else if (ndx == 2) {\n        color = texture2D(tDiffuses[2], uv);\n    }\n    return color;\n}\n\nvoid main() {\n\tvec2 uv = vUv;\n    uv = rotateUV(uv, toRadians(uRotation));\n    \n    vec2 screenuv = gl_FragCoord.xy / uResolution;\n    float mask = mix(0.2, 1.0, smoothstep(1.0, 0.7, screenuv.y));\n    if (!uMobile) mask = 1.0;\n\n    vec4 frame = uTextureFrame / 2048.0;\n\n    float uvScale = 0.95;\n\n    vec2 uvMask = scaleUv(vUv, uvScale);\n    vec2 uvSprite = scaleUv(vUv, uvScale);\n    uvSprite.x = frame.x + ( uvSprite.x * frame.z );\n    uvSprite.y = ( 1.0 - frame.w ) - frame.y + ( uvSprite.y * frame.w );\n\n    vec4 tOutput = getSampleFromArray(tDiffuses, int(uTextureIdx), uvSprite);\n    tOutput.a *= step(0.0, uvMask.x) * (1.0 - step(1.0, uvMask.x)) * step(0.0, uvMask.y) * (1.0 - step(1.0, uvMask.y));\n\n    vec2 centerPoint = vec2(-0.5);\n\n    vec2 ringUv = rotateUV(vUv, uInverseWorldRotation);\n    float ring = createRing(ringUv, uStrokeWidth, 1.0);\n    float gradient = createGradient(vec2(uv.x - 0.5, uv.y - 0.5));\n\n    float progressRing = (1.0 - step(uProgress, gradient)) * ring;\n    float baseRing = (1.0 - step(uProgress, gradient)) * ring * 0.2;\n\n    float alpha = progressRing; //ring * uAlpha;// baseRing;// + progressRing;\n\n    vec4 outlineOutput = vec4(uColor, alpha);\n    vec4 finalOutput = mix(tOutput, outlineOutput, alpha);\n    // vec4 finalOutput = tColor + vec4(uColor, alpha);\n\n    gl_FragColor = finalOutput;\n    gl_FragColor.a *= uAlpha * mask;\n    \n    // gl_FragColor = vec4(vec3(mask), 1.0);\n    // gl_FragColor = vec4(vec3(1.0, 0.0,0.0), 0.5);\n}',
                                              }),
                                            )),
                                            (this.mesh.material.type =
                                              'InfographicRingIconMaterial'),
                                            (this.mesh.material.extensions.derivatives = !0),
                                            this.mesh.layers.set(
                                              this.options.layer,
                                            ),
                                            (this.mesh.renderOrder = this.options.renderOrder),
                                            (this.mesh.renderOrder = 1),
                                            (this.mesh.position.z = 1),
                                            this.object.add(this.mesh),
                                            (this.mask = new $e.Mesh(
                                              n,
                                              tt.clone(),
                                            )),
                                            (this.mask.material.opacity = 0),
                                            (this.mask.position.z = 1),
                                            this.mask.layers.set(
                                              this.options.layer,
                                            ),
                                            this.object.add(this.mask),
                                            this.options.selected &&
                                              ((this.beam = new $e.Mesh(
                                                et,
                                                new $e.ShaderMaterial({
                                                  uniforms: {
                                                    uProgress: {
                                                      value: this.tweens
                                                        .beamProgress,
                                                    },
                                                    uColor: {
                                                      value: new $e.Color(
                                                        this.options.colors.highlight,
                                                      ),
                                                    },
                                                  },
                                                  transparent: !0,
                                                  vertexShader: Je,
                                                  fragmentShader:
                                                    '#define GLSLIFY 1\nuniform vec3 uColor;\nuniform float uProgress;\n\nvarying vec2 vUv;\n\nvoid main() {\n\tvec2 uv = vUv;\n\n\tfloat uvOffset = uProgress;\n\tuv.y += uvOffset;\n\n\tfloat alpha = mix(0.2, 1.0, smoothstep(0.0, 0.5, vUv.y));\n\talpha *= step(0.0, uv.y) * step(uv.y, 1.0);\n    \n    // gl_FragColor = vec4(uvMask, 0.0, 1.0);\n    gl_FragColor = vec4(uColor, alpha);\n}',
                                                }),
                                              )),
                                              (this.beam.material.type =
                                                'InfographicRingIconBeamMaterial'),
                                              this.beam.layers.set(
                                                this.options.layer,
                                              ),
                                              (this.beam.renderOrder = 1),
                                              this.object.add(this.beam)),
                                            this.setupAnimation(),
                                            this.playAnimation();
                                        case 20:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              })),
                              function () {
                                var t = this,
                                  n = arguments;
                                return new Promise(function (i, r) {
                                  var o = e.apply(t, n);
                                  function a(e) {
                                    Cu(o, i, r, a, s, 'next', e);
                                  }
                                  function s(e) {
                                    Cu(o, i, r, a, s, 'throw', e);
                                  }
                                  a(void 0);
                                });
                              });
                          return function () {
                            return t.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setWorldRotation',
                        value: function (e) {
                          this.mesh.material.uniforms.uInverseWorldRotation.value = -e;
                        },
                      },
                      {
                        key: 'setupAnimation',
                        value: function () {
                          this.spriteAnim = new Fu({
                            data: Ru,
                            textures: this.textures,
                            cbLoop: this.onAnimLoop,
                            cbEnd: this.onAnimEnd,
                            cbRenderFrame: this.onFrameRender,
                          });
                        },
                      },
                      {
                        key: 'playAnimation',
                        value: function () {
                          this.spriteAnim.playSequence(this.options.id),
                            this.spriteAnim.stop();
                        },
                      },
                      {
                        key: 'onFrameRender',
                        value: function (e) {
                          var t = e.frameRect,
                            n = e.frameTextureIndex;
                          this.mesh.material.uniforms.uTextureFrame.value.set(
                            t.x,
                            t.y,
                            t.width,
                            t.height,
                          ),
                            (this.mesh.material.uniforms.uTextureIdx.value = n);
                        },
                      },
                      {
                        key: 'onActive',
                        value: function () {
                          this.spriteAnim.start();
                          var e = this.anim,
                            t = e.dur,
                            n = e.delay;
                          L.b.killTweensOf(this.props, { s: !0 }),
                            L.b.to(this.props, t, {
                              s: 1,
                              delay: n,
                              ease: 'easeInOutQuart',
                            });
                        },
                      },
                      {
                        key: 'offActive',
                        value: function () {
                          this.spriteAnim.stop();
                          var e = this.anim,
                            t = e.dur,
                            n = e.delay;
                          L.b.killTweensOf(this.props, { s: !0 }),
                            L.b.to(this.props, t, {
                              s: 0,
                              delay: n,
                              ease: 'easeInOutQuart',
                            });
                        },
                      },
                      {
                        key: 'onBeam',
                        value: function () {
                          var e = this;
                          this.beam &&
                            (L.b.killTweensOf(this.tweens),
                            L.b.fromTo(
                              this.tweens,
                              1,
                              { beamProgress: -1 },
                              {
                                beamProgress: 0,
                                ease: 'easeInQuart',
                                onComplete: function () {
                                  L.b.to(e.tweens, 1, {
                                    beamProgress: 1,
                                    ease: 'easeOutQuart',
                                    delay: 0.5,
                                  });
                                },
                              },
                            ));
                        },
                      },
                      {
                        key: 'setProgress',
                        value: function (e) {
                          e > 0.5 && this.options.selected && 1 === this.props.s
                            ? (this.props.beam = !0)
                            : (this.props.beam = !1);
                        },
                      },
                      {
                        key: 'whileActive',
                        value: function () {
                          if (
                            ((this.mesh.material.uniforms.uAlpha.value = this.props.alpha),
                            this.beam)
                          ) {
                            var e = 2 / this.props.ringScale,
                              t =
                                (this.props.radiusFromCenter -
                                  this.props.cornRingRadius) /
                                this.props.ringScale;
                            this.beam.scale.set(e, t, 1),
                              (this.beam.position.y = 0.5 * -t),
                              (this.beam.material.uniforms.uProgress.value = this.tweens.beamProgress);
                          }
                        },
                      },
                      {
                        key: 'setSize',
                        value: function (e) {
                          this.mesh.scale.setScalar(e),
                            (this.mesh.material.uniforms.uSize.value = e),
                            this.mask.scale.setScalar(1.1 * e);
                        },
                      },
                    ]) && Eu(n.prototype, i),
                    r && Eu(n, r),
                    t
                  );
                })()).prototype,
                'onFrameRender',
                [X.a],
                Object.getOwnPropertyDescriptor(ju.prototype, 'onFrameRender'),
                ju.prototype,
              ),
              (Mu = ju)),
            ) || Mu;
        function Bu(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Vu(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Bu(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Bu(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Yu(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Hu(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Xu(e) {
          return (Xu = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Gu(e, t) {
          return (Gu =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Wu = Object(u.a)(),
          Qu =
            Object(it.a)(rt)(
              (Uu = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Hu(
                      this,
                      (e = Xu(t)).call.apply(e, [this].concat(r)),
                    )).options = { layer: 1, renderOrder: 1, dir: 1 }),
                    (n.props = {
                      beam: 0,
                      alpha: 0,
                      active: !1,
                      scale: 1,
                      progress: 0,
                      render: !1,
                      resolution: [
                        Wu,
                        function (e) {
                          return s.a.pick(
                            e.viewport,
                            'width',
                            'height',
                            'pixelRatio',
                            'scale',
                          );
                        },
                      ],
                      radius: function (e) {
                        return e.resolution.scale * (c.a.isMobile ? 800 : 600);
                      },
                    }),
                    (n.anim = { dur: 2, delay: 0 }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && Gu(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = Vu(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.tweens = { inProgress: 0 }),
                                        this.setupRing(),
                                        (e.next = 4),
                                        this.setupIcons()
                                      );
                                    case 4:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupRing',
                      value: function () {
                        (this.mesh = new $e.Mesh(
                          et,
                          new $e.ShaderMaterial({
                            uniforms: {
                              uAlpha: { value: 0 },
                              uInverseWorldRotation: { value: 0 },
                              uInProgress: { value: 0 },
                              uSize: { value: 0 },
                              uMobile: { value: c.a.isMobile },
                              uResolution: { value: this.options.resolution },
                              uStrokeWidth: {
                                value: 2 * Wu.state.viewport.pixelRatio,
                              },
                            },
                            transparent: !0,
                            vertexShader: Je,
                            fragmentShader:
                              '#define GLSLIFY 1\n#define PI 3.141592653589793\n\nuniform float uSize;\nuniform vec2 uResolution;\nuniform float uAlpha;\nuniform float uRotation;\nuniform float uStrokeWidth;\nuniform float uInProgress;\nuniform float uInverseWorldRotation;\nuniform bool uMobile;\n\nvarying vec2 vUv;\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat toRadians(float deg) {\n\treturn deg * (3.141592653589793 / 180.0);\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s) {\n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(uv - 0.5) * scale;\n    \n    // Calculate edge antialias feather\n    float distance = length(center);\n    float edgeFeather = fwidth(distance) * feather;\n\n    // Calculate fixed stroke width regardless of scale\n    float dx = dFdx(uv.x);\n    strokeWidth = dx * strokeWidth;\n  \n    float innerRadius = radius - strokeWidth;\n    float outerRadius = radius;\n    float value = smoothstep(innerRadius - edgeFeather, innerRadius, distance) * \n                  smoothstep(outerRadius, outerRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s, float alignStroke) {\n    // alignStroke values: 0 = innner, 0.5 = center,  1 = outer\n    \n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeWidth = dDistance * feather;\n    float innerEdge = mix(1.0, 0.0, alignStroke);\n    float outerEdge = mix(0.0, 1.0, alignStroke);\n\n    // Apply stroke width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float dxStrokeWidth = dx * strokeWidth;\n    float innerRadius = radius - dxStrokeWidth * innerEdge;\n    float outerRadius = radius + dxStrokeWidth * outerEdge;\n    float value = smoothstep(innerRadius - edgeWidth * .5, innerRadius + edgeWidth * .5, distance) * (1. - smoothstep(outerRadius - edgeWidth * .5, outerRadius + edgeWidth * .5, distance));\n\n    return value;\n}\n\nfloat createGradient(vec2 point) {\n    float angleFromPoint = atan(point.x, point.y);\n    return (angleFromPoint + PI) / (PI * 2.0);\n}\n\nvoid main() {\n    vec2 uv = vUv;\n    vec2 screenuv = gl_FragCoord.xy / uResolution;\n    float mask = mix(0.2, 1.0, smoothstep(1.0, 0.7, screenuv.y));\n    if (!uMobile) mask = 1.0;\n\n    uv = rotateUV(uv, toRadians(uRotation));\n\n    vec2 size = vec2(uSize);\n\n    vec2 ringUv = rotateUV(vUv, uInverseWorldRotation);\n    float ring = createRing(ringUv, uStrokeWidth, 1.0);\n    float gradient = createGradient(uv - 0.5);\n\n    float progressRing = (1.0 - step(uInProgress, gradient)) * ring;\n    float baseRing = (1.0 - step(uInProgress, gradient)) * ring * 0.2;\n    \n    vec3 color = vec3(1.0);\n    float alpha = progressRing * uAlpha * mask;\n    \n    gl_FragColor = vec4(color, alpha);\n    // gl_FragColor = vec4(vec3(mask), 1.0);\n    // gl_FragColor = vec4(0.0, screenuv.y, 0.0, 1.0);\n    // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n\n',
                          }),
                        )),
                          (this.mesh.material.type = 'InfographicRingMaterial'),
                          (this.mesh.material.extensions.derivatives = !0),
                          this.mesh.layers.set(this.options.layer),
                          (this.mesh.renderOrder = this.options.renderOrder),
                          this.object.add(this.mesh);
                      },
                    },
                    {
                      key: 'setupIcons',
                      value: (function () {
                        var e = Vu(
                          regeneratorRuntime.mark(function e() {
                            var t,
                              n,
                              i,
                              r = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      (this.icons = []),
                                        (t = eo(0, 2)),
                                        (n = regeneratorRuntime.mark(function e(
                                          n,
                                        ) {
                                          var i, o, a;
                                          return regeneratorRuntime.wrap(
                                            function (e) {
                                              for (;;)
                                                switch ((e.prev = e.next)) {
                                                  case 0:
                                                    return (
                                                      (i =
                                                        (n / 3) * 360 +
                                                        to(-20, 20)),
                                                      (o = n === t),
                                                      (e.next = 4),
                                                      new Nu().setup({
                                                        options: {
                                                          angle: i,
                                                          colors:
                                                            r.options.colors,
                                                          layer: r.options.layer,
                                                          resolution:
                                                            r.options.resolution,
                                                          selected: o,
                                                        },
                                                        props: {
                                                          alpha: [
                                                            r.store,
                                                            function (e) {
                                                              return e.alpha;
                                                            },
                                                          ],
                                                          progress: [
                                                            r.store,
                                                            function (e) {
                                                              return e.progress;
                                                            },
                                                          ],
                                                          ringScale: [
                                                            r.store,
                                                            function (e) {
                                                              return e.s;
                                                            },
                                                          ],
                                                          ringRadius: [
                                                            r.store,
                                                            function (e) {
                                                              return e.radius;
                                                            },
                                                          ],
                                                          cornRingRadius: [
                                                            r.store,
                                                            function (e) {
                                                              return e.cornRingRadius;
                                                            },
                                                          ],
                                                          radiusFromCenter: function (
                                                            e,
                                                          ) {
                                                            return (
                                                              e.ringScale *
                                                              e.ringRadius
                                                            );
                                                          },
                                                        },
                                                      })
                                                    );
                                                  case 4:
                                                    (a = e.sent).store.compute(
                                                      function (e) {
                                                        e.beam &&
                                                          1 === a.props.s &&
                                                          (r.props.beam += 1);
                                                      },
                                                    ),
                                                      r.object.add(a.object),
                                                      r.icons.push(a);
                                                  case 8:
                                                  case 'end':
                                                    return e.stop();
                                                }
                                            },
                                            e,
                                          );
                                        })),
                                        (i = 0);
                                    case 4:
                                      if (!(i < 3)) {
                                        e.next = 9;
                                        break;
                                      }
                                      return e.delegateYield(n(i), 't0', 6);
                                    case 6:
                                      (i += 1), (e.next = 4);
                                      break;
                                    case 9:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'onActive',
                      value: function () {
                        this.props.render = !0;
                        var e = this.anim,
                          t = e.dur,
                          n = e.delay;
                        this.icons.forEach(function (e) {
                          (e.anim.dur = t),
                            (e.anim.delay = n),
                            (e.props.active = !0);
                        }),
                          L.b.killTweensOf(this.tweens, { inProgress: !0 }),
                          L.b.to(this.tweens, t, {
                            inProgress: 1,
                            delay: n,
                            ease: 'easeInOutQuart',
                          });
                      },
                    },
                    {
                      key: 'offActive',
                      value: function () {
                        var e = this,
                          t = this.anim,
                          n = t.dur,
                          i = t.delay;
                        this.icons.forEach(function (e) {
                          (e.anim.dur = n),
                            (e.anim.delay = i),
                            (e.props.active = !1);
                        }),
                          L.b.killTweensOf(this.tweens, { inProgress: !0 }),
                          L.b.to(this.tweens, n, {
                            inProgress: 0,
                            delay: i,
                            ease: 'easeInOutQuart',
                            onComplete: function () {
                              e.props.render = !1;
                            },
                          });
                      },
                    },
                    {
                      key: 'whileRender',
                      value: function () {
                        var e = this,
                          t = this.props.progress,
                          n =
                            Object(o.a)(t, 0.1, 0.3, 0, 1, !0) *
                            Object(o.a)(t, 0.7, 1, 1, 0, !0);
                        (this.props.s = Object(Jr.a)(t, 0.1, 1)),
                          (this.props.alpha = n),
                          (this.mesh.material.uniforms.uAlpha.value =
                            0.5 * this.props.alpha),
                          (this.mesh.material.uniforms.uInProgress.value = this.tweens.inProgress),
                          (this.mesh.material.uniforms.uInverseWorldRotation.value = -this
                            .props.rZ),
                          this.icons.forEach(function (t) {
                            t.props.worldRotation = t.props.rZ + e.props.rZ;
                          });
                      },
                    },
                    {
                      key: 'setRadius',
                      value: function (e) {
                        var t = 2 * e;
                        this.mesh.scale.setScalar(t),
                          (this.mesh.material.uniforms.uSize.value = t),
                          this.icons.forEach(function (t) {
                            var n,
                              i,
                              r,
                              o,
                              a,
                              s =
                                ((n = 0),
                                (i = 0),
                                (r = e),
                                (o = t.options.angle),
                                (a = o),
                                !0 === !0 && (a = (Math.PI / 180) * o),
                                {
                                  x: n + r * Math.cos(a),
                                  y: i + r * Math.sin(a),
                                }),
                              u = Math.atan2(s.y, s.x) + Zn(-90);
                            (t.props.pX = s.x),
                              (t.props.pY = s.y),
                              (t.props.rZ = u);
                          });
                      },
                    },
                  ]) && Yu(n.prototype, i),
                  r && Yu(n, r),
                  t
                );
              })()),
            ) || Uu,
          qu = {
            vertexHooks: {
              uniforms: 'insertbefore:#include <common>\n',
              functions: 'insertafter:#include <clipping_planes_pars_vertex>\n',
              preTransform: 'insertafter:#include <begin_vertex>\n',
              postTransform: 'insertafter:#include <project_vertex>\n',
              preNormal: 'insertafter:#include <beginnormal_vertex>\n',
            },
            fragmentHooks: {
              uniforms: 'insertbefore:#include <common>\n',
              functions: 'insertafter:#include <clipping_planes_pars_fragment>\n',
              preFragColor:
                'insertbefore:gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n',
              postFragColor:
                'insertafter:gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n',
            },
          },
          Zu = null,
          Ku = function (e) {
            if (!Zu) {
              var t = {
                standard: $e.MeshStandardMaterial,
                basic: $e.MeshBasicMaterial,
                lambert: $e.MeshLambertMaterial,
                phong: $e.MeshPhongMaterial,
                depth: $e.MeshDepthMaterial,
                matcap: $e.MeshMatcapMaterial,
              };
              for (var n in ((Zu = {}), t))
                Zu[n] = {
                  ShaderClass: t[n],
                  ShaderLib: $e.ShaderLib[n],
                  Key: n,
                  Count: 0,
                  ModifiedName: function () {
                    return 'ModifiedMesh'
                      .concat(
                        this.Key[0].toUpperCase() + this.Key.slice(1),
                        'Material_',
                      )
                      .concat(++this.Count);
                  },
                  TypeCheck: 'isMesh'.concat(
                    n[0].toUpperCase() + n.slice(1),
                    'Material',
                  ),
                };
            }
            var i;
            if ('function' == typeof e) {
              for (var r in Zu)
                if (Zu[r].ShaderClass === e) {
                  i = Zu[r];
                  break;
                }
            } else i = Zu[e];
            if (!i) throw new Error('No Shader found to modify...');
            return i;
          },
          $u = function (e, t, n) {
            var i;
            for (var r in t)
              n[r] &&
                (i = /insert(before):(.*)|insert(after):(.*)|replace:(.*)/.exec(
                  t[r],
                )) &&
                (i[1]
                  ? (e = e.replace(i[2], n[r] + '\n' + i[2]))
                  : i[3]
                  ? (e = e.replace(i[4], i[4] + '\n' + n[r]))
                  : i[5] && (e = e.replace(i[5], n[r])));
            return e;
          },
          Ju = {
            modes: {},
            uniforms: { time: { value: 0, type: 'f' } },
            vertexShader: {
              uniforms:
                '\n            uniform float uTime;\n\n            varying vec2 vN;\n            \n            // varying vec3 vPos;\n            // varying vec4 vPosTransformed;\n        ',
              postTransform:
                '\n            // vPos = position;\n\n            vec4 p = vec4( position, 1. );\n\n            vec3 e = normalize( vec3( modelViewMatrix * p ) );\n            vec3 n = normalize( normalMatrix * normal );\n            \n            vec3 r = reflect( e, n );\n            float m = 2. * sqrt(\n                pow( r.x, 2. ) +\n                pow( r.y, 2. ) +\n                pow( r.z + 1., 2. )\n            );\n            vN = r.xy / m + .5;\n\n            // mat4 tfMatrix = mat4(-0.12727922061357855, 0, 0.12727922061357855, 0, 0, 0.18, 0, 0, -0.12727922061357855, 0, -0.12727922061357855, 0, 0.03054701294725885, 0.006624898687005043, 0.03054701294725885, 1);\n\n            // vPosTransformed = tfMatrix * vec4(position, 1.0);\n        ',
            },
            fragmentShader: {
              uniforms:
                '\n            uniform float uTime;\n\n            uniform sampler2D tMatCapMult;\n            uniform sampler2D tMatCapScreen;\n    \n            varying vec2 vN;\n           \n            // varying vec3 vPos;\n            // varying vec4 vPosTransformed;\n        ',
              functions:
                '\n\n            vec3 blendMultiply(vec3 base, vec3 blend) {\n                return base*blend;\n            }\n\n            vec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n                return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n            }\n\n            float blendScreen(float base, float blend) {\n                return 1.0-((1.0-base)*(1.0-blend));\n            }\n\n            vec3 blendScreen(vec3 base, vec3 blend) {\n                return vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\n            }\n\n\n            float blendColorBurn(float base, float blend) {\n                return (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n            }\n\n            vec3 blendColorBurn(vec3 base, vec3 blend) {\n                return vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\n            }\n\n            vec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n                return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n            }\n\n            float luma(vec3 color) {\n                return dot(color, vec3(0.299, 0.587, 0.114));\n            }\n        ',
              postFragColor:
                '\n\n            vec4 matcapMultColor = texture2D( tMatCapMult, uv );\n            matcapMultColor = matcapTexelToLinear( matcapMultColor );\n\n            vec4 matcapScreenColor = texture2D( tMatCapScreen, uv );\n            matcapScreenColor = matcapTexelToLinear( matcapScreenColor );\n\n            vec3 cColorBurn = vec3(0.27, 0.88, 0.97);\n            // vec3 cColorBurn = vec3(0.27, 0.88, 0.50);\n\n            outgoingLight = blendMultiply(diffuseColor.rgb, matcapMultColor.rgb);\n            outgoingLight = blendColorBurn(outgoingLight.rgb, cColorBurn.rgb, .3);\n            outgoingLight = blendScreen(outgoingLight.rgb, matcapScreenColor.rgb);\n            // outgoingLight = blendColorBurn(outgoingLight.rgb, cColorBurn.rgb, .3);\n            \n            gl_FragColor = vec4(outgoingLight, diffuseColor.a);\n        ',
            },
          };
        function el(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function tl(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function nl(e) {
          return (nl = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function il(e, t) {
          return (il =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var rl,
          ol = (function (e) {
            function t(e) {
              var n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t),
                ((e = Object.assign(
                  {},
                  {
                    map: null,
                    mapMatCapScreen: null,
                    mapMatCapMult: null,
                    opacity: 1,
                  },
                  e,
                )).paramsGUI = Object.assign(
                  {
                    shininess: 0.2,
                    emissiveIntensity: 0,
                    cColor: '#cecece',
                    cSpecular: '#ffffff',
                    cEmissive: '#000000',
                  },
                  e.paramsGUI,
                ));
              var i = Object.assign({}, e);
              delete i.mapMatCapScreen,
                delete i.mapMatCapMult,
                delete i.paramsGUI,
                delete i.hasGUI;
              var r = Ku('matcap'),
                o = qu.vertexHooks,
                a = qu.fragmentHooks,
                s = Object.assign({}, e.vertexHooks || {}, o),
                u = $u(r.ShaderLib.vertexShader, s, Ju.vertexShader || {}),
                l = Object.assign({}, e.fragmentHooks || {}, a),
                c = $u(r.ShaderLib.fragmentShader, l, Ju.fragmentShader || {}),
                p = {
                  tMatCapMult: { type: 't', value: e.mapMatCapMult },
                  tMatCapScreen: { type: 't', value: e.mapMatCapScreen },
                  uTime: { type: 'f', value: 0 },
                },
                h = Object.assign({}, r.ShaderLib.uniforms, p || {});
              return (
                ((n = tl(
                  this,
                  nl(t).call(this, Object.assign({}, i)),
                )).bumpScale = 0.03),
                (n.vertexShader = u),
                (n.fragmentShader = c),
                (n.uniforms = h),
                (n.type = 'KernelMaterial'),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && il(e, t);
              })(t, $e['MeshMatcapMaterial']),
              (n = t),
              (i = [
                {
                  key: 'onBeforeCompile',
                  value: function (e) {
                    this.avoidCache(',.');
                  },
                },
                { key: 'avoidCache', value: function (e) {} },
              ]) && el(n.prototype, i),
              r && el(n, r),
              t
            );
          })();
        function al(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function sl(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                al(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                al(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function ul(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function ll(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function cl(e) {
          return (cl = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function pl(e, t) {
          return (pl =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var hl,
          fl = Object(u.a)(),
          dl =
            Object(it.a)(rt)(
              (rl = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = ll(
                      this,
                      (e = cl(t)).call.apply(e, [this].concat(r)),
                    )).options = { baseScale: 1, layers: 1, renderOrder: 1 }),
                    (n.props = {
                      name: 'Kernel-Object',
                      resolution: [
                        fl,
                        function (e) {
                          return {
                            width: e.viewport.width,
                            height: e.viewport.height,
                          };
                        },
                      ],
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && pl(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = sl(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.vResolution = new $e.Vector2()),
                                        (e.next = 3),
                                        this.setupKernelObject()
                                      );
                                    case 3:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    /******** KERNOL ******************************************************************************************************************************** */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    {
                      key: 'setupKernelObject',
                      value: (function () {
                        var e = sl(
                          regeneratorRuntime.mark(function e() {
                            var t, n, i, r, o;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.object.name = this.props.name),
                                        (t = new $e.GLTFLoader()),
                                        (n = (function () {
                                          var e = sl(
                                            regeneratorRuntime.mark(function e(
                                              n,
                                            ) {
                                              return regeneratorRuntime.wrap(
                                                function (e) {
                                                  for (;;)
                                                    switch ((e.prev = e.next)) {
                                                      case 0:
                                                        return e.abrupt(
                                                          'return',
                                                          new Promise(function (
                                                            e,
                                                          ) {
                                                            t.load(
                                                              c.a.CDN + n,
                                                              function (t) {
                                                                e(t.scene);
                                                              },
                                                            );
                                                          }),
                                                        );
                                                      case 1:
                                                      case 'end':
                                                        return e.stop();
                                                    }
                                                },
                                                e,
                                              );
                                            }),
                                          );
                                          return function (t) {
                                            return e.apply(this, arguments);
                                          };
                                        })()),
                                        (e.next = 5),
                                        n('models/kernel/KERNAL.gltf')
                                      );
                                    case 5:
                                      return (
                                        (this.gltfRef = e.sent),
                                        (e.next = 8),
                                        Gn('map-kernel-diffuse')
                                      );
                                    case 8:
                                      return (
                                        (i = e.sent),
                                        (e.next = 11),
                                        Gn('map-kernel-matcap-mult')
                                      );
                                    case 11:
                                      return (
                                        (r = e.sent),
                                        (e.next = 14),
                                        Gn('map-kernel-matcap-screen')
                                      );
                                    case 14:
                                      (o = e.sent),
                                        (this.mesh = this.gltfRef.getObjectByName(
                                          'kernel',
                                        )),
                                        (this.mesh.material = new ol({
                                          map: i,
                                          bumpMap: i,
                                          mapMatCapScreen: o,
                                          mapMatCapMult: r,
                                          transparent: !0,
                                        })),
                                        (this.mesh.renderOrder = this.options.renderOrder),
                                        this.mesh.scale.multiplyScalar(
                                          this.options.baseScale,
                                        ),
                                        this.mesh.layers.set(this.options.layer),
                                        this.object.add(this.mesh);
                                    case 21:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setResolution',
                      value: function (e) {
                        var t = e.width,
                          n = e.height;
                        (this.vw = t), (this.vh = n), this.vResolution.set(t, n);
                      },
                    },
                  ]) && ul(n.prototype, i),
                  r && ul(n, r),
                  t
                );
              })()),
            ) || rl;
        function vl(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function ml(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                vl(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                vl(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function gl(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function bl(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function yl(e) {
          return (yl = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function wl(e, t) {
          return (wl =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var xl,
          Pl,
          _l = Object(u.a)(),
          kl =
            Object(it.a)(rt)(
              (hl = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = bl(
                      this,
                      (e = yl(t)).call.apply(e, [this].concat(r)),
                    )).options = { layer: 1, sceneLayer: 2, renderOrder: 0 }),
                    (n.props = {
                      render: !1,
                      active: !1,
                      size: [
                        _l,
                        function (e) {
                          return e.viewport.scale * (c.a.isMobile, 260);
                        },
                      ],
                      perspScale: 1,
                    }),
                    (n.anim = { delay: 0, dur: 2 }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && wl(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = ml(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.tweens = {
                                          rotation: 0,
                                          inProgress: 0,
                                          beamStartProgress: 0,
                                          beamEndProgress: 0,
                                          beamProgress: 0.75,
                                        }),
                                        (this.orthoObj = new $e.Object3D()),
                                        (this.perspObj = new $e.Object3D()),
                                        this.object.add(this.orthoObj),
                                        this.object.add(this.perspObj),
                                        (e.next = 7),
                                        this.setupKernel()
                                      );
                                    case 7:
                                      return (e.next = 9), this.setupMask();
                                    case 9:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    /******** MASK ********************************************************************************************************************************** */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    /************************************************************************************************************************************************ */
                    {
                      key: 'setupMask',
                      value: (function () {
                        var e = ml(
                          regeneratorRuntime.mark(function e() {
                            var t;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      (t = new $e.CircleBufferGeometry(0.5, 32)),
                                        (this.ring = new $e.Mesh(
                                          t,
                                          new $e.ShaderMaterial({
                                            uniforms: {
                                              uSize: { value: 0 },
                                              uStrokeWidth: {
                                                value:
                                                  2 *
                                                  _l.state.viewport.pixelRatio,
                                              },
                                              uRotation: { value: 0 },
                                              uBeamStartProgress: { value: 0 },
                                              uBeamEndProgress: { value: 0 },
                                              uBeamProgress: { value: 0 },
                                              uInProgress: { value: 0 },
                                              uAlpha: { value: 1 },
                                              uColor: {
                                                value: new $e.Color(
                                                  this.options.colors.highlight,
                                                ),
                                              },
                                            },
                                            transparent: !0,
                                            vertexShader: Je,
                                            fragmentShader:
                                              '#define GLSLIFY 1\nuniform float uSize;\nuniform float uStrokeWidth;\nuniform float uRotation;\nuniform float uInProgress;\nuniform float uAlpha;\nuniform vec3 uColor;\n\nuniform float uBeamStartProgress;\nuniform float uBeamEndProgress;\nuniform float uBeamProgress;\n\nvarying vec2 vUv;\n\n#define PI 3.141592653589793\nfloat createRing(vec2 uv, float strokeWidth, float s) {\n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(uv - 0.5) * scale;\n    \n    // Calculate edge antialias feather\n    float distance = length(center);\n    float edgeFeather = fwidth(distance) * feather;\n\n    // Calculate fixed stroke width regardless of scale\n    float dx = dFdx(uv.x);\n    strokeWidth = dx * strokeWidth;\n  \n    float innerRadius = radius - strokeWidth;\n    float outerRadius = radius;\n    float value = smoothstep(innerRadius - edgeFeather, innerRadius, distance) * \n                  smoothstep(outerRadius, outerRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s, float alignStroke) {\n    // alignStroke values: 0 = innner, 0.5 = center,  1 = outer\n    \n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeWidth = dDistance * feather;\n    float innerEdge = mix(1.0, 0.0, alignStroke);\n    float outerEdge = mix(0.0, 1.0, alignStroke);\n\n    // Apply stroke width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float dxStrokeWidth = dx * strokeWidth;\n    float innerRadius = radius - dxStrokeWidth * innerEdge;\n    float outerRadius = radius + dxStrokeWidth * outerEdge;\n    float value = smoothstep(innerRadius - edgeWidth * .5, innerRadius + edgeWidth * .5, distance) * (1. - smoothstep(outerRadius - edgeWidth * .5, outerRadius + edgeWidth * .5, distance));\n\n    return value;\n}\n\nfloat createGradient(vec2 point) {\n    float angleFromPoint = atan(point.x, point.y);\n    return (angleFromPoint + PI) / (PI * 2.0);\n}\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat toRadians(float deg) {\n\treturn deg * (3.141592653589793 / 180.0);\n}\n\nvoid main() {\n\tvec2 uv = vUv;\n    uv = rotateUV(uv, toRadians(uRotation));\n\n    float ring = createRing(vUv, uStrokeWidth, 0.95, 1.);\n    float gradient = createGradient(uv - 0.5);\n\n    float baseRing = (1.0 - step(uInProgress, gradient)) * ring;\n\n    float pr = (1.0 - uBeamStartProgress) * uBeamEndProgress;\n    float fatRingSize = uStrokeWidth * mix(1.5, 2.5, pr);\n    float ringFat = createRing(vUv, fatRingSize, 0.95, 1.);\n    float beamStart = step(uBeamStartProgress * uBeamProgress * uInProgress, gradient);\n    float beamEnd = step(gradient, uBeamEndProgress * uBeamProgress * uInProgress);\n    float beamRing = beamStart * beamEnd * ringFat;// * gaps;\n\n    float alpha = baseRing + beamRing;\n\n    float brightness = mix(1.0, 1.8, (1.0 - uBeamStartProgress) * uBeamEndProgress);\n    vec3 color = uColor * brightness;\n\n    vec4 finalOutput = vec4(color, alpha);\n\n    gl_FragColor = finalOutput;\n    // gl_FragColor = vec4(uColor, 1.0);\n    \n    // gl_FragColor = vec4(uvMask, 0.0, 1.0);\n    // gl_FragColor = vec4(vec3(1.0, 0.0,0.0), 0.5);\n    // gl_FragColor.rgb += vec3(1.0, 0.0,0.0);\n}',
                                          }),
                                        )),
                                        (this.ring.material.type =
                                          'CornRingMaterial'),
                                        (this.ring.material.extensions.derivatives = !0),
                                        this.ring.layers.set(this.options.layer),
                                        (this.ring.renderOrder = this.options.renderOrder),
                                        (this.ring.position.z = 2),
                                        this.orthoObj.add(this.ring);
                                    case 8:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupKernel',
                      value: (function () {
                        var e = ml(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (e.next = 2),
                                        new dl().setup({
                                          options: {
                                            baseScale: c.a.isMobile ? 0.3 : 0.6,
                                            layer: this.options.sceneLayer,
                                          },
                                          props: { s: 0 },
                                        })
                                      );
                                    case 2:
                                      (this.kernel = e.sent),
                                        this.perspObj.add(this.kernel.object);
                                    case 4:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setOrthPos',
                      value: function (e) {
                        var t = e.x,
                          n = e.y;
                        (this.orthoObj.position.x = t),
                          (this.orthoObj.position.y = n);
                      },
                    },
                    {
                      key: 'setPerspPos',
                      value: function (e) {
                        var t = e.x,
                          n = e.y;
                        (this.perspObj.position.x = t),
                          (this.perspObj.position.y = n);
                      },
                    },
                    {
                      key: 'setPerspScale',
                      value: function (e) {
                        this.perspObj.scale.set(e, e, e);
                      },
                    },
                    {
                      key: 'onBeam',
                      value: function () {
                        var e = this;
                        if (!this.animating) {
                          this.animating = !0;
                          L.b.killTweensOf(this.tweens, {
                            rotation: !0,
                            beamEndProgress: !0,
                            beamStartProgress: !0,
                          }),
                            L.b.set(this.tweens, {
                              rotation: 0,
                              beamEndProgress: 0,
                              beamStartProgress: 0,
                            }),
                            L.b.to(this.tweens, 3, {
                              rotation: -360,
                              ease: 'easeInOutQuart',
                              delay: 0,
                            }),
                            L.b.to(this.tweens, 1.5, {
                              beamEndProgress: 1,
                              ease: 'easeInQuart',
                              delay: 0,
                              onComplete: function () {
                                L.b.to(e.tweens, 1.5, {
                                  beamStartProgress: 1,
                                  ease: 'easeOutQuart',
                                  onComplete: function () {
                                    e.animating = !1;
                                  },
                                });
                              },
                            });
                        }
                      },
                    },
                    {
                      key: 'onActive',
                      value: function () {
                        (this.props.render = !0),
                          L.b.killTweensOf(this.tweens, { inProgress: !0 }),
                          L.b.to(this.tweens, this.anim.dur, {
                            inProgress: 1,
                            ease: 'easeInOutQuart',
                            delay: this.anim.delay,
                          }),
                          L.b.killTweensOf(this.kernel.props),
                          L.b.to(this.kernel.props, this.anim.dur, {
                            s: 1,
                            ease: 'easeInOutQuart',
                            delay: this.anim.delay,
                          });
                      },
                    },
                    {
                      key: 'offActive',
                      value: function () {
                        var e = this;
                        L.b.killTweensOf(this.tweens, { inProgress: !0 }),
                          L.b.to(this.tweens, this.anim.dur, {
                            inProgress: 0,
                            ease: 'easeInOutQuart',
                            delay: this.anim.delay,
                          }),
                          L.b.killTweensOf(this.kernel.props),
                          L.b.to(this.kernel.props, this.anim.dur, {
                            s: 0,
                            ease: 'easeInOutQuart',
                            delay: this.anim.delay,
                            onComplete: function () {
                              e.props.render = !1;
                            },
                          });
                      },
                    },
                    {
                      key: 'whileRender',
                      value: function () {
                        (this.kernel.props.rY = 0.3 * _l.state.time),
                          (this.ring.material.uniforms.uRotation.value = this.tweens.rotation),
                          (this.ring.material.uniforms.uInProgress.value = this.tweens.inProgress),
                          (this.ring.material.uniforms.uBeamStartProgress.value = this.tweens.beamStartProgress),
                          (this.ring.material.uniforms.uBeamEndProgress.value = this.tweens.beamEndProgress),
                          (this.ring.material.uniforms.uBeamProgress.value = this.tweens.beamProgress);
                      },
                    },
                    {
                      key: 'setSize',
                      value: function (e) {
                        this.ring.scale.setScalar(e),
                          (this.ring.material.uniforms.uSize.value = e);
                      },
                    },
                  ]) && gl(n.prototype, i),
                  r && gl(n, r),
                  t
                );
              })()),
            ) || hl;
        function Ol(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Sl(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Ol(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Ol(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Tl(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Al(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Ml(e) {
          return (Ml = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function jl(e, t) {
          return (jl =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Fl(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var Rl,
          Cl,
          El = Object(u.a)(),
          Ll = { base: '#fff', highlight: '#18a36a' },
          Il =
            Object(it.a)(rt)(
              (Fl(
                (Pl = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = Al(
                        this,
                        (e = Ml(t)).call.apply(e, [this].concat(r)),
                      )).options = {
                        layer: 1,
                        sceneLayer: 2,
                        scaleBlur: 1.3,
                        resolution: [0, 0],
                      }),
                      (n.props = {
                        v: !1,
                        active: !1,
                        render: !1,
                        viewport: [
                          El,
                          function (e) {
                            return s.a.pick(
                              e.viewport,
                              'width',
                              'height',
                              'pixelRatio',
                            );
                          },
                        ],
                      }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && jl(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e = Sl(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (window.info = this),
                                          (this.orthoObj = new $e.Object3D()),
                                          this.object.add(this.orthoObj),
                                          (this.renderer = Rn()),
                                          (e.next = 6),
                                          this.setupCorn()
                                        );
                                      case 6:
                                        return (e.next = 8), this.setupRings();
                                      case 8:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                        /******** CORN ***************************************************************************************************************************** */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                      {
                        key: 'setupCorn',
                        value: (function () {
                          var e = Sl(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (e.next = 2),
                                          new kl().setup({
                                            options: {
                                              colors: Ll,
                                              layer: this.options.layer,
                                              sceneLayer: this.options.sceneLayer,
                                            },
                                            props: {
                                              orthPos: { x: 0, y: 0 },
                                              perspPos: { x: 0, y: 0 },
                                            },
                                          })
                                        );
                                      case 2:
                                        (this.corn = e.sent),
                                          this.object.add(this.corn.object);
                                      case 4:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupRings',
                        value: (function () {
                          var e = Sl(
                            regeneratorRuntime.mark(function e() {
                              var t, n, i;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (this.rings = []), (t = 0);
                                      case 2:
                                        if (!(t < 5)) {
                                          e.next = 13;
                                          break;
                                        }
                                        return (
                                          (n = t % 2 == 0 ? 1 : -1),
                                          (e.next = 6),
                                          new Qu().setup({
                                            options: {
                                              dir: n,
                                              colors: Ll,
                                              layer: this.options.layer,
                                              baseRotation: (180 * t) / 3,
                                              prOffset: t / 5,
                                              resolution: this.options.resolution,
                                            },
                                            props: {
                                              cornRingRadius: [
                                                this.corn.store,
                                                function (e) {
                                                  return 0.5 * e.size;
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 6:
                                        (i = e.sent).store.compute(this.onBeam),
                                          this.orthoObj.add(i.object),
                                          this.rings.push(i);
                                      case 10:
                                        (t += 1), (e.next = 2);
                                        break;
                                      case 13:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupBlurredBg',
                        value: (function () {
                          var e = Sl(
                            regeneratorRuntime.mark(function e() {
                              var t;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (t = { magFilter: $e.LinearFilter }),
                                          (this.rtScene = new $e.WebGLRenderTarget(
                                            1024,
                                            1024,
                                            t,
                                          )),
                                          (e.next = 4),
                                          new Wt().setup({
                                            fragmentShader: mn,
                                            uniforms: {
                                              radius: { value: 3 },
                                              time: { value: 0 },
                                            },
                                            targetOptions: t,
                                            options: { size: 1024 },
                                          })
                                        );
                                      case 4:
                                        return (
                                          (this.blurPass1 = e.sent),
                                          (e.next = 7),
                                          new Wt().setup({
                                            fragmentShader: gn,
                                            uniforms: {
                                              radius: { value: 3 },
                                              time: { value: 0 },
                                            },
                                            targetOptions: t,
                                            options: { size: 1024 },
                                          })
                                        );
                                      case 7:
                                        return (
                                          (this.blurPass2 = e.sent),
                                          (e.next = 10),
                                          new Wt().setup({
                                            fragmentShader: bn,
                                            uniforms: {
                                              radius: { value: 3 },
                                              time: { value: 0 },
                                            },
                                            targetOptions: t,
                                            options: { size: 1024 },
                                          })
                                        );
                                      case 10:
                                        (this.blurPass3 = e.sent),
                                          (this.blurMesh = new $e.Mesh(
                                            et,
                                            new $e.MeshBasicMaterial({
                                              map: this.blurPass2.target.texture,
                                              transparent: !0,
                                              magFilter: $e.NearestFilter,
                                            }),
                                          )),
                                          (this.blurMesh.material.opacity = 0),
                                          this.blurMesh.layers.set(
                                            this.options.layer,
                                          ),
                                          this.orthoObj.add(this.blurMesh);
                                      case 15:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setViewport',
                        value: function (e) {
                          var t = this;
                          (this.options.resolution[0] = e.width * e.pixelRatio),
                            (this.options.resolution[1] =
                              e.height * e.pixelRatio),
                            requestAnimationFrame(function () {
                              var n = pu(0, t.options.perspectiveCamera),
                                i = e.width * (c.a.isMobile ? 0 : -0.25),
                                r = e.height * (c.a.isMobile ? 0.25 : 0),
                                o = (n[0] / e.width) * i,
                                a = (n[1] / e.height) * r;
                              (t.corn.props.orthPos = { x: i, y: r }),
                                (t.corn.props.perspPos = { x: o, y: a }),
                                (t.corn.props.perspScale =
                                  Math.max(n[0] / e.width, n[1] / e.height) *
                                  e.width *
                                  (c.a.isMobile ? 0.16 : 0.062)),
                                (t.orthoObj.position.x = i),
                                (t.orthoObj.position.y = r);
                            });
                        },
                      },
                      {
                        key: 'onBeam',
                        value: function (e) {
                          e.beam > 0 && this.corn.onBeam();
                        },
                      },
                      {
                        key: 'onActive',
                        value: function () {
                          (this.props.v = !0), (this.props.render = !0);
                          (this.corn.anim.dur = 2),
                            (this.corn.anim.delay = 0),
                            (this.corn.props.active = !0),
                            this.rings.forEach(function (e, t) {
                              (e.anim.delay = 0 + 0.1 * t),
                                (e.anim.dur = 2),
                                (e.props.active = !0);
                            }),
                            L.b.killDelayedCallsTo(this.offActiveDelay);
                        },
                      },
                      {
                        key: 'offActive',
                        value: function () {
                          (this.corn.anim.dur = 1.5),
                            (this.corn.anim.delay = 0),
                            (this.corn.props.active = !1),
                            this.rings.forEach(function (e, t) {
                              (e.anim.delay = 0.1 * t),
                                (e.anim.dur = 1.5),
                                (e.props.active = !1);
                            }),
                            L.b.delayedCall(3, this.offActiveDelay);
                        },
                      },
                      {
                        key: 'offActiveDelay',
                        value: function () {
                          (this.props.v = !1), (this.props.render = !1);
                        },
                      },
                      {
                        key: 'whileRender',
                        value: function () {
                          var e = (El.state.time / 25) % 1;
                          this.rings.forEach(function (t) {
                            var n = (e + t.options.prOffset) % 1;
                            n = Object(Jr.a)(fs(n), 0, 1);
                            var i = 0.08 * El.state.time * t.options.dir;
                            (t.props.progress = n),
                              (t.props.rZ = i + Zn(t.options.baseRotation));
                          });
                          this.orthoObj.position.x, this.options.scaleBlur;
                        },
                      },
                      {
                        key: 'renderBlur',
                        value: function (e, t, n, i) {
                          this.blurMesh.layers.set(5),
                            n.layers.set(this.options.layer),
                            i.layers.set(this.options.sceneLayer),
                            e.setRenderTarget(this.rtScene),
                            e.setClearColor(0),
                            e.clear(),
                            e.render(t, n),
                            e.clearDepth(),
                            e.render(t, i),
                            (this.blurPass1.material.map = this.rtScene.texture),
                            n.layers.set(0),
                            e.setRenderTarget(this.blurPass2.target),
                            e.clear(),
                            e.render(this.blurPass1.scene, n),
                            e.setRenderTarget(this.blurPass3.target),
                            e.clear(),
                            e.render(this.blurPass2.scene, n),
                            e.setRenderTarget(this.blurPass2.target),
                            e.clear(),
                            e.render(this.blurPass3.scene, n),
                            this.blurMesh.layers.set(this.options.layer),
                            e.setClearColor(0, 0);
                        },
                      },
                      {
                        key: 'blurRT',
                        get: function () {
                          return this.rtScene;
                        },
                      },
                    ]) && Tl(n.prototype, i),
                    r && Tl(n, r),
                    t
                  );
                })()).prototype,
                'onBeam',
                [X.a],
                Object.getOwnPropertyDescriptor(Pl.prototype, 'onBeam'),
                Pl.prototype,
              ),
              Fl(
                Pl.prototype,
                'offActiveDelay',
                [X.a],
                Object.getOwnPropertyDescriptor(Pl.prototype, 'offActiveDelay'),
                Pl.prototype,
              ),
              (xl = Pl)),
            ) || xl;
        function Dl(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Ul(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Dl(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Dl(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function zl(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Nl(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Bl(e) {
          return (Bl = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Vl(e, t) {
          return (Vl =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Yl,
          Hl,
          Xl = Object(u.a)(),
          Gl =
            Object(it.a)(rt)(
              ((function (e, t, n, i, r) {
                var o = {};
                Object.keys(i).forEach(function (e) {
                  o[e] = i[e];
                }),
                  (o.enumerable = !!o.enumerable),
                  (o.configurable = !!o.configurable),
                  ('value' in o || o.initializer) && (o.writable = !0),
                  (o = n
                    .slice()
                    .reverse()
                    .reduce(function (n, i) {
                      return i(e, t, n) || n;
                    }, o)),
                  r &&
                    void 0 !== o.initializer &&
                    ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                    (o.initializer = void 0)),
                  void 0 === o.initializer &&
                    (Object.defineProperty(e, t, o), (o = null));
              })(
                (Cl = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = Nl(
                        this,
                        (e = Bl(t)).call.apply(e, [this].concat(r)),
                      )).options = {}),
                      (n.props = { active: !1 }),
                      (n.anim = { showDelay: 0, hideDelay: 0 }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && Vl(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e = Ul(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (e.next = 2), this.setupCopy();
                                      case 2:
                                        return (
                                          (e.next = 4),
                                          new ft().setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                            },
                                          })
                                        );
                                      case 4:
                                        return (
                                          (this.hotspotCloseBtn = e.sent),
                                          this.hotspotCloseBtn.store.compute(
                                            function (e) {
                                              (e.pX =
                                                e.viewport.width *
                                                (c.a.isMobile ? 0.4 : 0.46)),
                                                (e.pY =
                                                  0.445 * e.viewport.height +
                                                  (c.a.isMobile
                                                    ? 0
                                                    : -14 * e.viewport.scale));
                                            },
                                          ),
                                          this.object.add(
                                            this.hotspotCloseBtn.object,
                                          ),
                                          this.hotspotCloseBtn.on(
                                            'click',
                                            this.onHotspotCloseClick,
                                          ),
                                          (e.next = 10),
                                          new Il().setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              sceneLayer: this.options.layers
                                                .UI_SCENE_LAYER,
                                              perspectiveCamera: this.options
                                                .perspectiveCamera,
                                            },
                                          })
                                        );
                                      case 10:
                                        (this.infographic = e.sent),
                                          this.object.add(
                                            this.infographic.object,
                                          );
                                      case 12:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupCopy',
                        value: (function () {
                          var e = Ul(
                            regeneratorRuntime.mark(function e() {
                              var t = this;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (e.next = 2), new yo();
                                      case 2:
                                        return (
                                          (this.title = e.sent),
                                          (e.next = 5),
                                          this.title.setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              text:
                                                p['first-section-hotspot-title'],
                                              position: c.a.isMobile
                                                ? 'bottom-left'
                                                : 'top-left',
                                              animationDuration: 1.5,
                                              animationStagger: 0.02,
                                            },
                                            props: {
                                              fontSize: [
                                                Xl,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 110 : 90) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              width: [
                                                Xl,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 1e3 : 850) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              pX: [
                                                Xl,
                                                function (e) {
                                                  return (
                                                    e.viewport.width *
                                                    (c.a.isMobile ? -0.42 : 0.04)
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 5:
                                        return (
                                          this.object.add(this.title.object),
                                          (e.next = 8),
                                          new Ao()
                                        );
                                      case 8:
                                        return (
                                          (this.bodyText = e.sent),
                                          (e.next = 11),
                                          this.bodyText.setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              position: c.a.isMobile
                                                ? 'bottom-left'
                                                : 'top-left',
                                              text:
                                                p['first-section-hotspot-body'],
                                            },
                                            props: {
                                              fontSize: [
                                                Xl,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 40 : 20) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              width: [
                                                Xl,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 920 : 700) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              pX: [
                                                Xl,
                                                function (e) {
                                                  return (
                                                    e.viewport.width *
                                                    (c.a.isMobile ? -0.42 : 0.04)
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 11:
                                        this.object.add(this.bodyText.object),
                                          this.title.store.compute(function (e) {
                                            var n = e.height,
                                              i = t.bodyText.props.height,
                                              r =
                                                Xl.state.viewport.scale *
                                                (c.a.isMobile ? 80 : 50),
                                              o = n + r + i,
                                              a = 0.5 * o,
                                              s = -n - r + 0.5 * o,
                                              u =
                                                -Xl.state.viewport.height / 2 +
                                                130 * Xl.state.viewport.scale,
                                              l = u + i + r;
                                            (t.title.props.pY = c.a.isMobile
                                              ? l
                                              : a),
                                              (t.bodyText.props.pY = c.a.isMobile
                                                ? u
                                                : s);
                                          });
                                      case 13:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'onActive',
                        value: function () {
                          this.title.show({ delay: 0.8 }),
                            this.bodyText.show({ delay: 1.3 }),
                            (this.infographic.props.active = !0),
                            (this.hotspotCloseBtn.props.visible = !0);
                        },
                      },
                      {
                        key: 'offActive',
                        value: function () {
                          this.title.hide(),
                            this.bodyText.hide({ delay: 0 }),
                            (this.infographic.props.active = !1),
                            (this.hotspotCloseBtn.props.visible = !1);
                        },
                      },
                      {
                        key: 'renderUi',
                        value: function (e, t, n, i) {
                          this.infographic.props.render &&
                            this.infographic.renderBlur(e, t, n, i);
                        },
                      },
                      {
                        key: 'onHotspotCloseClick',
                        value: function () {
                          Xl.state.navigation.hotspotDna = !1;
                        },
                      },
                    ]) && zl(n.prototype, i),
                    r && zl(n, r),
                    t
                  );
                })()).prototype,
                'onHotspotCloseClick',
                [X.a],
                Object.getOwnPropertyDescriptor(
                  Cl.prototype,
                  'onHotspotCloseClick',
                ),
                Cl.prototype,
              ),
              (Rl = Cl)),
            ) || Rl,
          Wl = n(421),
          Ql = function (e) {
            return (Math.sin(847.183 * e) + Math.sin(736.019 * e + 0.846)) / 2;
          },
          ql = function () {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = e.seed,
              n = void 0 === t ? 0 : t,
              i = e.definition,
              r = void 0 === i ? 20 : i,
              o = e.length,
              a = void 0 === o ? 10 : o,
              u = e.amp,
              l = void 0 === u ? 2.5 : u;
            return s.a.range(r).map(function (e) {
              var t = e / (r - 1),
                i = a / r,
                o = t * Math.PI * 1.5;
              return new $e.Vector3(
                Ql(n + e) * Ql(n + e + 746.1) + l * Math.cos(o),
                -a / 2 + t * a + Ql(n + e + 12.32) * i * 2,
                Ql(n + e + 21.241) * Ql(n + e + 84.11) + l * Math.sin(o),
              );
            });
          };
        function Zl(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              i = Object.keys(n);
            'function' == typeof Object.getOwnPropertySymbols &&
              (i = i.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                }),
              )),
              i.forEach(function (t) {
                Kl(e, t, n[t]);
              });
          }
          return e;
        }
        function Kl(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function $l(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Jl(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                $l(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                $l(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function ec(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function tc(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function nc(e) {
          return (nc = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function ic(e, t) {
          return (ic =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function rc(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var oc = Object(u.a)(),
          ac =
            Object(it.a)(rt)(
              (rc(
                (Hl = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = tc(
                        this,
                        (e = nc(t)).call.apply(e, [this].concat(r)),
                      )).options = {
                        size: 1,
                        layers: {
                          BG_LAYER: 1,
                          SCENE_LAYER: 0,
                          UI_LAYER: 3,
                          UI_SCENE_LAYER: 4,
                        },
                        resolution: new $e.Vector2(
                          window.innerWidth,
                          window.innerHeight,
                        ),
                        camera: null,
                        uiPerspectiveCamera: null,
                      }),
                      (n.props = {
                        vh: [
                          oc,
                          function (e) {
                            return e.viewport.height;
                          },
                        ],
                        visible: !1,
                        active: [
                          oc,
                          function (e) {
                            return 'dna' === e.currentSubSection;
                          },
                        ],
                        hotspot: [
                          oc,
                          function (e) {
                            return e.navigation.hotspotDna;
                          },
                        ],
                        progress: 0.5,
                      }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && ic(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e = Jl(
                            regeneratorRuntime.mark(function e() {
                              var t, n, i, r;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (t = this.options.resolution),
                                          (this.dnaRyTime = 0),
                                          (this.sceneWrapper = new $e.Object3D()),
                                          this.object.add(this.sceneWrapper),
                                          (this.tweenObj = { pIn: 0 }),
                                          (e.next = 7),
                                          this.setupCopy()
                                        );
                                      case 7:
                                        return (
                                          (e.next = 9),
                                          new js().setup({
                                            options: {
                                              text: p['first-section-cta'],
                                              layer: this.options.layers.UI_LAYER,
                                            },
                                            props: {
                                              pX: function (e) {
                                                return 0.2 * e.viewport.width;
                                              },
                                              pY: function (e) {
                                                return (
                                                  e.viewport.height *
                                                  (c.a.isMobile ? 0.2 : 0)
                                                );
                                              },
                                            },
                                          })
                                        );
                                      case 9:
                                        return (
                                          (this.hotspot = e.sent),
                                          this.object.add(this.hotspot.object),
                                          this.hotspot.on(
                                            'click',
                                            this.onHotspotClick,
                                          ),
                                          (e.next = 14),
                                          new Gl().setup({
                                            options: {
                                              layers: this.options.layers,
                                              perspectiveCamera: this.options
                                                .uiPerspectiveCamera,
                                            },
                                          })
                                        );
                                      case 14:
                                        return (
                                          (this.hotspotUi = e.sent),
                                          this.object.add(this.hotspotUi.object),
                                          (e.next = 18),
                                          new Ya().setup({
                                            options: {
                                              width: 5,
                                              height: 12,
                                              farMin: 32,
                                              farMax: 32,
                                            },
                                          })
                                        );
                                      case 18:
                                        return (
                                          (this.dofController = e.sent),
                                          (n = this.dofController),
                                          (i = n.dofFocus),
                                          (r = n.dofAmount),
                                          (e.next = 22),
                                          new na().setup({
                                            options: {
                                              layer: this.options.layers.BG_LAYER,
                                              renderOrder: 2,
                                              accent1Position: new $e.Vector2(
                                                0.2,
                                                0.8,
                                              ),
                                              accent2Position: new $e.Vector2(
                                                0.8,
                                                0.2,
                                              ),
                                              height: 2,
                                            },
                                            props: {
                                              pY: [
                                                this.store,
                                                function (e) {
                                                  return Object(o.a)(
                                                    e.progress,
                                                    0,
                                                    1,
                                                    -e.vh / 2,
                                                    e.vh / 2,
                                                    !0,
                                                  );
                                                },
                                              ],
                                              opacity: [
                                                this.store,
                                                function (e) {
                                                  return Object(o.a)(
                                                    e.progress,
                                                    0.8,
                                                    1,
                                                    1,
                                                    0,
                                                    !0,
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 22:
                                        return (
                                          (this.bg = e.sent),
                                          this.sceneWrapper.add(this.bg.object),
                                          (e.next = 26),
                                          new ru().setup({
                                            options: {
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Zl({}, Wl.dna, {
                                              pY: [
                                                this.store,
                                                function (e) {
                                                  return Object(o.a)(
                                                    e.progress,
                                                    -0.7,
                                                    1.5,
                                                    -8,
                                                    13,
                                                  );
                                                },
                                              ],
                                              startProgress: [
                                                this.store,
                                                function (e) {
                                                  var t = Object(o.a)(
                                                    e.progress,
                                                    -0.2,
                                                    0.29,
                                                    0,
                                                    1,
                                                    !0,
                                                  );
                                                  return (
                                                    (t = fs(t)),
                                                    Object(o.a)(
                                                      t,
                                                      0,
                                                      1,
                                                      1.1,
                                                      0,
                                                      !0,
                                                    )
                                                  );
                                                },
                                              ],
                                            }),
                                          })
                                        );
                                      case 26:
                                        return (
                                          (this.dna = e.sent),
                                          this.sceneWrapper.add(this.dna.object),
                                          (e.next = 30),
                                          new cu().setup({
                                            options: {
                                              points: ql({ seed: 0 }),
                                              thread: !1,
                                              noise: !1,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Zl({}, Wl.thread, {
                                              pY: [
                                                this.store,
                                                function (e) {
                                                  return Object(o.a)(
                                                    e.progress,
                                                    -0.7,
                                                    1.5,
                                                    -10,
                                                    13,
                                                  );
                                                },
                                              ],
                                            }),
                                          })
                                        );
                                      case 30:
                                        return (
                                          (this.thread = e.sent),
                                          this.sceneWrapper.add(
                                            this.thread.object,
                                          ),
                                          (e.next = 34),
                                          new cu().setup({
                                            options: {
                                              points: ql({ seed: 472.324 }),
                                              thread: !1,
                                              noise: !1,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Zl({}, Wl.thread2, {
                                              pY: [
                                                this.store,
                                                function (e) {
                                                  return Object(o.a)(
                                                    e.progress,
                                                    -0.7,
                                                    1.5,
                                                    -10,
                                                    13,
                                                  );
                                                },
                                              ],
                                            }),
                                          })
                                        );
                                      case 34:
                                        return (
                                          (this.thread2 = e.sent),
                                          this.sceneWrapper.add(
                                            this.thread2.object,
                                          ),
                                          (e.next = 38),
                                          new cu().setup({
                                            options: {
                                              points: ql({ seed: -7462.123 }),
                                              thread: !1,
                                              noise: !1,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Zl({}, Wl.thread3, {
                                              pY: [
                                                this.store,
                                                function (e) {
                                                  return Object(o.a)(
                                                    e.progress,
                                                    -0.7,
                                                    1.5,
                                                    -10,
                                                    13,
                                                  );
                                                },
                                              ],
                                            }),
                                          })
                                        );
                                      case 38:
                                        if (
                                          ((this.thread3 = e.sent),
                                          this.sceneWrapper.add(
                                            this.thread3.object,
                                          ),
                                          c.a.isMobile)
                                        ) {
                                          e.next = 68;
                                          break;
                                        }
                                        return (
                                          (e.next = 43),
                                          new qs().setup({
                                            options: {
                                              height: 4,
                                              particlesAmount: 200,
                                              radius: 2,
                                              frequency: 0.1,
                                              radius2: 0.3,
                                              frequency2: 100,
                                              phase: 0.05 + 0.5 * Math.PI,
                                              thread: !1,
                                              randomness: 0.3,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.stream || {},
                                          })
                                        );
                                      case 43:
                                        return (
                                          (this.stream = e.sent),
                                          this.sceneWrapper.add(
                                            this.stream.object,
                                          ),
                                          (e.next = 47),
                                          new qs().setup({
                                            options: {
                                              height: 2,
                                              particlesAmount: 150,
                                              radius: 1.5,
                                              frequency: 0.1,
                                              radius2: 0.3,
                                              frequency2: 100,
                                              phase: 0.05 + 0.5 * Math.PI,
                                              thread: !1,
                                              randomness: 0.5,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.stream2 || {},
                                          })
                                        );
                                      case 47:
                                        return (
                                          (this.stream2 = e.sent),
                                          this.sceneWrapper.add(
                                            this.stream2.object,
                                          ),
                                          (e.next = 51),
                                          new La().setup({
                                            options: {
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.area,
                                          })
                                        );
                                      case 51:
                                        return (
                                          (this.area = e.sent),
                                          this.sceneWrapper.add(this.area.object),
                                          (e.next = 55),
                                          new La().setup({
                                            options: {
                                              particlesAmount: 300,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.area4 || {},
                                          })
                                        );
                                      case 55:
                                        return (
                                          (this.area4 = e.sent),
                                          (e.next = 58),
                                          new La().setup({
                                            options: {
                                              particlesAmount: 300,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.area6 || {},
                                          })
                                        );
                                      case 58:
                                        return (
                                          (this.area6 = e.sent),
                                          this.sceneWrapper.add(
                                            this.area6.object,
                                          ),
                                          (e.next = 62),
                                          new La().setup({
                                            options: {
                                              particlesAmount: 300,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.area7 || {},
                                          })
                                        );
                                      case 62:
                                        return (
                                          (this.area7 = e.sent),
                                          this.sceneWrapper.add(
                                            this.area7.object,
                                          ),
                                          (e.next = 66),
                                          new La().setup({
                                            options: {
                                              particlesAmount: 150,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.area9 || {},
                                          })
                                        );
                                      case 66:
                                        (this.area9 = e.sent),
                                          this.sceneWrapper.add(
                                            this.area9.object,
                                          );
                                      case 68:
                                        return (
                                          (e.next = 70),
                                          new La().setup({
                                            options: {
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.area2,
                                          })
                                        );
                                      case 70:
                                        return (
                                          (this.area2 = e.sent),
                                          this.sceneWrapper.add(
                                            this.area2.object,
                                          ),
                                          (e.next = 74),
                                          new La().setup({
                                            options: {
                                              particlesAmount: 100,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.area3,
                                          })
                                        );
                                      case 74:
                                        return (
                                          (this.area3 = e.sent),
                                          this.sceneWrapper.add(
                                            this.area3.object,
                                          ),
                                          (e.next = 78),
                                          new La().setup({
                                            options: {
                                              particlesAmount: 300,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.area5 || {},
                                          })
                                        );
                                      case 78:
                                        return (
                                          (this.area5 = e.sent),
                                          this.sceneWrapper.add(
                                            this.area5.object,
                                          ),
                                          (e.next = 82),
                                          new La().setup({
                                            options: {
                                              particlesAmount: 150,
                                              dofFocus: i,
                                              dofAmount: r,
                                              resolution: t,
                                            },
                                            props: Wl.area8 || {},
                                          })
                                        );
                                      case 82:
                                        (this.area8 = e.sent),
                                          this.sceneWrapper.add(
                                            this.area8.object,
                                          ),
                                          c.a.isSandbox &&
                                            ((this.mask = new $e.Mesh(
                                              new $e.PlaneBufferGeometry(
                                                innerWidth,
                                                innerHeight,
                                              ),
                                              new $e.MeshBasicMaterial({
                                                color: 'black',
                                              }),
                                            )),
                                            this.mask.layers.set(3),
                                            this.object.add(this.mask));
                                      case 85:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupCopy',
                        value: (function () {
                          var e = Jl(
                            regeneratorRuntime.mark(function e() {
                              var t = this;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (e.next = 2), new yo();
                                      case 2:
                                        return (
                                          (this.title = e.sent),
                                          (e.next = 5),
                                          this.title.setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              text: p['first-section-title'],
                                              position: c.a.isMobile
                                                ? 'bottom-left'
                                                : 'top-left',
                                              animationDuration: 1.5,
                                              animationStagger: 0.02,
                                            },
                                            props: {
                                              fontSize: [
                                                oc,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 110 : 100) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              width: [
                                                oc,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 920 : 800) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              pX: [
                                                oc,
                                                function (e) {
                                                  return -0.42 * e.viewport.width;
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 5:
                                        return (
                                          this.object.add(this.title.object),
                                          (e.next = 8),
                                          new Ao()
                                        );
                                      case 8:
                                        return (
                                          (this.bodyText = e.sent),
                                          (e.next = 11),
                                          this.bodyText.setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              position: c.a.isMobile
                                                ? 'bottom-left'
                                                : 'top-left',
                                              text: p['first-section-body'],
                                            },
                                            props: {
                                              fontSize: [
                                                oc,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 40 : 20) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              width: [
                                                oc,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 920 : 700) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              pX: [
                                                oc,
                                                function (e) {
                                                  return -0.42 * e.viewport.width;
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 11:
                                        this.object.add(this.bodyText.object),
                                          this.title.store.compute(function (e) {
                                            var n = e.height,
                                              i = t.bodyText.props.height,
                                              r =
                                                oc.state.viewport.scale *
                                                (c.a.isMobile ? 80 : 50),
                                              o = n + r + i,
                                              a = 0.6 * o,
                                              s = -n - r + 0.6 * o,
                                              u =
                                                -oc.state.viewport.height / 2 +
                                                300 * oc.state.viewport.scale,
                                              l = u + i + r;
                                            (t.title.props.pY = c.a.isMobile
                                              ? l
                                              : a),
                                              (t.bodyText.props.pY = c.a.isMobile
                                                ? u
                                                : s);
                                          });
                                      case 13:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setProgress',
                        value: function (e) {
                          this.mask &&
                            (this.mask.position.y = e * innerHeight * 2),
                            (this.bg.props.s = Object(o.a)(e, 0, 0.5, 2, 1, !0)),
                            (this.sceneWrapper.position.y = Object(o.a)(
                              e,
                              0,
                              1,
                              -3,
                              3,
                            ));
                        },
                      },
                      {
                        key: 'onActive',
                        value: function () {
                          var e = oc.state.inPreloader ? 0.88 : 0;
                          oc.state.inPreloader
                            ? ps.a.to(this.tweenObj, 3, {
                                pIn: 1,
                                ease: 'easeOutQuint',
                                delay: 1,
                              })
                            : (this.tweenObj.pIn = 1),
                            this.title.show({ delay: 0.4 + e }),
                            this.bodyText.show({ delay: 0.9 + e }),
                            this.hotspot.show({ delay: 0.2 + e });
                        },
                      },
                      {
                        key: 'offActive',
                        value: function () {
                          this.title.hide(),
                            this.bodyText.hide({ delay: 0 }),
                            this.hotspot.hide({ delay: 0 });
                        },
                      },
                      {
                        key: 'whileV',
                        value: function () {
                          (this.dnaRyTime += 0.001),
                            (this.dna.props.rY =
                              Object(o.a)(
                                this.props.progress,
                                0,
                                0.5,
                                0,
                                0.25 * Math.PI,
                                !0,
                              ) +
                              Object(o.a)(
                                this.props.progress,
                                0,
                                1,
                                0,
                                2 * Math.PI,
                              ) +
                              this.dnaRyTime),
                            (this.thread.props.ry -= 0.001),
                            (this.thread2.props.rY -= 0.001),
                            (this.thread3.props.rY -= 0.001);
                        },
                      },
                      {
                        key: 'whileActive',
                        value: function () {
                          var e = this.tweenObj;
                          this.options.postProcessingMaterial.inProgress = e.pIn;
                        },
                      },
                      {
                        key: 'renderUi',
                        value: function (e, t, n, i) {
                          this.hotspotUi.renderUi(e, t, n, i);
                        },
                      },
                      { key: 'setVh', value: function () {} },
                      {
                        key: 'onHotspotClick',
                        value: function () {
                          oc.state.navigation.hotspotDna = !0;
                        },
                      },
                      {
                        key: 'onHotspotCloseClick',
                        value: function () {
                          oc.state.navigation.hotspotDna = !1;
                        },
                      },
                      {
                        key: 'onHotspot',
                        value: function () {
                          this.title.hide({ delay: 0.5 }),
                            this.bodyText.hide({ delay: 0.5 }),
                            this.hotspot.hide({ delay: 0.4 }),
                            ps.a.killTweensOf(this.options.camera.position),
                            ps.a.to(this.options.camera.position, 2, {
                              z: 3,
                              ease: 'Quart.easeInOut',
                            }),
                            ps.a.killTweensOf(this.dna.props),
                            ps.a.to(this.dna.props, 1, {
                              o: 0,
                              ease: 'Quart.easeIn',
                            }),
                            (this.hotspotUi.props.active = !0);
                        },
                      },
                      {
                        key: 'offHotspot',
                        value: function () {
                          if (this.props.active) {
                            this.title.show({ delay: 1.4 }),
                              this.bodyText.show({ delay: 1.8 }),
                              this.hotspot.show({ delay: 0.5 }),
                              ps.a.killTweensOf(this.options.camera.position),
                              ps.a.to(this.options.camera.position, 3, {
                                z: 10,
                                ease: 'Quart.easeInOut',
                                delay: 0,
                              }),
                              ps.a.killTweensOf(this.dna.props),
                              ps.a.to(this.dna.props, 2, {
                                o: 1,
                                ease: 'Quart.easeOut',
                                delay: 1.5,
                              }),
                              (this.hotspotUi.props.active = !1);
                          }
                        },
                      },
                    ]) && ec(n.prototype, i),
                    r && ec(n, r),
                    t
                  );
                })()).prototype,
                'onHotspotClick',
                [X.a],
                Object.getOwnPropertyDescriptor(Hl.prototype, 'onHotspotClick'),
                Hl.prototype,
              ),
              rc(
                Hl.prototype,
                'onHotspotCloseClick',
                [X.a],
                Object.getOwnPropertyDescriptor(
                  Hl.prototype,
                  'onHotspotCloseClick',
                ),
                Hl.prototype,
              ),
              (Yl = Hl)),
            ) || Yl;
        function sc(e) {
          return (sc = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function uc(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function lc(e, t) {
          return (lc =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function cc() {
          var e = hc([
            '\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n\n    uniform float shapeSides;\n    uniform vec3 color1;\n    uniform vec3 color2;\n    uniform float opacity;\n    uniform float time;\n    varying float vId;\n    varying float vSize;\n\n    // src: https://thebookofshaders.com/07/\n    float polygonDf(vec2 st, float N) {\n        if (N == 0.0) {\n            return distance(st, vec2(0.5));\n        } else {\n            st = st * 2.0 - 1.0;\n            float a = atan(st.x,st.y)+PI * 0.5;\n            float r = TWO_PI/N;\n            return cos(floor(.5+a/r)*r-a)*length(st);\n        }\n    }\n\n    void main() {\n        float random = vId * 5.193628 + vId;\n        vec3 color = mod(vId, 4.0) == 0.0 ? color2 : color1;\n        vec2 uv = gl_PointCoord;\n        float df = polygonDf(uv, shapeSides);\n        float shapeAlpha = smoothstep(0.15, 0.15 - mix(0.02, 0.2, vSize), df);\n        float distanceAlpha = mix(1.0, 0.6, smoothstep(0.0, 0.2, vSize));\n        gl_FragColor = vec4(color * distanceAlpha, shapeAlpha);\n    }\n',
          ]);
          return (
            (cc = function () {
              return e;
            }),
            e
          );
        }
        function pc() {
          var e = hc([
            '\n    ',
            '\n    attribute float id;\n    uniform float time;\n    uniform vec2 size;\n    uniform vec2 dofAmount;\n    uniform vec3 dofFocus;\n    uniform vec2 resolution;\n    varying float vId;\n    varying float vSize;\n    void main() {\n        vId = id;\n        vec4 transformed = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        ',
            '\n        gl_Position = transformed;\n        float scale = resolution.y / 800.0;\n        gl_PointSize = mix(size.x * scale, size.y * scale, vSize);\n    }\n',
          ]);
          return (
            (pc = function () {
              return e;
            }),
            e
          );
        }
        function hc(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var fc = Mt(pc(), da, ya),
          dc = Mt(cc()),
          vc = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.shapeSides,
                a = void 0 === o ? 5 : o,
                u = r.size,
                l = void 0 === u ? new $e.Vector2(10, 35) : u,
                c = r.color1,
                p = void 0 === c ? new $e.Color('#333333') : c,
                h = r.color2,
                f = void 0 === h ? new $e.Color('#333333') : h,
                d = r.opacity,
                v = void 0 === d ? 1 : d,
                m = r.dofAmount,
                g = void 0 === m ? new $e.Vector2(7, 15) : m,
                b = r.dofFocus,
                y = void 0 === b ? new $e.Vector3() : b,
                w = r.resolution,
                x = void 0 === w ? new $e.Vector2() : w;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = sc(t).call(this, {
                  uniforms: {
                    shapeSides: { value: a },
                    size: { value: l },
                    color1: { value: p },
                    color2: { value: f },
                    opacity: { value: v },
                    time: { value: 0 },
                    dofAmount: { value: g },
                    dofFocus: { value: y },
                    resolution: { value: x },
                  },
                  vertexShader: fc,
                  fragmentShader: dc,
                  transparent: !0,
                  depthTest: !1,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? uc(n)
                    : i).type = 'ParticleOuterMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(uc(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && lc(e, t);
              })(t, $e['ShaderMaterial']),
              t
            );
          })();
        function mc(e) {
          return (mc = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function gc(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function bc(e, t) {
          return (bc =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function yc() {
          var e = xc([
            '\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n\n    uniform float shapeSides;\n    uniform vec3 color1;\n    uniform vec3 color2;\n    uniform float opacity;\n    uniform float time;\n    varying float vId;\n    varying float vSize;\n\n    // src: https://thebookofshaders.com/07/\n    float polygonDf(vec2 st, float N) {\n        if (N == 0.0) {\n            return distance(st, vec2(0.5));\n        } else {\n            st = st * 2.0 - 1.0;\n            float a = atan(st.x,st.y)+PI * 0.5;\n            float r = TWO_PI/N;\n            return cos(floor(.5+a/r)*r-a)*length(st);\n        }\n    }\n\n    float random (vec2 st) {\n        return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n    }\n\n    void main() {\n        vec3 color = mod(vId, 4.0) == 0.0 ? color2 : color1;\n        vec2 uv = gl_PointCoord;\n        float df = polygonDf(uv + random(uv) * 0.05, shapeSides);\n        float glowAlpha = smoothstep(0.5, 0.0, df) * 0.08;\n        float distanceAlpha = mix(1.0, 0.4, smoothstep(0.0, 0.2, vSize));\n        gl_FragColor = vec4(color * distanceAlpha, distanceAlpha * opacity * glowAlpha * distanceAlpha);\n    }\n',
          ]);
          return (
            (yc = function () {
              return e;
            }),
            e
          );
        }
        function wc() {
          var e = xc([
            '\n    ',
            '\n    attribute float id;\n    uniform float time;\n    uniform vec2 size;\n    uniform vec2 dofAmount;\n    uniform vec3 dofFocus;\n    uniform vec2 resolution;\n    varying float vId;\n    varying float vSize;\n    void main() {\n        vId = id;\n        vec4 transformed = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        ',
            '\n        gl_Position = transformed;\n        float scale = resolution.y / 800.0;\n        gl_PointSize = mix(size.x * scale, size.y * scale, vSize);\n    }\n',
          ]);
          return (
            (wc = function () {
              return e;
            }),
            e
          );
        }
        function xc(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var Pc,
          _c = Mt(wc(), da, ya),
          kc = Mt(yc()),
          Oc = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.shapeSides,
                a = void 0 === o ? 5 : o,
                u = r.size,
                l = void 0 === u ? new $e.Vector2(10, 35) : u,
                c = r.color1,
                p = void 0 === c ? new $e.Color('#333333') : c,
                h = r.color2,
                f = void 0 === h ? new $e.Color('#333333') : h,
                d = r.opacity,
                v = void 0 === d ? 1 : d,
                m = r.dofAmount,
                g = void 0 === m ? new $e.Vector2(7, 15) : m,
                b = r.dofFocus,
                y = void 0 === b ? new $e.Vector3() : b,
                w = r.resolution,
                x = void 0 === w ? new $e.Vector2() : w;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = mc(t).call(this, {
                  uniforms: {
                    shapeSides: { value: a },
                    size: { value: l },
                    color1: { value: p },
                    color2: { value: f },
                    opacity: { value: v },
                    time: { value: 0 },
                    dofAmount: { value: g },
                    dofFocus: { value: y },
                    resolution: { value: x },
                  },
                  vertexShader: _c,
                  fragmentShader: kc,
                  blending: $e.AdditiveBlending,
                  transparent: !0,
                  depthTest: !1,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? gc(n)
                    : i).type = 'ParticleGlowMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(gc(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && bc(e, t);
              })(t, $e['ShaderMaterial']),
              t
            );
          })(),
          Sc = n(374),
          Tc = n.n(Sc);
        function Ac(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              i = Object.keys(n);
            'function' == typeof Object.getOwnPropertySymbols &&
              (i = i.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                }),
              )),
              i.forEach(function (t) {
                Mc(e, t, n[t]);
              });
          }
          return e;
        }
        function Mc(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function jc(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Fc(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Rc(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Cc(e) {
          return (Cc = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ec(e, t) {
          return (Ec =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Lc,
          Ic = new Tc.a(Math.random()),
          Dc = (Math.PI, new $e.Vector3(0, 1, 0)),
          Uc = new $e.Vector3(),
          zc =
            Object(it.a)(rt)(
              (Pc = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Rc(
                      this,
                      (e = Cc(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      dofFocus: new $e.Vector3(),
                      dofAmount: new $e.Vector3(7, 15),
                      resolution: new $e.Vector2(),
                      particlesPerLink: 30,
                      amount: 14,
                      height: 14,
                      radius: 2.5,
                      frequency: 0.8,
                      phase: 1,
                    }),
                    (n.props = {
                      color1: '#5f661e',
                      color2: '#5f661e',
                      linksColor: '#5f661e',
                      o: 1,
                      particleSizeMin: 15,
                      particleSizeMax: 40,
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && Ec(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (this.t = 0),
                                          this.setupController(),
                                          this.setupOuterParticles(),
                                          this.setupLinks();
                                      case 4:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  jc(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  jc(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupController',
                      value: function () {
                        var e = this;
                        (this.outerParticlesData = []),
                          (this.linksData = []),
                          s.a.times(2, function (t) {
                            var n = Vs(
                              Ac(
                                {},
                                s.a.pick(e.options, [
                                  'height',
                                  'radius',
                                  'frequency',
                                ]),
                                {
                                  crossAt: [],
                                  phase: e.options.phase + t * Math.PI - 0.6,
                                },
                              ),
                            );
                            s.a.times(e.options.amount, function (i) {
                              if (i !== e.options.amount - 3 || 0 !== t) {
                                var r = fs(i / (e.options.amount - 1)),
                                  o = new $e.Object3D();
                                o.position.copy(n.getPoint(r)),
                                  (o.position.x *= 0.5 * (hs(1 - r) + 1)),
                                  (o.position.x +=
                                    1.4 *
                                    Math.sin(73.173 * i + Math.random()) *
                                    (1 - r)),
                                  (o.position.z *= 0.5 * (hs(1 - r) + 1)),
                                  (o.position.z +=
                                    1.4 * Math.sin(25.5836 * i) * (1 - r)),
                                  (o.origin = o.position.clone()),
                                  e.outerParticlesData.push(o);
                              }
                            });
                          });
                        var t = Vs(
                            Ac(
                              {},
                              s.a.pick(this.options, [
                                'height',
                                'radius',
                                'frequency',
                              ]),
                              { crossAt: [], phase: 0.7 * Math.PI },
                            ),
                          ),
                          n = Math.floor(0.33 * this.options.amount);
                        s.a.times(n, function (i) {
                          if (!(i > n - 2)) {
                            var r = i / (n - 1),
                              o = new $e.Object3D();
                            o.position.copy(t.getPoint(r)),
                              (o.position.y -= 1),
                              (o.position.x += Math.sin(
                                173.14353 * i + Math.random(),
                              )),
                              (o.position.z += Math.sin(
                                25.72538 * i - Math.random(),
                              )),
                              (o.origin = o.position.clone()),
                              e.outerParticlesData.push(o);
                          }
                        });
                        var i = new Map();
                        this.outerParticlesData.forEach(function (t) {
                          e.outerParticlesData.forEach(function (n) {
                            if (
                              t !== n &&
                              t.position.distanceTo(n.position) < 1.8
                            ) {
                              var r = i.get(t) || [],
                                o = i.get(n) || [];
                              if (-1 !== s.a.findIndex(r, n)) return;
                              if (-1 !== s.a.findIndex(o, t)) return;
                              r.push(n),
                                o.push(t),
                                i.set(t, r),
                                i.set(n, o),
                                e.linksData.push([t, n]);
                            }
                          });
                        });
                        var r = Vs({
                            frequency: Math.PI / 2,
                            height: this.options.height / 2,
                            radius: 2,
                            crossAt: [],
                            phase: Math.PI / 4,
                          }),
                          o = Math.floor(this.options.amount);
                        s.a.times(o, function (t) {
                          if (!(t > n - 2)) {
                            var i = t / (n - 1),
                              o = new $e.Object3D();
                            o.position.copy(r.getPoint(i)),
                              (o.position.y -= 7),
                              (o.position.x += Math.sin(
                                278.14371 * t + Math.random(),
                              )),
                              (o.position.z += Math.sin(
                                123.72894 * t - Math.random(),
                              )),
                              (o.origin = o.position.clone()),
                              e.outerParticlesData.push(o);
                          }
                        });
                      },
                    },
                    {
                      key: 'getFlattenOuterParticlePositions',
                      value: function () {
                        return s.a.flatten(
                          this.outerParticlesData.map(function (e) {
                            return [
                              e.position.toArray(),
                              e.children.map(function (e) {
                                return e.position.toArray();
                              }),
                            ];
                          }),
                        );
                      },
                    },
                    {
                      key: 'setupOuterParticles',
                      value: function () {
                        var e = this.getFlattenOuterParticlePositions();
                        this.outerParticlesGeometry = new $e.BufferGeometry();
                        var t = new Float32Array(s.a.range(e.length / 3));
                        this.outerParticlesGeometry.addAttribute(
                          'id',
                          new $e.BufferAttribute(t, 1),
                        );
                        var n = new Float32Array(e);
                        this.outerParticlesGeometry.addAttribute(
                          'position',
                          new $e.BufferAttribute(n, 3),
                        ),
                          (this.outerParticlesMaterial = new vc({
                            shapeSides: 0,
                            size: new $e.Vector2(
                              this.props.particleSizeMin,
                              this.props.particleSizeMax,
                            ),
                            color1: new $e.Color(this.props.color1),
                            opacity: this.props.o,
                            dofFocus: this.options.dofFocus,
                            dofAmount: this.options.dofAmount,
                            resolution: this.options.resolution,
                          })),
                          (this.outerParticles = new $e.Points(
                            this.outerParticlesGeometry,
                            this.outerParticlesMaterial,
                          )),
                          (this.outerParticles.renderOrder = 1),
                          this.object.add(this.outerParticles),
                          (this.glowMaterial = new Oc({
                            shapeSides: 0,
                            size: new $e.Vector2(
                              2 * this.props.particleSizeMin,
                              2 * this.props.particleSizeMax,
                            ),
                            color1: new $e.Color(this.props.color1),
                            opacity: 1.2 * this.props.o,
                            dofFocus: this.options.dofFocus,
                            dofAmount: this.options.dofAmount,
                            resolution: this.options.resolution,
                          })),
                          (this.glow = new $e.Points(
                            this.outerParticlesGeometry,
                            this.glowMaterial,
                          )),
                          (this.glow.renderOrder = 0),
                          this.object.add(this.glow);
                      },
                    },
                    {
                      key: 'setupLinks',
                      value: function () {
                        var e = this;
                        this.links = [];
                        var t = this.options.particlesPerLink,
                          n = new $e.BufferGeometry(),
                          i = new Float32Array(s.a.range(t));
                        n.addAttribute('id', new $e.BufferAttribute(i, 1));
                        var r = new Float32Array(
                          s.a.flatten(
                            s.a.range(t).map(function (e) {
                              var n =
                                e + Object(o.a)(Math.random(), 0, 1, -0.8, 0.8);
                              return [0, Object(o.a)(n, 0, t - 1, 0.5, -0.5), 0];
                            }),
                          ),
                        );
                        n.addAttribute('position', new $e.BufferAttribute(r, 3));
                        var a = new Ma({
                          color: new $e.Color(this.props.linkMaterial),
                          dofFocus: this.options.dofFocus,
                          dofAmount: this.options.dofAmount,
                          size: new $e.Vector2(20, 50),
                          opacity: 0.8,
                          resolution: this.options.resolution,
                        });
                        (this.linkMaterial = a),
                          this.linksData.forEach(function (t) {
                            var i = new $e.Points(n, a);
                            e.links.push({ mesh: i, from: t[0], to: t[1] }),
                              e.object.add(i);
                          });
                      },
                    },
                    {
                      key: 'setColor1',
                      value: function (e) {
                        this.outerParticlesMaterial.color1.setStyle(e);
                      },
                    },
                    {
                      key: 'setColor2',
                      value: function (e) {
                        this.outerParticlesMaterial.color2.setStyle(e);
                      },
                    },
                    {
                      key: 'setLinksColor',
                      value: function (e) {
                        this.linkMaterial.color.setStyle(e);
                      },
                    },
                    {
                      key: 'setO',
                      value: function (e) {
                        this.outerParticlesMaterial.opacity = e;
                      },
                    },
                    {
                      key: 'setParticleSizeMin',
                      value: function (e) {
                        this.outerParticlesMaterial.size.setX(e);
                      },
                    },
                    {
                      key: 'setParticleSizeMax',
                      value: function (e) {
                        this.outerParticlesMaterial.size.setY(e);
                      },
                    },
                    {
                      key: 'whileV',
                      value: function (e) {
                        var t = this;
                        this.t += e;
                        var n = this.t / 1e5;
                        this.outerParticlesData.forEach(function (e) {
                          Uc.copy(e.origin),
                            t.object.localToWorld(Uc),
                            Uc.multiplyScalar(0.1);
                          var i = Ic.noise3D(
                            Uc.x + 100 + n,
                            Uc.y + 100 + n,
                            Uc.z + n,
                          );
                          Uc.copy(e.origin)
                            .normalize()
                            .multiplyScalar(
                              1.5 * i * Object(o.a)(e.origin.y, 0, -10, 1, 0, !0),
                            ),
                            e.position
                              .copy(e.origin)
                              .addScalar(
                                0.2 *
                                  i *
                                  Object(o.a)(e.origin.y, 0, -10, 1, 0, !0),
                              )
                              .add(Uc);
                        }),
                          this.links.forEach(function (e) {
                            var t = e.mesh;
                            t.position
                              .copy(e.from.position)
                              .lerp(e.to.position, 0.5),
                              (t.scale.y = e.from.position.distanceTo(
                                e.to.position,
                              )),
                              t.quaternion.setFromUnitVectors(
                                Dc,
                                e.to.position
                                  .clone()
                                  .sub(e.from.position)
                                  .normalize(),
                              );
                          }),
                          this.outerParticlesGeometry.attributes.position.array.set(
                            this.getFlattenOuterParticlePositions(),
                          ),
                          (this.outerParticlesGeometry.attributes.position.needsUpdate = !0);
                      },
                    },
                  ]) && Fc(n.prototype, i),
                  r && Fc(n, r),
                  t
                );
              })()),
            ) || Pc,
          Nc = {
            view: {
              pX: 0,
              pY: 0,
              pZ: 0,
              s: 1,
              rX: 0,
              rY: 0,
              rZ: 0,
              v: !0,
              active: !0,
              progress: 0.5,
            },
            title: {
              pX: -237.30208333333331,
              pY: 0,
              pZ: 0,
              s: 1,
              rX: 0,
              rY: 0,
              rZ: 0,
              v: !1,
            },
            bg: {
              pX: 0,
              pY: 0,
              pZ: 0,
              s: 1,
              rX: 0,
              rY: 0,
              rZ: 0,
              v: !0,
              baseColor: '#05190d',
              accentColor1: '#262808',
              accentColor2: '#0b3838',
              opacity: 1,
            },
            cluster: {
              pX: 0,
              pZ: -1,
              s: 1,
              rX: 0,
              rY: 0,
              rZ: 0,
              v: !0,
              color1: '#7ddbbf',
              color2: '#eeff30',
              linksColor: '#345b46',
              o: 1,
              particleSizeMin: 150,
              particleSizeMax: 150,
            },
            stream: {
              pX: 4.3,
              pY: 1.08,
              pZ: 2.7600000000000002,
              s: 1.34,
              rX: 0.02,
              rY: 0,
              rZ: -0.66,
              v: !0,
              startProgress: 0,
              endProgress: 0.5,
              color: '#be4141',
              o: 1,
              particleSizeMin: 10,
              particleSizeMax: 27.18,
            },
            stream2: {
              pX: 5.94,
              pY: 1.1300000000000001,
              pZ: -7.6000000000000005,
              s: 3.45,
              rX: 0,
              rY: 0,
              rZ: -0.73,
              v: !0,
              startProgress: 0,
              endProgress: 0.5,
              color: '#be8b42',
              o: 1,
              particleSizeMin: 35,
              particleSizeMax: 35,
            },
            area: {
              pX: 0,
              pY: -2.85,
              pZ: 0,
              s: 1.02,
              rX: 0,
              rY: 137.18299999997657,
              rZ: -1,
              v: !0,
              color: '#ad1818',
              o: 0.75,
              particleSizeMin: 10,
              particleSizeMax: 20,
            },
            area2: {
              pX: 0,
              pY: -4.73,
              pZ: -1.5,
              s: 1,
              rX: 0,
              rY: 152.42100000004933,
              rZ: -1,
              v: !0,
              color: '#41be91',
              o: 0.3,
              particleSizeMin: 3,
              particleSizeMax: 120,
            },
            area3: {
              pX: 0,
              pY: -6.19,
              pZ: -1.5,
              s: 1.24,
              rX: 0,
              rY: 155.493000000064,
              rZ: 0,
              v: !0,
              color: '#ffffff',
              o: 0.14,
              particleSizeMin: 3,
              particleSizeMax: 120,
            },
          };
        function Bc(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              i = Object.keys(n);
            'function' == typeof Object.getOwnPropertySymbols &&
              (i = i.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                }),
              )),
              i.forEach(function (t) {
                Vc(e, t, n[t]);
              });
          }
          return e;
        }
        function Vc(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function Yc(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Hc(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Yc(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Yc(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Xc(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Gc(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Wc(e) {
          return (Wc = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Qc(e, t) {
          return (Qc =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var qc = Object(u.a)(),
          Zc =
            Object(it.a)(rt)(
              (Lc = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Gc(
                      this,
                      (e = Wc(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      size: 1,
                      layers: { BG_LAYER: 1, SCENE_LAYER: 0 },
                      resolution: new $e.Vector2(innerWidth, innerHeight),
                    }),
                    (n.props = {
                      vh: [
                        qc,
                        function (e) {
                          return e.viewport.height;
                        },
                      ],
                      visible: !1,
                      active: [
                        qc,
                        function (e) {
                          return 'data' === e.currentSubSection;
                        },
                      ],
                      progress: 0.5,
                      viewportHeight: [
                        qc,
                        function (e) {
                          return e.viewport.height;
                        },
                      ],
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && Qc(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = Hc(
                          regeneratorRuntime.mark(function e() {
                            var t, n, i, r;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (t = this.options.resolution),
                                        (this.dataRyTime = 0),
                                        (this.sceneWrapper = new $e.Object3D()),
                                        this.object.add(this.sceneWrapper),
                                        (e.next = 6),
                                        this.setupCopy()
                                      );
                                    case 6:
                                      return (
                                        (e.next = 8),
                                        new Ya().setup({
                                          options: {
                                            width: 20,
                                            height: 15,
                                            farMin: 55,
                                            farMax: 55,
                                          },
                                        })
                                      );
                                    case 8:
                                      return (
                                        (this.dofController = e.sent),
                                        (n = this.dofController),
                                        (i = n.dofFocus),
                                        (r = n.dofAmount),
                                        (e.next = 12),
                                        new na().setup({
                                          options: {
                                            layer: this.options.layers.BG_LAYER,
                                            renderOrder: 1,
                                            height: 2,
                                          },
                                          props: Bc({}, Nc.bg, {
                                            pY: [
                                              this.store,
                                              function (e) {
                                                return Object(o.a)(
                                                  e.progress,
                                                  0,
                                                  1,
                                                  -e.vh / 2,
                                                  e.vh / 2,
                                                  !0,
                                                );
                                              },
                                            ],
                                            opacity: [
                                              this.store,
                                              function (e) {
                                                return e.progress < 0
                                                  ? 0
                                                  : Object(o.a)(
                                                      e.progress,
                                                      0.8,
                                                      1,
                                                      1,
                                                      0,
                                                      !0,
                                                    );
                                              },
                                            ],
                                          }),
                                        })
                                      );
                                    case 12:
                                      return (
                                        (this.bg = e.sent),
                                        this.sceneWrapper.add(this.bg.object),
                                        (e.next = 16),
                                        new zc().setup({
                                          options: {
                                            dofFocus: i,
                                            dofAmount: r,
                                            resolution: t,
                                          },
                                          props: Bc({}, Nc.cluster, {
                                            pY: [
                                              this.store,
                                              function (e) {
                                                return Object(o.a)(
                                                  e.progress,
                                                  -0.7,
                                                  1.5,
                                                  -10,
                                                  11,
                                                );
                                              },
                                            ],
                                          }),
                                        })
                                      );
                                    case 16:
                                      if (
                                        ((this.cluster = e.sent),
                                        this.sceneWrapper.add(
                                          this.cluster.object,
                                        ),
                                        c.a.isMobile)
                                      ) {
                                        e.next = 31;
                                        break;
                                      }
                                      return (
                                        (e.next = 21),
                                        new qs().setup({
                                          options: {
                                            height: 4,
                                            particlesAmount: 200,
                                            radius: 2,
                                            frequency: 0.1,
                                            radius2: 0.3,
                                            frequency2: 100,
                                            phase: 0.05 + 0.5 * Math.PI,
                                            thread: !1,
                                            randomness: 0.3,
                                            dofFocus: i,
                                            dofAmount: r,
                                            resolution: t,
                                          },
                                          props: Nc.stream || {},
                                        })
                                      );
                                    case 21:
                                      return (
                                        (this.stream = e.sent),
                                        this.sceneWrapper.add(this.stream.object),
                                        (e.next = 25),
                                        new qs().setup({
                                          options: {
                                            height: 2,
                                            particlesAmount: 50,
                                            radius: 1.5,
                                            frequency: 0.1,
                                            radius2: 0.3,
                                            frequency2: 100,
                                            phase: 0.05 + 0.5 * Math.PI,
                                            thread: !1,
                                            randomness: 0.5,
                                            dofFocus: i,
                                            dofAmount: r,
                                            resolution: t,
                                          },
                                          props: Nc.stream2 || {},
                                        })
                                      );
                                    case 25:
                                      return (
                                        (this.stream2 = e.sent),
                                        this.sceneWrapper.add(
                                          this.stream2.object,
                                        ),
                                        (e.next = 29),
                                        new La().setup({
                                          options: {
                                            particlesAmount: 100,
                                            dofFocus: i,
                                            dofAmount: r,
                                            resolution: t,
                                          },
                                          props: Nc.area3,
                                        })
                                      );
                                    case 29:
                                      (this.area3 = e.sent),
                                        this.sceneWrapper.add(this.area3.object);
                                    case 31:
                                      return (
                                        (e.next = 33),
                                        new La().setup({
                                          options: {
                                            dofFocus: i,
                                            dofAmount: r,
                                            resolution: t,
                                          },
                                          props: Nc.area,
                                        })
                                      );
                                    case 33:
                                      return (
                                        (this.area = e.sent),
                                        this.sceneWrapper.add(this.area.object),
                                        (e.next = 37),
                                        new La().setup({
                                          options: {
                                            dofFocus: i,
                                            dofAmount: r,
                                            resolution: t,
                                          },
                                          props: Nc.area2,
                                        })
                                      );
                                    case 37:
                                      (this.area2 = e.sent),
                                        this.sceneWrapper.add(this.area2.object);
                                    case 39:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupCopy',
                      value: (function () {
                        var e = Hc(
                          regeneratorRuntime.mark(function e() {
                            var t = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (e.next = 2), new yo();
                                    case 2:
                                      return (
                                        (this.title = e.sent),
                                        (e.next = 5),
                                        this.title.setup({
                                          options: {
                                            layer: this.options.layers.UI_LAYER,
                                            text: p['second-section-title'],
                                            position: c.a.isMobile
                                              ? 'bottom-left'
                                              : 'top-left',
                                            animationDuration: 1.5,
                                            animationStagger: 0.02,
                                          },
                                          props: {
                                            fontSize: [
                                              qc,
                                              function (e) {
                                                return (
                                                  (c.a.isMobile ? 110 : 100) *
                                                  e.viewport.scale
                                                );
                                              },
                                            ],
                                            width: [
                                              qc,
                                              function (e) {
                                                return (
                                                  (c.a.isMobile ? 920 : 800) *
                                                  e.viewport.scale
                                                );
                                              },
                                            ],
                                            pX: [
                                              qc,
                                              function (e) {
                                                return -0.42 * e.viewport.width;
                                              },
                                            ],
                                          },
                                        })
                                      );
                                    case 5:
                                      return (
                                        this.object.add(this.title.object),
                                        (e.next = 8),
                                        new Ao()
                                      );
                                    case 8:
                                      return (
                                        (this.bodyText = e.sent),
                                        (e.next = 11),
                                        this.bodyText.setup({
                                          options: {
                                            layer: this.options.layers.UI_LAYER,
                                            position: c.a.isMobile
                                              ? 'bottom-left'
                                              : 'top-left',
                                            text: p['second-section-body'],
                                          },
                                          props: {
                                            fontSize: [
                                              qc,
                                              function (e) {
                                                return (
                                                  (c.a.isMobile ? 40 : 20) *
                                                  e.viewport.scale
                                                );
                                              },
                                            ],
                                            width: [
                                              qc,
                                              function (e) {
                                                return (
                                                  (c.a.isMobile ? 920 : 700) *
                                                  e.viewport.scale
                                                );
                                              },
                                            ],
                                            pX: [
                                              qc,
                                              function (e) {
                                                return -0.42 * e.viewport.width;
                                              },
                                            ],
                                          },
                                        })
                                      );
                                    case 11:
                                      this.object.add(this.bodyText.object),
                                        this.title.store.compute(function (e) {
                                          var n = e.height,
                                            i = t.bodyText.props.height,
                                            r =
                                              qc.state.viewport.scale *
                                              (c.a.isMobile ? 80 : 50),
                                            o = n + r + i,
                                            a = 0.6 * o,
                                            s = -n - r + 0.6 * o,
                                            u =
                                              -qc.state.viewport.height / 2 +
                                              300 * qc.state.viewport.scale,
                                            l = u + i + r;
                                          (t.title.props.pY = c.a.isMobile
                                            ? l
                                            : a),
                                            (t.bodyText.props.pY = c.a.isMobile
                                              ? u
                                              : s);
                                        });
                                    case 13:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'whileV',
                      value: function () {
                        var e, t;
                        (this.dataRyTime += 0.001),
                          (this.cluster.props.rY =
                            Object(o.a)(
                              ((e = Math.min(this.props.progress, 1)),
                              1 - (t = 1 - e) * t),
                              0,
                              1,
                              0,
                              Math.PI,
                            ) + this.dataRyTime);
                      },
                    },
                    {
                      key: 'onActive',
                      value: function () {
                        this.title.show({ delay: 0.4 }),
                          this.bodyText.show({ delay: 0.9 });
                      },
                    },
                    {
                      key: 'offActive',
                      value: function () {
                        this.title.hide(), this.bodyText.hide({ delay: 0 });
                      },
                    },
                    {
                      key: 'setProgress',
                      value: function (e) {
                        this.sceneWrapper.position.y = Object(o.a)(
                          e,
                          0,
                          1,
                          -2,
                          2,
                        );
                      },
                    },
                  ]) && Xc(n.prototype, i),
                  r && Xc(n, r),
                  t
                );
              })()),
            ) || Lc,
          Kc = function (e) {
            var t = e.clone(!0),
              n = {};
            e.traverse(function (e) {
              e.isSkinnedMesh && (n[e.name] = e);
            });
            var i = {},
              r = {};
            for (var o in (t.traverse(function (e) {
              e.isBone && (i[e.name] = e), e.isSkinnedMesh && (r[e.name] = e);
            }),
            n)) {
              for (
                var a = n[o].skeleton, s = r[o], u = [], l = 0;
                l < a.bones.length;
                ++l
              ) {
                var c = i[a.bones[l].name];
                u.push(c);
              }
              s.bind(new THREE.Skeleton(u, a.boneInverses), s.matrixWorld);
            }
            return t;
          },
          $c = n(375),
          Jc = {
            modes: {},
            uniforms: { time: { value: 0, type: 'f' } },
            vertexShader: {
              uniforms:
                '\n            uniform float uTime;\n\n            varying vec2 vN;\n            \n            // varying vec3 vPos;\n            // varying vec4 vPosTransformed;\n        ',
              postTransform:
                '\n            // vPos = position;\n\n            vec4 p = vec4( position, 1. );\n\n            vec3 e = normalize( vec3( modelViewMatrix * p ) );\n            vec3 n = normalize( normalMatrix * normal );\n            \n            vec3 r = reflect( e, n );\n            float m = 2. * sqrt(\n                pow( r.x, 2. ) +\n                pow( r.y, 2. ) +\n                pow( r.z + 1., 2. )\n            );\n            vN = r.xy / m + .5;\n\n            // mat4 tfMatrix = mat4(-0.12727922061357855, 0, 0.12727922061357855, 0, 0, 0.18, 0, 0, -0.12727922061357855, 0, -0.12727922061357855, 0, 0.03054701294725885, 0.006624898687005043, 0.03054701294725885, 1);\n\n            // vPosTransformed = tfMatrix * vec4(position, 1.0);\n        ',
            },
            fragmentShader: {
              uniforms:
                '\n            uniform float uTime;\n\n            uniform sampler2D tMatCapMult;\n            uniform sampler2D tMatCapScreen;\n    \n            varying vec2 vN;\n           \n            // varying vec3 vPos;\n            // varying vec4 vPosTransformed;\n        ',
              functions:
                '\n            // vec3 blendNormal(vec3 base, vec3 blend) {\n            //     return blend;\n            // }\n\n            // vec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n            //     return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n            // }\n\n            vec3 blendMultiply(vec3 base, vec3 blend) {\n                return base*blend;\n            }\n\n            vec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n                return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n            }\n\n            float blendScreen(float base, float blend) {\n                return 1.0-((1.0-base)*(1.0-blend));\n            }\n\n            vec3 blendScreen(vec3 base, vec3 blend) {\n                return vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\n            }\n\n\n            float blendColorBurn(float base, float blend) {\n                return (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n            }\n\n            vec3 blendColorBurn(vec3 base, vec3 blend) {\n                return vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\n            }\n\n            vec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n                return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n            }\n\n            float luma(vec3 color) {\n                return dot(color, vec3(0.299, 0.587, 0.114));\n            }\n        ',
              postFragColor:
                '\n\n            vec4 matcapMultColor = texture2D( tMatCapMult, uv );\n            matcapMultColor = matcapTexelToLinear( matcapMultColor );\n\n            vec4 matcapScreenColor = texture2D( tMatCapScreen, uv );\n            matcapScreenColor = matcapTexelToLinear( matcapScreenColor );\n\n            vec3 cColorBurn = vec3(0.27, 0.88, 0.97);\n            // vec3 cColorBurn = vec3(0.27, 0.88, 0.50);\n\n            outgoingLight = blendMultiply(diffuseColor.rgb, matcapMultColor.rgb);\n            outgoingLight = blendColorBurn(outgoingLight.rgb, cColorBurn.rgb, .3);\n            outgoingLight = blendScreen(outgoingLight.rgb, matcapScreenColor.rgb);\n            // outgoingLight = blendColorBurn(outgoingLight.rgb, cColorBurn.rgb, .3);\n            \n            gl_FragColor = vec4(outgoingLight, diffuseColor.a);\n        ',
            },
          };
        function ep(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function tp(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function np(e) {
          return (np = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function ip(e, t) {
          return (ip =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var rp,
          op = (function (e) {
            function t(e) {
              var n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t),
                ((e = Object.assign(
                  {},
                  {
                    map: null,
                    mapMatCapScreen: null,
                    mapMatCapMult: null,
                    opacity: 1,
                  },
                  e,
                )).paramsGUI = Object.assign(
                  {
                    shininess: 0.2,
                    emissiveIntensity: 0,
                    cColor: '#cecece',
                    cSpecular: '#ffffff',
                    cEmissive: '#000000',
                  },
                  e.paramsGUI,
                ));
              var i = Object.assign({}, e);
              delete i.mapMatCapScreen,
                delete i.mapMatCapMult,
                delete i.paramsGUI,
                delete i.hasGUI;
              var r = Ku('matcap'),
                o = qu.vertexHooks,
                a = qu.fragmentHooks,
                s = Object.assign({}, e.vertexHooks || {}, o),
                u = $u(r.ShaderLib.vertexShader, s, Jc.vertexShader || {}),
                l = Object.assign({}, e.fragmentHooks || {}, a),
                c = $u(r.ShaderLib.fragmentShader, l, Jc.fragmentShader || {}),
                p = {
                  tMatCapMult: { type: 't', value: e.mapMatCapMult },
                  tMatCapScreen: { type: 't', value: e.mapMatCapScreen },
                  uTime: { type: 'f', value: 0 },
                },
                h = Object.assign({}, r.ShaderLib.uniforms, p || {});
              return (
                ((n = tp(
                  this,
                  np(t).call(this, Object.assign({}, i)),
                )).bumpScale = 0.03),
                (n.vertexShader = u),
                (n.fragmentShader = c),
                (n.uniforms = h),
                (n.type = 'KernelMaterial'),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && ip(e, t);
              })(t, $e['MeshMatcapMaterial']),
              (n = t),
              (i = [
                {
                  key: 'onBeforeCompile',
                  value: function (e) {
                    this.avoidCache(',.');
                  },
                },
                { key: 'avoidCache', value: function (e) {} },
              ]) && ep(n.prototype, i),
              r && ep(n, r),
              t
            );
          })(),
          ap = {
            pX: 0,
            pY: 0,
            pZ: 0,
            s: 1,
            rX: 0,
            rY: 0,
            rZ: 0,
            v: !0,
            baseColor: '#091916',
            accentColor1: '#0c2d21',
            accentColor2: '#0a1c38',
            opacity: 1,
          };
        function sp(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              i = Object.keys(n);
            'function' == typeof Object.getOwnPropertySymbols &&
              (i = i.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                }),
              )),
              i.forEach(function (t) {
                up(e, t, n[t]);
              });
          }
          return e;
        }
        function up(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function lp(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function cp(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                lp(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                lp(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function pp(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function hp(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function fp(e) {
          return (fp = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function dp(e, t) {
          return (dp =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var vp = new Tc.a(Math.random()),
          mp = Object(u.a)(),
          gp = new $c.a(),
          bp = function (e) {
            return new Promise(function (t, n) {
              gp.load(
                e,
                function (e) {
                  return t(e);
                },
                null,
                n,
              );
            });
          },
          yp = new $e.Vector3(),
          wp =
            Object(it.a)(rt)(
              (rp = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = hp(
                      this,
                      (e = fp(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      size: 1,
                      layers: { BG_LAYER: 1, SCENE_LAYER: 0, UI_LAYER: 3 },
                      resolution: new $e.Vector2(
                        window.innerWidth,
                        window.innerHeight,
                      ),
                    }),
                    (n.props = {
                      vh: [
                        mp,
                        function (e) {
                          return e.viewport.height;
                        },
                      ],
                      visible: !1,
                      active: [
                        mp,
                        function (e) {
                          return 'pot' === e.currentSubSection;
                        },
                      ],
                      progress: 0.5,
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && dp(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = cp(
                          regeneratorRuntime.mark(function e() {
                            var t = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.camera = this.options.camera),
                                        (this.raycaster = new $e.Raycaster()),
                                        (this.mouse = new $e.Vector2()),
                                        (this.sceneWrapper = new $e.Object3D()),
                                        this.object.add(this.sceneWrapper),
                                        (this.plantBones = []),
                                        (this.premouse = [0, 0]),
                                        (this.ticker = 0),
                                        (this.progress = 0),
                                        (this.preProgress = 0),
                                        (this.progressSpeed = 0),
                                        (e.next = 13),
                                        this.setupCopy()
                                      );
                                    case 13:
                                      return (
                                        (e.next = 15),
                                        new na().setup({
                                          options: {
                                            layer: this.options.layers.BG_LAYER,
                                            accent1Position: new $e.Vector2(
                                              0.2,
                                              0.8,
                                            ),
                                            accent2Position: new $e.Vector2(
                                              0.8,
                                              0.2,
                                            ),
                                            renderOrder: 0,
                                            height: 2,
                                          },
                                          props: sp({}, ap, {
                                            pY: [
                                              this.store,
                                              function (e) {
                                                return Object(o.a)(
                                                  e.progress,
                                                  0,
                                                  1,
                                                  -e.vh / 2,
                                                  e.vh / 2,
                                                  !0,
                                                );
                                              },
                                            ],
                                            opacity: [
                                              this.store,
                                              function (e) {
                                                return e.progress < 0 ? 0 : 1;
                                              },
                                            ],
                                          }),
                                        })
                                      );
                                    case 15:
                                      return (
                                        (this.bg = e.sent),
                                        this.sceneWrapper.add(this.bg.object),
                                        (e.next = 19),
                                        Gn('pot-diffuse')
                                      );
                                    case 19:
                                      return (
                                        (this.potTexture = e.sent),
                                        (e.next = 22),
                                        Gn('pot-bg-diffuse')
                                      );
                                    case 22:
                                      return (
                                        (this.bgPotTexture = e.sent),
                                        (e.next = 25),
                                        Promise.all(
                                          [
                                            cp(
                                              regeneratorRuntime.mark(
                                                function e() {
                                                  return regeneratorRuntime.wrap(
                                                    function (e) {
                                                      for (;;)
                                                        switch (
                                                          (e.prev = e.next)
                                                        ) {
                                                          case 0:
                                                            return (
                                                              (e.t0 = t),
                                                              (e.next = 3),
                                                              bp(
                                                                '/assets/pot3.gltf',
                                                              )
                                                            );
                                                          case 3:
                                                            return (
                                                              (e.t1 = e.sent),
                                                              e.abrupt(
                                                                'return',
                                                                e.t0.setupPot.call(
                                                                  e.t0,
                                                                  e.t1,
                                                                ),
                                                              )
                                                            );
                                                          case 5:
                                                          case 'end':
                                                            return e.stop();
                                                        }
                                                    },
                                                    e,
                                                  );
                                                },
                                              ),
                                            ),
                                            cp(
                                              regeneratorRuntime.mark(
                                                function e() {
                                                  return regeneratorRuntime.wrap(
                                                    function (e) {
                                                      for (;;)
                                                        switch (
                                                          (e.prev = e.next)
                                                        ) {
                                                          case 0:
                                                            return (
                                                              (e.t0 = t),
                                                              (e.next = 3),
                                                              bp(
                                                                '/assets/bg_pot.gltf',
                                                              )
                                                            );
                                                          case 3:
                                                            return (
                                                              (e.t1 = e.sent),
                                                              e.abrupt(
                                                                'return',
                                                                e.t0.setupBGPot.call(
                                                                  e.t0,
                                                                  e.t1,
                                                                ),
                                                              )
                                                            );
                                                          case 5:
                                                          case 'end':
                                                            return e.stop();
                                                        }
                                                    },
                                                    e,
                                                  );
                                                },
                                              ),
                                            ),
                                            cp(
                                              regeneratorRuntime.mark(
                                                function e() {
                                                  return regeneratorRuntime.wrap(
                                                    function (e) {
                                                      for (;;)
                                                        switch (
                                                          (e.prev = e.next)
                                                        ) {
                                                          case 0:
                                                            return (
                                                              (e.t0 = t),
                                                              (e.next = 3),
                                                              bp(
                                                                '/models/kernel/KERNAL.gltf',
                                                              )
                                                            );
                                                          case 3:
                                                            return (
                                                              (e.t1 = e.sent),
                                                              e.abrupt(
                                                                'return',
                                                                e.t0.setupKernel.call(
                                                                  e.t0,
                                                                  e.t1,
                                                                ),
                                                              )
                                                            );
                                                          case 5:
                                                          case 'end':
                                                            return e.stop();
                                                        }
                                                    },
                                                    e,
                                                  );
                                                },
                                              ),
                                            ),
                                          ].map(function (e) {
                                            return e();
                                          }),
                                        )
                                      );
                                    case 25:
                                      this.whileActive();
                                    case 26:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupCopy',
                      value: (function () {
                        var e = cp(
                          regeneratorRuntime.mark(function e() {
                            var t = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (e.next = 2), new yo();
                                    case 2:
                                      return (
                                        (this.title = e.sent),
                                        (e.next = 5),
                                        this.title.setup({
                                          options: {
                                            layer: this.options.layers.UI_LAYER,
                                            text: p['third-section-title'],
                                            position: (c.a.isMobile, 'top-left'),
                                            animationDuration: 1.5,
                                            animationStagger: 0.02,
                                          },
                                          props: {
                                            fontSize: [
                                              mp,
                                              function (e) {
                                                return (
                                                  (c.a.isMobile ? 110 : 100) *
                                                  e.viewport.scale
                                                );
                                              },
                                            ],
                                            width: [
                                              mp,
                                              function (e) {
                                                return (
                                                  (c.a.isMobile ? 920 : 800) *
                                                  e.viewport.scale
                                                );
                                              },
                                            ],
                                            pX: [
                                              mp,
                                              function (e) {
                                                return -0.42 * e.viewport.width;
                                              },
                                            ],
                                          },
                                        })
                                      );
                                    case 5:
                                      return (
                                        this.object.add(this.title.object),
                                        (e.next = 8),
                                        new Ao()
                                      );
                                    case 8:
                                      return (
                                        (this.bodyText = e.sent),
                                        (e.next = 11),
                                        this.bodyText.setup({
                                          options: {
                                            layer: this.options.layers.UI_LAYER,
                                            position: c.a.isMobile
                                              ? 'bottom-left'
                                              : 'top-left',
                                            text: p['third-section-body'],
                                          },
                                          props: {
                                            fontSize: [
                                              mp,
                                              function (e) {
                                                return (
                                                  (c.a.isMobile ? 40 : 20) *
                                                  e.viewport.scale
                                                );
                                              },
                                            ],
                                            width: [
                                              mp,
                                              function (e) {
                                                return (
                                                  c.a.isMobile,
                                                  700 * e.viewport.scale
                                                );
                                              },
                                            ],
                                            pX: [
                                              mp,
                                              function (e) {
                                                return (
                                                  e.viewport.width *
                                                  (c.a.isMobile ? -0.18 : -0.42)
                                                );
                                              },
                                            ],
                                          },
                                        })
                                      );
                                    case 11:
                                      this.object.add(this.bodyText.object),
                                        this.title.store.compute(function (e) {
                                          var n = mp.state.viewport,
                                            i = n.height,
                                            r = n.scale,
                                            o = e.height,
                                            a = t.bodyText.props.height,
                                            s = r * (c.a.isMobile ? 80 : 50),
                                            u = o + s + a,
                                            l = 0.6 * u,
                                            p = -o - s + 0.6 * u,
                                            h = 0.35 * i,
                                            f = -0.45 * i;
                                          (t.title.props.pY = c.a.isMobile
                                            ? h
                                            : l),
                                            (t.bodyText.props.pY = c.a.isMobile
                                              ? f
                                              : p);
                                        });
                                    case 13:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'incrementalScaleRoots',
                      value: function (e, t, n, i, r) {
                        var o = Math.max(0, Math.min(r, 10 * t - n * i)),
                          a = 0.05 * (o - e.userData.levelScale);
                        (e.userData.rotSpeed += a),
                          e.userData.parent &&
                            (e.userData.parent.userData.rotSpeed +=
                              0.1 * e.userData.rotSpeed),
                          (e.userData.levelScale = o),
                          e.scale.set(o, o, o),
                          e.userData.parent && e.userData.parent.userData.rot;
                        for (var s = 0; s < e.children.length; s++)
                          this.incrementalScaleRoots(
                            e.children[s],
                            t,
                            n + 1,
                            i,
                            1,
                          );
                      },
                    },
                    {
                      key: 'setBaseRotation',
                      value: function (e, t, n) {
                        n && n.push(e),
                          (e.userData.rot = new $e.Vector3().copy(e.rotation)),
                          (e.userData.parent = t),
                          (e.userData.rotSpeed = 0),
                          (e.userData.levelScale = 0),
                          (e.userData.rotOffset = 0);
                        for (var i = 0; i < e.children.length; i++)
                          this.setBaseRotation(e.children[i], e, n);
                      },
                    },
                    {
                      key: 'setupKernel',
                      value: (function () {
                        var e = cp(
                          regeneratorRuntime.mark(function e(t) {
                            var n, i, r, o, a, s, u, l;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.cornKernels = []),
                                        (e.next = 3),
                                        Gn('map-kernel-diffuse')
                                      );
                                    case 3:
                                      return (
                                        (n = e.sent),
                                        (e.next = 6),
                                        Gn('map-kernel-matcap-mult')
                                      );
                                    case 6:
                                      return (
                                        (i = e.sent),
                                        (e.next = 9),
                                        Gn('map-kernel-matcap-screen')
                                      );
                                    case 9:
                                      for (
                                        r = e.sent,
                                          (this.kernelMesh =
                                            t.scene.children[0]).material = new op(
                                            {
                                              map: n,
                                              mapMatCapScreen: r,
                                              mapMatCapMult: i,
                                              transparent: !0,
                                            },
                                          ),
                                          o = [
                                            {
                                              position: { x: 0, y: 1.85, z: 0 },
                                              rotation: {
                                                x: 0.6 * Math.PI,
                                                y: 0,
                                                z: 0,
                                              },
                                            },
                                            {
                                              position: {
                                                x: 0.2,
                                                y: 1.35,
                                                z: 7.4 - 7,
                                              },
                                              rotation: {
                                                x: 0.6 * Math.PI,
                                                y: 3.5,
                                                z: 1.9,
                                              },
                                            },
                                            {
                                              position: {
                                                x: 0.2,
                                                y: 2.25,
                                                z: -1,
                                              },
                                              rotation: {
                                                x: 0.2 * Math.PI,
                                                y: 0.8,
                                                z: -0.5,
                                              },
                                            },
                                            {
                                              position: {
                                                x: 0.35,
                                                y: 2.85,
                                                z: 0.5,
                                              },
                                              rotation: {
                                                x: 0.3 * Math.PI,
                                                y: 2.3,
                                                z: -2.5,
                                              },
                                            },
                                            {
                                              position: {
                                                x: 0.35,
                                                y: 2.45,
                                                z: 7.2 - 7,
                                              },
                                              rotation: {
                                                x: 0.6 * Math.PI,
                                                y: 0.3,
                                                z: 2.2,
                                              },
                                            },
                                          ],
                                          this.kernelsWrapper = new $e.Object3D(),
                                          this.sceneWrapper.add(
                                            this.kernelsWrapper,
                                          ),
                                          this.kernelsWrapper.scale.setScalar(3),
                                          a = 0;
                                        a < o.length;
                                        a++
                                      )
                                        (s = Kc(this.kernelMesh)),
                                          this.kernelsWrapper.add(s),
                                          (u = o[a].position),
                                          (l = o[a].rotation),
                                          s.position.set(u.x, u.y, u.z),
                                          (s.origin = s.position.clone()),
                                          s.rotation.set(l.x, l.y, l.z),
                                          s.scale.multiplyScalar(0.06),
                                          s.layers.set(5),
                                          this.cornKernels.push(s);
                                    case 17:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function (t) {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    /******** POT ***************************************************************************************************************************** */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                          /************************************************************************************************************************************************ */
                    {
                      key: 'setupBGPot',
                      value: function (e) {
                        (this.bgPot = e.scene.children[0]),
                          (this.bgContainer = new $e.Object3D()),
                          (this.bgPot2 = Kc(this.bgPot)),
                          (this.bgPot.rotation.z = Math.PI),
                          (this.bgPot2.position.z = 0),
                          (this.bgPot.position.z = -3),
                          (this.bgPot2.position.y = 0.46),
                          (this.bgPot.position.y = 0.46);
                        this.bgPot.scale.set(0.6, 0.6, 0.6),
                          this.bgPot2.scale.set(0.6, 0.6, 0.6);
                        var t = new $e.MeshBasicMaterial({
                          map: this.bgPotTexture,
                          tranparent: !0,
                          side: $e.DoubleSide,
                          alphaTest: 0.2,
                        });
                        (this.bgPot.material = t),
                          (this.bgPot2.material = t),
                          this.bgContainer.add(this.bgPot),
                          this.bgContainer.add(this.bgPot2),
                          this.sceneWrapper.add(this.bgContainer);
                      },
                    },
                    {
                      key: 'setupPot',
                      value: function (e) {
                        (this.mainPotObject = e.scene.children[1]),
                          (this.mainPlantObject = e.scene.children[0]),
                          (this.container = new $e.Object3D());
                        (this.container.rotation.x = 0.5 * -Math.PI),
                          (this.container.position.y = 1.4),
                          (this.container.position.z = 3),
                          this.container.scale.set(0.6, 0.6, 0.6),
                          this.mainPlantObject.scale.set(0.15, 0.15, 0.15),
                          c.a.isMobile &&
                            this.container.scale.set(0.48, 0.48, 0.48);
                        var t = new $e.MeshBasicMaterial({
                            map: this.potTexture,
                            tranparent: !0,
                            alphaTest: 0.5,
                          }),
                          n = new $e.MeshBasicMaterial({
                            map: this.potTexture,
                            tranparent: !0,
                            side: $e.DoubleSide,
                            alphaTest: 0.5,
                          });
                        (n.skinning = !0),
                          this.mainPotObject.children.forEach(function (e) {
                            (e.material = t), e.layers.set(5);
                          }),
                          (this.mainPlantObject.children[1].material = n),
                          this.mainPlantObject.children[1].layers.set(5),
                          (this.mainBone = this.mainPlantObject),
                          (this.mainLeafBone = this.mainPlantObject.children[0].children[1]),
                          (this.mainPotObject.userData.rotSpeed = 0),
                          (this.mainPotObject.userData.rotOffset = 0),
                          this.setBaseRotation(this.mainBone),
                          this.setBaseRotation(
                            this.mainLeafBone,
                            null,
                            this.plantBones,
                          );
                        var i = new $e.BoxGeometry(1, 0.1, 1.5),
                          r = new $e.MeshBasicMaterial({
                            color: 65280,
                            visible: !1,
                          });
                        (this.hitbox = new $e.Mesh(i, r)),
                          (this.hitbox.position.z = 2.4),
                          (this.hitbox.position.y = -0),
                          (this.hitbox.position.x = 0.2),
                          (this.potRotSpeedY = 0),
                          (this.mainPlantObject.position.x = 0.8),
                          (this.mainPlantObject.position.y = 3.8),
                          (this.mainPlantObject.position.z = 14),
                          this.container.add(this.mainPotObject),
                          this.container.add(this.hitbox),
                          this.container.add(this.mainPlantObject),
                          this.sceneWrapper.add(this.container);
                      },
                    },
                    {
                      key: 'onActive',
                      value: function () {
                        this.title.show({ delay: 0.4 }),
                          this.bodyText.show({ delay: 0.9 });
                        for (var e = 0; e < this.plantBones.length; e++) {
                          this.plantBones[e];
                          var t = this.plantBones[e].userData;
                          (t.rotSpeed = 0), (t.rotOffset = 0);
                        }
                      },
                    },
                    {
                      key: 'offActive',
                      value: function () {
                        this.title.hide(), this.bodyText.hide({ delay: 0 });
                      },
                    },
                    {
                      key: 'setProgress',
                      value: function (e) {
                        var t = 0;
                        c.a.isMobile && (t = 0.03);
                        var n = Object(o.a)(e + t, 0, 0.83, -14, -1);
                        if (
                          ((this.progress = e),
                          (this.progressSpeed = this.progress - this.preProgress),
                          (this.sceneWrapper.position.y = n),
                          this.mainPlantObject)
                        ) {
                          var i;
                          (i = Object(o.a)(e + t, 0.65, 0.8, 0, 0.5)),
                            this.mainBone &&
                              this.incrementalScaleRoots(
                                this.mainBone.children[0].children[0],
                                i,
                                0,
                                0.3,
                                0.9,
                              ),
                            this.mainBone &&
                              this.incrementalScaleRoots(
                                this.mainBone.children[0].children[1],
                                i,
                                0,
                                0.3,
                                1.4,
                              );
                        }
                      },
                    },
                    {
                      key: 'whileActive',
                      value: function () {
                        this.ticker++;
                        var e,
                          t = mp.state.pointer.positionNorm;
                        this.hitbox &&
                          ((this.mouse.x = 2 * (t[0] - 0.5)),
                          (this.mouse.y = 2 * (1 - t[1] - 0.5)),
                          this.raycaster.setFromCamera(this.mouse, this.camera),
                          (e = this.raycaster.intersectObjects([this.hitbox])));
                        for (var n = 0; n < this.plantBones.length; n++) {
                          var i = this.plantBones[n],
                            r = this.plantBones[n].userData;
                          (r.rotSpeed +=
                            0.001 *
                            Math.sin(0.02 * this.ticker + 0.5 * Math.PI) *
                            (n / (0.5 * this.plantBones.length))),
                            (r.rotSpeed +=
                              0.15 *
                              this.progressSpeed *
                              (n / (0.5 * this.plantBones.length))),
                            e.length
                              ? (this.preHit,
                                (this.preHit = !0),
                                (r.rotSpeed += 0.5 * (this.premouse[0] - t[0])))
                              : (this.preHit = !1),
                            (r.rotSpeed = 0.05 * -r.rotOffset + 0.8 * r.rotSpeed),
                            (r.rotOffset += r.rotSpeed),
                            (i.rotation.x = r.rot.x + r.rotOffset),
                            (i.rotation.z = r.rot.z - 0.4 * r.rotOffset);
                        }
                        if (this.cornKernels)
                          for (var o = 0; o < this.cornKernels.length; o++) {
                            var a = this.cornKernels[o];
                            (a.rotation.y += 0.002),
                              yp.copy(a.origin),
                              a.parent.localToWorld(yp),
                              yp.multiplyScalar(1 / 15);
                            var s = vp.noise3D(yp.x + 100, yp.y + 100, yp.z);
                            yp
                              .copy(a.origin)
                              .normalize()
                              .multiplyScalar(0.4 * s),
                              a.position
                                .copy(a.origin)
                                .addScalar(0.05 * -s)
                                .add(yp);
                          }
                        (this.preProgress = this.progress),
                          (this.premouse = [t[0], t[1]]);
                      },
                    },
                  ]) && pp(n.prototype, i),
                  r && pp(n, r),
                  t
                );
              })()),
            ) || rp;
        function xp(e) {
          return (xp = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Pp(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function _p(e, t) {
          return (_p =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function kp() {
          var e = Sp([
            '\n    precision highp float;\n    uniform sampler2D map;\n    uniform sampler2D blur;\n    uniform sampler2D sceneTopMap;\n    uniform vec2 resolution;\n    uniform float edgeTop;\n    uniform float edgeBottom;\n    uniform float slopeTop;\n    uniform float slopeBottom;\n    uniform float blurBottom;\n    uniform float inProgress;\n\n    vec3 gammaCorrect(vec3 color, float gamma){\n        return pow(color, vec3(1.0/gamma));\n    }\n\n    vec3 levelRange(vec3 color, float minInput, float maxInput){\n        return min(max(color - vec3(minInput), vec3(0.0)) / (vec3(maxInput) - vec3(minInput)), vec3(1.0));\n    }\n\n    vec3 levels(vec3 color, float minInput, float gamma, float maxInput){\n        return gammaCorrect(levelRange(color, minInput, maxInput), gamma);\n    }\n\n    float random (vec2 st) {\n        return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n    }\n\n    ',
            '\n\n    void main() {\n        vec2 uv = gl_FragCoord.xy / resolution.xy;\n        \n        vec4 color = texture2D(map, uv);\n\n        vec3 blur = texture2D(blur, uv).rgb;\n        float edge = blurBottom;\n        float fragBlurAmount = min(1.0, max(0.0, ((edge*0.6) + 0.7) - uv.y)*2.0);\n\n\n        float aspect = resolution.x / resolution.y;\n        float diffX = (0.5 - uv.x);\n        float diffY = ((edge+0.1) - uv.y) / aspect;\n        diffY *= 0.2;\n        float circleSize = 8.0;\n        float circleEdge = 4.0;\n        float dis = min(1.0, max(0.0, sqrt((diffX *diffX) + (diffY* diffY))*circleSize));\n        // dis = 1.0 - pow(dis, circleEdge);\n        // fragBlurAmount *= 1.0-dis;\n\n\n        color.rgb = mix(color.xyz, blur, fragBlurAmount);\n        vec3 glow = levels(blur, 50.0/255.0, 0.8, 255.0/255.0) * 0.7;\n\n        float r = random(uv);\n        float rStr = 0.03;\n        color += mix(-rStr/2.0, rStr/2.0, r);\n        color.rgb = color.rgb + glow;\n        color.a = 1.0;\n\n        vec4 sceneTopColor = texture2D(sceneTopMap, uv) + (r - 0.5) * rStr * 0.5;\n        color.rgb = mix(color.rgb, sceneTopColor.rgb, sceneTopColor.a);\n\n        ',
            '\n        ',
            '\n\n        gl_FragColor = color;\n    }\n',
          ]);
          return (
            (kp = function () {
              return e;
            }),
            e
          );
        }
        function Op() {
          var e = Sp([
            '\n    precision highp float;\n    attribute vec2 position;\n\n    void main() {\n    gl_Position = vec4(position, 1.0, 1.0);\n}',
          ]);
          return (
            (Op = function () {
              return e;
            }),
            e
          );
        }
        function Sp(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var Tp,
          Ap = Mt(Op()),
          Mp = Mt(kp(), $t, en, Kt),
          jp = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.map,
                a = r.blur,
                u = r.resolution,
                l = void 0 === u ? new $e.Vector2() : u;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = xp(t).call(this, {
                  uniforms: {
                    map: { value: o },
                    blur: { value: a },
                    sceneTopMap: { value: null },
                    resolution: { value: l },
                    edgeTop: { value: 0 },
                    edgeBottom: { value: 0 },
                    slopeTop: { value: 0 },
                    slopeBottom: { value: 0 },
                    blurBottom: { value: 0 },
                    inProgress: { value: 0 },
                  },
                  vertexShader: Ap,
                  fragmentShader: Mp,
                  depthTest: !1,
                  transparent: !0,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? Pp(n)
                    : i).type = 'SciencePostProcessingMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(Pp(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && _p(e, t);
              })(t, $e['RawShaderMaterial']),
              t
            );
          })();
        function Fp(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Rp(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Fp(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Fp(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Cp(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ep(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Lp(e) {
          return (Lp = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ip(e, t) {
          return (Ip =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Dp = Object(u.a)(),
          Up =
            Object(it.a)($r)(
              (Tp =
                Object(it.a)(
                  c.a.isSandbox
                    ? Object(Ri.a)({ without: 'dofController' })
                    : null,
                )(
                  (Tp = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), a = 0;
                        a < i;
                        a++
                      )
                        r[a] = arguments[a];
                      return (
                        ((n = Ep(
                          this,
                          (e = Lp(t)).call.apply(e, [this].concat(r)),
                        )).options = { postProcessingMaterial: new jp() }),
                        (n.props = {
                          resolution: [
                            Dp,
                            function (e) {
                              var t = e.viewport;
                              return {
                                width: t.width,
                                height: t.height,
                                pixelRatio: t.pixelRatio,
                              };
                            },
                          ],
                          appStart: [
                            Dp,
                            function (e) {
                              return e.started;
                            },
                          ],
                          progress: 0.8,
                          pointerNorm: [
                            Dp,
                            function (e) {
                              return e.pointer.positionNorm;
                            },
                          ],
                          gyro: [
                            Dp,
                            function (e) {
                              return {
                                alpha: e.gyro.alpha,
                                beta: e.gyro.beta,
                                gamma: e.gyro.gamma,
                              };
                            },
                          ],
                          cameraTarget: c.a.isMobile
                            ? function (e) {
                                var t =
                                  e.progress < 0.5
                                    ? 1
                                    : Object(o.a)(
                                        e.progress,
                                        0.5,
                                        0.6,
                                        1,
                                        0.1,
                                        !0,
                                      );
                                return {
                                  x: Object(o.a)(
                                    e.gyro.gamma,
                                    -30,
                                    30,
                                    -5 * t,
                                    5 * t,
                                    !0,
                                  ),
                                  y: Object(o.a)(
                                    e.gyro.beta,
                                    60,
                                    120,
                                    1.5 * t,
                                    -1.5 * t,
                                    !0,
                                  ),
                                };
                              }
                            : function (e) {
                                var t =
                                  e.progress < 0.6
                                    ? 1
                                    : Object(o.a)(e.progress, 0.6, 1, 1, 0.25);
                                return {
                                  x: 10 * -(e.pointerNorm[0] - 0.5) * t,
                                  y: 2.5 * +(e.pointerNorm[1] - 0.5) * t,
                                };
                              },
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && Ip(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e = Rp(
                              regeneratorRuntime.mark(function e() {
                                var t;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (this.uiPerspectiveCamera = new $e.PerspectiveCamera(
                                              45,
                                              window.innerWidth /
                                                window.innerHeight,
                                            )),
                                            (this.uiPerspectiveCamera.position.z = 10),
                                            (this.cameraPx = 0),
                                            (this.cameraVelX = 0),
                                            (this.cameraPy = 0),
                                            (this.cameraVelY = 0),
                                            (this.resolution = new $e.Vector2()),
                                            (t = this.resolution),
                                            (e.next = 10),
                                            new ac().setup({
                                              options: {
                                                camera: this.camera,
                                                uiPerspectiveCamera: this
                                                  .uiPerspectiveCamera,
                                                layers: {
                                                  BG_LAYER: 1,
                                                  SCENE_LAYER: 0,
                                                  UI_LAYER: 3,
                                                  UI_SCENE_LAYER: 4,
                                                },
                                                postProcessingMaterial: this
                                                  .options.postProcessingMaterial,
                                                resolution: t,
                                              },
                                              props: {
                                                progress: [
                                                  this.store,
                                                  function (e) {
                                                    return Object(o.a)(
                                                      e.progress,
                                                      0,
                                                      0.5,
                                                      0,
                                                      1,
                                                    );
                                                  },
                                                ],
                                              },
                                            })
                                          );
                                        case 10:
                                          return (
                                            (this.dna = e.sent),
                                            this.scene.add(this.dna.object),
                                            (e.next = 14),
                                            new Zc().setup({
                                              options: {
                                                layers: {
                                                  BG_LAYER: 1,
                                                  SCENE_LAYER: 0,
                                                  UI_LAYER: 3,
                                                },
                                                resolution: t,
                                              },
                                              props: {
                                                progress: [
                                                  this.store,
                                                  function (e) {
                                                    return Object(o.a)(
                                                      e.progress,
                                                      1 / 3,
                                                      2 / 3,
                                                      0,
                                                      1,
                                                    );
                                                  },
                                                ],
                                              },
                                            })
                                          );
                                        case 14:
                                          return (
                                            (this.data = e.sent),
                                            this.scene.add(this.data.object),
                                            (e.next = 18),
                                            new wp().setup({
                                              options: {
                                                layers: {
                                                  BG_LAYER: 1,
                                                  SCENE_LAYER: 0,
                                                  UI_LAYER: 3,
                                                  SCENE_LAYER2: 2,
                                                },
                                                resolution: t,
                                                camera: this.camera,
                                              },
                                              props: {
                                                progress: [
                                                  this.store,
                                                  function (e) {
                                                    return Object(o.a)(
                                                      e.progress,
                                                      0.5,
                                                      2.8 / 3,
                                                      0,
                                                      1,
                                                    );
                                                  },
                                                ],
                                                pY: -0.5,
                                              },
                                            })
                                          );
                                        case 18:
                                          return (
                                            (this.pot = e.sent),
                                            this.scene.add(this.pot.object),
                                            (e.next = 22),
                                            this.setupBlur()
                                          );
                                        case 22:
                                          return (
                                            (e.next = 24),
                                            this.setupSceneTopTarget()
                                          );
                                        case 24:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupBlur',
                          value: (function () {
                            var e = Rp(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (e.next = 2),
                                            new Wt().setup({
                                              options: { scale: 0.25 },
                                              fragmentShader: mn,
                                              uniforms: {
                                                radius: { value: 2.5 },
                                                time: { value: 0 },
                                              },
                                            })
                                          );
                                        case 2:
                                          return (
                                            (this.blurPass1 = e.sent),
                                            (e.next = 5),
                                            new Wt().setup({
                                              options: { scale: 0.25 },
                                              fragmentShader: gn,
                                              uniforms: {
                                                radius: { value: 2.5 },
                                                time: { value: 0 },
                                              },
                                            })
                                          );
                                        case 5:
                                          return (
                                            (this.blurPass2 = e.sent),
                                            (e.next = 8),
                                            new Wt().setup({
                                              options: { scale: 0.25 },
                                              fragmentShader: bn,
                                              uniforms: {
                                                radius: { value: 2.5 },
                                                time: { value: 0 },
                                              },
                                            })
                                          );
                                        case 8:
                                          (this.blurPass3 = e.sent),
                                            (this.options.postProcessingMaterial.blur = this.blurPass2.target.texture);
                                        case 10:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupSceneTopTarget',
                          value: (function () {
                            var e = Rp(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          (this.sceneTopTarget = new $e.WebGLRenderTarget()),
                                            (this.options.postProcessingMaterial.sceneTopMap = this.sceneTopTarget.texture),
                                            (this.sceneTopTarget.scissorTest = !0);
                                        case 3:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'preCompile',
                          value: function (e) {
                            var t = e.renderer,
                              n = e.ortho;
                            t.compile(this.scene, n),
                              t.compile(this.scene, this.camera),
                              t.compile(this.blurPass1.scene, n),
                              t.compile(this.blurPass2.scene, n);
                          },
                        },
                        {
                          key: 'updateCamera',
                          value: function () {
                            var e = c.a.isMobile ? 0.1 : 0.03;
                            (this.cameraVelX +=
                              0.5 * (this.props.cameraTarget.x - this.cameraPx)),
                              (this.cameraVelX *= e),
                              (this.cameraPx += this.cameraVelX),
                              (this.cameraVelY +=
                                0.5 *
                                (this.props.cameraTarget.y - this.cameraPy)),
                              (this.cameraVelY *= e),
                              (this.cameraPy += this.cameraVelY),
                              (this.camera.position.x = this.cameraPx),
                              (this.camera.position.y = this.cameraPy),
                              this.camera.lookAt(0, 0, 0);
                          },
                        },
                        {
                          key: 'setProgress',
                          value: function (e) {
                            c.a.isMobile
                              ? (this.options.postProcessingMaterial.uniforms.blurBottom.value = Object(
                                  o.a,
                                )(e, 0.7, 0.8, 0, 1))
                              : (this.options.postProcessingMaterial.uniforms.blurBottom.value = Object(
                                  o.a,
                                )(e, 0.77, 0.97, 0, 1)),
                              [
                                this.blurPass1,
                                this.blurPass2,
                                this.blurPass3,
                              ].forEach(function (t) {
                                t.material.radius = Object(o.a)(
                                  e,
                                  0.65,
                                  0.8,
                                  2.5,
                                  0.625,
                                  !0,
                                );
                              });
                          },
                        },
                        {
                          key: 'onAppStart',
                          value: function () {
                            this.dna.props.active ||
                              (this.options.postProcessingMaterial.inProgress = 1);
                          },
                        },
                        {
                          key: 'render',
                          value: function (e) {
                            var t = e.renderer,
                              n = e.ortho,
                              i = e.target;
                            (this.renderer = t),
                              this.updateCamera(),
                              (this.options.postProcessingMaterial.map =
                                i.texture),
                              (this.options.postProcessingMaterial.tDepth =
                                i.depthTexture),
                              (this.blurPass1.material.map = i.texture),
                              [
                                this.blurPass1,
                                this.blurPass2,
                                this.blurPass3,
                              ].forEach(function (e) {
                                (e.target.scissorTest = !0),
                                  e.target.scissor
                                    .copy(i.scissor)
                                    .multiplyScalar(e.options.scale);
                              }),
                              (this.sceneTopTarget.scissorTest = !0),
                              this.sceneTopTarget.scissor.copy(i.scissor),
                              t.setRenderTarget(i),
                              n.layers.set(1),
                              t.render(this.scene, n),
                              t.clearDepth(),
                              this.camera.layers.set(0),
                              t.render(this.scene, this.camera),
                              t.setRenderTarget(this.sceneTopTarget),
                              t.clear(),
                              this.camera.layers.set(5),
                              t.render(this.scene, this.camera),
                              this.renderBlur({ renderer: t, ortho: n });
                          },
                        },
                        {
                          key: 'renderBlur',
                          value: function (e) {
                            var t = e.renderer,
                              n = e.ortho;
                            n.layers.set(0),
                              t.setRenderTarget(this.blurPass2.target),
                              t.clear(),
                              t.render(this.blurPass1.scene, n),
                              t.setRenderTarget(this.blurPass3.target),
                              t.clear(),
                              t.render(this.blurPass2.scene, n),
                              t.setRenderTarget(this.blurPass2.target),
                              t.clear(),
                              t.render(this.blurPass3.scene, n);
                          },
                        },
                        {
                          key: 'renderUi',
                          value: function (e) {
                            var t = e.renderer,
                              n = e.ortho,
                              i = e.target;
                            n.layers.set(3),
                              this.uiPerspectiveCamera.layers.set(4),
                              t.setRenderTarget(i),
                              t.render(this.scene, n),
                              t.clearDepth(),
                              t.render(this.scene, this.uiPerspectiveCamera);
                          },
                        },
                        {
                          key: 'setResolution',
                          value: function (e) {
                            var t = e.width,
                              n = e.height,
                              i = e.pixelRatio;
                            this.resolution.set((t * i) / 2, (n * i) / 2),
                              this.options.postProcessingMaterial.resolution.set(
                                t * i,
                                n * i,
                              ),
                              (this.uiPerspectiveCamera.aspect = t / n),
                              this.uiPerspectiveCamera.updateProjectionMatrix(),
                              this.sceneTopTarget.setSize(t * i, n * i);
                          },
                        },
                      ]) && Cp(n.prototype, i),
                      r && Cp(n, r),
                      t
                    );
                  })()),
                ) || Tp),
            ) || Tp,
          zp =
            "#define GLSLIFY 1\nattribute vec3 a_base;\n// attribute vec3 a_offset;\nattribute float a_map_rotation;\nattribute vec4 a_map_frame;\n\nattribute float a_rand_offset;\nattribute vec2 a_scale;\nattribute float a_color_amount;\n// attribute float a_life;\n\nuniform float uTime;\nuniform vec2 uGrid;\n\nuniform sampler2D tNoise;\n\nvarying vec4 vMapFrame;\nvarying float vMapRotation;\nvarying float vColorAmount;\nvarying vec3 vPosBase;\n\n// transforms the 'blueprint' geometry with instance attributes\nvec3 transform( inout vec3 position, vec3 T, vec4 R, vec3 S ) {\n  //applies the scale\n  position *= S;\n  //computes the rotation where R is a (vec4) quaternion\n  position += 2.0 * cross( R.xyz, cross( R.xyz, position ) + R.w * position );\n  //translates the transformed 'blueprint'\n  position += T;\n  //return the transformed position\n  return position;\n}\n\nvarying vec2 vUv;\nvarying vec2 vUvEnhanced;\n\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n    varying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n    varying vec3 vNormal;\n\n    #ifdef USE_TANGENT\n\n        varying vec3 vTangent;\n        varying vec3 vBitangent;\n\n    #endif\n\n#endif\n\nvoid main() {\n    \n    #include <beginnormal_vertex>\n    #include <defaultnormal_vertex>\n\n    #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n        vNormal = normalize( transformedNormal );\n\n        #ifdef USE_TANGENT\n\n            vTangent = normalize( transformedTangent );\n            vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n        #endif\n\n    #endif\n\n    vec3 posV = position;\n\n        // ---- turbulanace\n        vec2 posT = vec2(posV.x, posV.y);\n\n        // -- noise approach\n        // posT.x -= uTime * ( .8 * a_rand_offset * 10. );\n        // posT.y -= uTime * ( .1 * a_rand_offset * 10. );\n\n        // float turbulance = snoise2( vec2(\n        //     posT.x + mix( 10., 40., a_rand_offset ) * 8.,\n        //     posT.y + mix( 10., 40., a_rand_offset ) * 8.\n        // ) );\n        // posV.x += turbulance * .03;\n        // posV.y += turbulance * .03;\n        // posV.z += turbulance * .06;\n\n        // -- texture approach\n        posT.x -= (uTime * .7) * ( .8 * a_rand_offset * 24. );\n        posT.y -= (uTime * .7) * ( .1 * a_rand_offset * 24. );\n\n        float turbulance = ( texture2D( tNoise, posT * .2 ).r * 2. ) - 1.;\n              turbulance *= a_rand_offset;\n        \n        posV.x += turbulance * .04;\n        posV.y += turbulance * .04;\n        posV.z += turbulance * .06;\n        // posV.x += turbulance * .02;\n        // posV.y += turbulance * .02;\n        // posV.z += turbulance * .04;\n\n    vec3 T = a_base;\n    vec4 R = vec4(0.);\n    vec3 S = vec3(1.08, 1.02, 1.);\n\n    vec3 transformed = vec3( transform( posV, T, R, S ) );\n\n    #include <morphtarget_vertex>\n    #include <skinning_vertex>\n    #include <displacementmap_vertex>\n    #include <project_vertex>\n    #include <logdepthbuf_vertex>\n\n    #if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n        vViewPosition = - mvPosition.xyz;\n\n    #endif\n\n    vUv = uv;\n    vUvEnhanced = (transformed.xy + uGrid.xy * .5) / uGrid.xy;\n    \n    vMapFrame = a_map_frame;\n    vMapRotation = a_map_rotation;\n    \n    vColorAmount = a_color_amount;\n    vPosBase = a_base;\n}",
          Np =
            '#define GLSLIFY 1\n#include <common>\n#include <packing>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n    varying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n    varying vec3 vNormal;\n\n    #ifdef USE_TANGENT\n\n        varying vec3 vTangent;\n        varying vec3 vBitangent;\n\n    #endif\n\n#endif\n\n// uniform sampler2D tDiffuse;\nuniform sampler2D tDiffuseCombined;\n\n// uniform sampler2D tMultiply;\n// uniform sampler2D tScreen;\n// uniform sampler2D tUVDebug;\nuniform sampler2D tNoise;\n\nuniform vec2 uResolution;\nuniform vec2 uResolutionTex;\n\nuniform vec3 uPointLight;\nuniform float uTime;\n\nvarying vec2 vUv;\nvarying vec2 vUvEnhanced;\n\nvarying vec4 vMapFrame;\nvarying float vMapRotation;\n\nvarying float vColorAmount;\nvarying vec3 vPosBase;\n\nvec2 UVAdjust(vec2 st, float scale, vec2 offset) {\n\n    st -= .5;\n    st /= scale;\n    st += offset;\n    st += .5;\n    return st;\n}\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat fakePointLightIntensity(vec3 point, vec3 normal, vec2 res, float amount){\n\n    vec2 pixel = gl_FragCoord.xy / res.xy;\n\n    vec2 lightPos = point.xy / res.xy;//We normalize the light source\n    lightPos.y = 1.0 - lightPos.y;\n\n    vec3 lightVec = vec3( lightPos.x - pixel.x, lightPos.y - pixel.y, point.z );\n    lightVec = normalize(lightVec);\n\n    float outgoingIntensity = amount * max(dot( normal, lightVec ), 0.0);\n\n    return outgoingIntensity;\n}\n\nvec3 blendNormal(vec3 base, vec3 blend) {\n\treturn blend;\n}\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n\treturn (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// #pragma glslify: blendScreen = require(glsl-blend/screen) \nvec3 blendMultiply(vec3 base, vec3 blend) {\n\treturn base*blend;\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n\treturn (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n            \n\nvoid main() {\n\n    #include <normal_fragment_begin>\n\n    vec2 uv = vUv;\n    vec3 color = vec3(1., 0., 0.);\n\n    vec3 c0 = vec3(0.60, 0.44, 0.28);\n    vec3 c1 = vec3(0.33, 0.50, 0.4);\n\t\n\tvec4 frame = vMapFrame / uResolutionTex.x;\n    vec2 st = gl_FragCoord.xy / uResolution;\n\t\n\tvec2 uvSprite = vUv;\n\n\tuvSprite = rotateUV(uvSprite, (PI * vMapRotation) + (PI * .5));\n\n    uvSprite.x = frame.x + ( uvSprite.x * frame.z );\n    uvSprite.y = frame.y + ( uvSprite.y * frame.w );\n\n\tuvSprite.y = 1.0 - uvSprite.y;\n    \n    // uvSprite = UVAdjust(uvSprite, .2, vec2(0.));\n\n    // -- texture lookup\n    vec4 tColorCombined = texture2D(tDiffuseCombined, uvSprite);\n    \n    // vec4 tColor = texture2D(tDiffuse, uvSprite);\n    // vec4 tColorMult = texture2D(tMultiply, uvSprite);\n    // vec4 tColorScreen = texture2D(tScreen, uvSprite);\n    \n    // vec4 tColorUVDebug = texture2D(tUVDebug, vUvEnhanced);\n\n        // --------- noise\n        vec2 stCloud0 = vUvEnhanced;//gl_FragCoord.xy / uResolution.xy;\n        vec2 stCloud1 = vUvEnhanced;//gl_FragCoord.xy / uResolution.xy;\n\n        stCloud0.x -= (uTime * .8) * 1.;\n        stCloud1.x -= (uTime * .1) * 1.;\n\n        stCloud0.y -= (uTime * 1.) * 1.;\n        stCloud1.y -= (uTime * .2) * 1.;\n\n        vec3 cCloudSimplex0 = texture2D(tNoise, stCloud0 * .4).rgb; //vec3(fbm(stCloud0 * 4.)); // 4. //vec3(1.);\n        vec3 cCloudSimplex1 = texture2D(tNoise, stCloud1 * .2).rgb; //vec3(fbm(stCloud1 * 2.)); // 2. //vec3(1.);\n\n        vec3 cCloudSimplex = cCloudSimplex0 * cCloudSimplex1;\n        float cCloud = cCloudSimplex.r * 2.;\n\n        // ---- light\n        float cLight = fakePointLightIntensity(uPointLight, normal, uResolution, 1.5);\n        float cLightDarkened = smoothstep(0.2, .7, distance(st,vec2(0.25, 0.45)));\n        // float cLightDarkened = smoothstep(0., .7, distance(st,vec2(0.25, 0.45)));//clamp(1. - smoothstep( 0.1, .5, 1. - cLight ), 0., 1.);\n        // float cLightDarkened = clamp(1. - smoothstep( 0.1, .5, 1. - cLight ), 0., 1.);\n\n    float fElevation = clamp(mix(0.3, 1., vPosBase.z / .8), 0., 1.);\n\n    vec3 outgoingLight;\n    // outgoingLight = tColorCombined.rgb / tColorCombined.a;\n    // outgoingLight = tColor.rgb / tColor.a;\n    \n    /*\n    outgoingLight = tColor.rgb;\n    outgoingLight = blendMultiply(outgoingLight.rgb, tColorMult.rgb, 1.);\n    // outgoingLight = blendMultiply(outgoingLight.rgb, tColorMult.rgb, fElevation);\n    outgoingLight = blendScreen(outgoingLight.rgb, tColorScreen.rgb, 1.);\n    // outgoingLight = blendScreen(outgoingLight.rgb, tColorScreen.rgb, fElevation);\n    */\n\n\toutgoingLight = tColorCombined.rgb;\n\toutgoingLight = blendOverlay(outgoingLight.rgb, mix(c0, c1, vColorAmount));\n    \n    // ---- lightning\n    outgoingLight = blendMultiply(\n        outgoingLight.rgb, // src\n        vec3(.8 - (cLightDarkened * .12)), // dest\n        1. - clamp(fElevation * cCloud, .2, 1.) // mix\n    );\n\n    // outgoingLight = blendMultiply(\n    //     outgoingLight.rgb, // src\n    //     vec3(0.05, 0.21, 0.02), // dest\n    //     (1. - cLightDarkened) * .4 // mix\n    // );\n\n    outgoingLight = blendOverlay(\n        outgoingLight.rgb, // src\n        vec3(1.), // dest\n        fElevation * clamp(cCloud * mix(0., 4., cLight) + (cLight * 1.5) * cLightDarkened, 0., 1.) // mix\n    );\n\n    float alpha = tColorCombined.a;\n    // float alpha = tColor.a;\n    \n    // gl_FragColor = vec4(uvSprite.x, uvSprite.y, 0., 1.);\n    // gl_FragColor = vec4(tColor.rgb, 1.);\n    // gl_FragColor = vec4(vec3(vColorAmount), .1);\n    // gl_FragColor = vec4(mix(c0, c1, vColorAmount), 1.);\n    // gl_FragColor = vec4(vec3(mix(0.2, 1., vPosBase.z / .7)), 1.);\n    // gl_FragColor = vec4(vec3(vUvEnhanced.y), 1.);\n    // gl_FragColor = vec4(vec3( cLightDarkened ), 1.);\n    // gl_FragColor = vec4(vec3(cCloud), 1.);\n    // gl_FragColor = vec4(vec3((cCloudSimplex.r * 1.) * (cLight) * fElevation), 1.);\n    // gl_FragColor = vec4( packNormalToRGB( normal ), 1. );\n    // gl_FragColor = vec4( vec3(1., 0., 0.), 1. );\n    // gl_FragColor = vec4( tColorUVDebug.rgb, 1. );\n    // gl_FragColor = vec4(vec3(alpha), 1.);\n    \n    // gl_FragColor = vec4(blendNormal(vec3(0., 0., 1.), outgoingLight.rgb, alpha), 1.);\n    gl_FragColor = vec4(outgoingLight, alpha);\n}';
        function Bp(e) {
          return (Bp = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Vp(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function Yp(e, t) {
          return (Yp =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Hp = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = Bp(t).call(this, r)),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? Vp(n)
                    : i).type = r.type || 'FieldTileInstancesMaterial'),
                (e.uniforms = Object(a.extend)({}, r.uniforms, {})),
                (e.extensions.derivatives = !0),
                (e.frustrumCulled = !1),
                (e.vertexShader = zp),
                (e.fragmentShader = Np),
                Object(a.each)(e.uniforms, function (t, n) {
                  Object.defineProperty(Vp(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Yp(e, t);
              })(t, $e['ShaderMaterial']),
              t
            );
          })(),
          Xp =
            '#define GLSLIFY 1\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n    varying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n    varying vec3 vNormal;\n\n    #ifdef USE_TANGENT\n\n        varying vec3 vTangent;\n        varying vec3 vBitangent;\n\n    #endif\n\n#endif\n\nvarying vec2 vUv;\n\nvoid main() {\n\n    #include <beginnormal_vertex>\n    #include <defaultnormal_vertex>\n\n    #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n        vNormal = normalize( transformedNormal );\n\n        #ifdef USE_TANGENT\n\n            vTangent = normalize( transformedTangent );\n            vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n        #endif\n\n    #endif\n\n    vUv = uv;\n    \n    vec3 transformed = position;\n    // vec4 transformed = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n    #include <morphtarget_vertex>\n    #include <skinning_vertex>\n    #include <displacementmap_vertex>\n    #include <project_vertex>\n    #include <logdepthbuf_vertex>\n\n    #if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n        vViewPosition = - mvPosition.xyz;\n\n    #endif\n}',
          Gp =
            'precision highp float;\n#define GLSLIFY 1\n\n#include <common>\n#include <packing>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n    varying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n    varying vec3 vNormal;\n\n    #ifdef USE_TANGENT\n\n        varying vec3 vTangent;\n        varying vec3 vBitangent;\n\n    #endif\n\n#endif\n\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\n\nuniform vec2 uUVScale;\nuniform vec2 uResolution;\nuniform vec3 uPointLight;\n\nuniform float uTime;\n\nvarying vec2 vUv;\n\nfloat fakePointLightIntensity(vec3 point, vec3 normal, vec2 res, float amount){\n\n    vec2 pixel = gl_FragCoord.xy / res.xy;\n\n    vec2 lightPos = point.xy / res.xy;//We normalize the light source\n    lightPos.y = 1.0 - lightPos.y;\n\n    vec3 lightVec = vec3( lightPos.x - pixel.x, lightPos.y - pixel.y, point.z );\n    lightVec = normalize(lightVec);\n\n    float outgoingIntensity = amount * max(dot( normal, lightVec ), 0.0);\n\n    return outgoingIntensity;\n}\n\nfloat blendDarken(float base, float blend) {\n\treturn min(blend,base);\n}\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n\treturn vec3(blendDarken(base.r,blend.r),blendDarken(base.g,blend.g),blendDarken(base.b,blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n\treturn (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLighten(float base, float blend) {\n\treturn max(blend,base);\n}\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n\treturn vec3(blendLighten(base.r,blend.r),blendLighten(base.g,blend.g),blendLighten(base.b,blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n\treturn (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendScreen(float base, float blend) {\n\treturn 1.0-((1.0-base)*(1.0-blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n\treturn vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n\treturn (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendAdd(float base, float blend) {\n\treturn min(base+blend,1.0);\n}\n\nvec3 blendAdd(vec3 base, vec3 blend) {\n\treturn min(base+blend,vec3(1.0));\n}\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n\treturn (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvoid main() {\n\n    #include <normal_fragment_begin>\n\n    vec2 uvScaled = vUv;\n         uvScaled.xy *= (1. * uUVScale.xy);\n\n            // // noise\n            // vec2 stCloud0 = vUv;\n            // vec2 stCloud1 = vUv;\n\n            // stCloud0.x -= uTime * .8;\n            // stCloud1.x -= uTime * .1;\n\n            // stCloud0.y -= uTime * 1.;\n            // stCloud1.y -= uTime * .2;\n\n            // vec3 cCloudSimplex0 = vec3(1.); \n            // vec3 cCloudSimplex1 = vec3(1.); \n            \n            // vec3 cCloudSimplex = cCloudSimplex0 * cCloudSimplex1;\n            // float cCloud = cCloudSimplex.r * 2.;\n\n        // --------- noise\n        vec2 stCloud0 = vUv;//gl_FragCoord.xy / uResolution.xy;\n        vec2 stCloud1 = vUv;//gl_FragCoord.xy / uResolution.xy;\n\n        stCloud0.x -= (uTime * .8) * 1.;\n        stCloud1.x -= (uTime * .1) * 1.;\n\n        stCloud0.y -= (uTime * 1.) * 1.;\n        stCloud1.y -= (uTime * .2) * 1.;\n\n        vec3 cCloudSimplex0 = texture2D(tNoise, stCloud0 * .4).rgb; //vec3(fbm(stCloud0 * 4.)); // 4. //vec3(1.);\n        vec3 cCloudSimplex1 = texture2D(tNoise, stCloud1 * .2).rgb; //vec3(fbm(stCloud1 * 2.)); // 2. //vec3(1.);\n\n        vec3 cCloudSimplex = cCloudSimplex0 * cCloudSimplex1;\n        float cCloud = cCloudSimplex.r * 2.;\n\n    float diffuseLight = fakePointLightIntensity(uPointLight, normal, uResolution, 1.5);\n\n    // vec3 tColor = vec3(1., 0., 0.);\n    float l = clamp((diffuseLight * .5) + cCloud, 0., 1.);\n\n    vec3 outgoingLight = texture2D(tDiffuse, uvScaled).rgb;\n        outgoingLight = blendOverlay(outgoingLight.rgb, vec3(.7), clamp((diffuseLight * 1.) + (cCloud * .7), 0., 1.));\n        outgoingLight = blendDarken(outgoingLight.rgb, vec3(0.), .9 - (diffuseLight * .5) - (cCloud * .5));\n        outgoingLight = blendAdd(outgoingLight.rgb, vec3(.5), cCloud * .25);\n\n    float alpha = 1.;\n\n    // gl_FragColor = vec4(vec3(1., 0., 0.), alpha);\n    gl_FragColor = vec4(outgoingLight.rgb, alpha);\n}';
        function Wp(e) {
          return (Wp = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Qp(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function qp(e, t) {
          return (qp =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Zp,
          Kp = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = Wp(t).call(
                  this,
                  Object(a.extend)(r, {
                    transparent: !1,
                    fog: !1,
                    dithering: !0,
                    sizeAttenuation: !1,
                  }),
                )),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? Qp(n)
                    : i).type = r.type || 'FieldGroundMaterial'),
                (e.uniforms = Object(a.extend)({}, r.uniforms, {
                  uUVScale: { type: 'v2', value: new THREE.Vector2(1, 1) },
                })),
                (e.vertexShader = Xp),
                (e.fragmentShader = Gp),
                Object(a.each)(e.uniforms, function (t, n) {
                  Object.defineProperty(Qp(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && qp(e, t);
              })(t, $e['ShaderMaterial']),
              t
            );
          })(),
          $p = n(422);
        function Jp(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function eh(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Jp(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Jp(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function th(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function nh(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function ih(e) {
          return (ih = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function rh(e, t) {
          return (rh =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var oh,
          ah = $p.frames,
          sh =
            Object(it.a)(rt)(
              (Zp = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = nh(
                      this,
                      (e = ih(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      numRows: env.isMobile ? 26 : 40,
                      numCols: env.isMobile ? 16 : 40,
                      minQuadPerTiles: 5,
                      maxQuadPerTiles: 7,
                    }),
                    (n.props = {
                      name: 'Field-Object',
                      pElevation: 0.26,
                      visible: !1,
                      plX: 0,
                      plY: 0,
                      plZ: 0,
                      resolution: [
                        store,
                        function (e) {
                          return {
                            width: e.viewport.width,
                            height: e.viewport.height,
                            dpr: e.viewport.pixelRatio,
                          };
                        },
                      ],
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && rh(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = eh(
                          regeneratorRuntime.mark(function e() {
                            var t, n;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.object.name = this.props.name),
                                        (this.vResolution = new $e.Vector2()),
                                        (this.vResTex = new $e.Vector2(
                                          1024,
                                          1024,
                                        )),
                                        (this.vPointLight = new $e.Vector3(
                                          0,
                                          0,
                                          0.14,
                                        )),
                                        (e.next = 6),
                                        Gn('map-cloud-noise', !1, !1)
                                      );
                                    case 6:
                                      return (
                                        ((t = this.tNoise = e.sent).wrapS =
                                          $e.RepeatWrapping),
                                        (t.wrapT = $e.RepeatWrapping),
                                        (t.needsUpdate = !0),
                                        (n = Rn()),
                                        (this.maxAnisotropy = n.renderer.capabilities.getMaxAnisotropy()),
                                        (e.next = 14),
                                        this.setupGround()
                                      );
                                    case 14:
                                      return (
                                        (e.next = 16), this.setupTileInstances()
                                      );
                                    case 16:
                                      return (
                                        (e.next = 18),
                                        this.setupTileInstancesAttributes()
                                      );
                                    case 18:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupGround',
                      value: (function () {
                        var e = eh(
                          regeneratorRuntime.mark(function e() {
                            var t, n, i, r, o;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (e.next = 2),
                                        Gn('map-ground-diffuse', !1, !1)
                                      );
                                    case 2:
                                      ((t = e.sent).wrapS = $e.RepeatWrapping),
                                        (t.wrapT = $e.RepeatWrapping),
                                        (t.needsUpdate = !0),
                                        (n = this.tNoise),
                                        (i = new $e.PlaneBufferGeometry(2, 2)),
                                        (r = new Kp({
                                          uniforms: {
                                            tDiffuse: { type: 't', value: t },
                                            uResolution: {
                                              type: 'v2',
                                              value: this.vResolution,
                                            },
                                            uPointLight: {
                                              type: 'v3',
                                              value: this.vPointLight,
                                            },
                                            uTime: {
                                              type: 'f',
                                              value: this.vPointLight,
                                            },
                                            tNoise: { type: 't', value: n },
                                          },
                                          depthWrite: !1,
                                          depthTest: !1,
                                          side: $e.FrontSide,
                                        })),
                                        (o = this.meshGround = new $e.Mesh(
                                          i,
                                          r,
                                        )).layers.set(this.options.layer),
                                        (o.position.z = -0.1),
                                        this.object.add(o);
                                    case 13:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupTileInstances',
                      value: (function () {
                        var e = eh(
                          regeneratorRuntime.mark(function e() {
                            var t,
                              n,
                              i,
                              r,
                              o,
                              a,
                              u,
                              l = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (t = this.options.numRows),
                                        (n = this.options.numCols),
                                        (this.numTiles = t * n),
                                        (this.stackData = s.a
                                          .range(this.numTiles)
                                          .map(function (e) {
                                            return {
                                              quadAmount:
                                                e % 1 === $e.Math.randInt(0, 1)
                                                  ? l.options.maxQuadPerTiles
                                                  : l.options.minQuadPerTiles,
                                              quadTintAmount: $e.Math.randFloat(
                                                0.5 -
                                                  (0 === $e.Math.randInt(0, 3)
                                                    ? 0.5
                                                    : 0),
                                                1,
                                              ),
                                              quadRotation: $e.Math.randInt(0, 1),
                                              quadElevationPlus: $e.Math.randFloat(
                                                -0.04,
                                                0.04,
                                              ),
                                            };
                                          })),
                                        (this.numInstances = this.stackData
                                          .map(function (e) {
                                            return e.quadAmount;
                                          })
                                          .reduce(function (e, t) {
                                            return e + t;
                                          }, 0)),
                                        (i = new $e.PlaneBufferGeometry(
                                          1,
                                          1,
                                          4,
                                          4,
                                        )),
                                        (r = this.geoTile = new $e.InstancedBufferGeometry()).copy(
                                          i,
                                        ),
                                        (e.next = 10),
                                        Gn('map-field-diffuse-combined', !1, !1)
                                      );
                                    case 10:
                                      (o = e.sent),
                                        (a = this.matTile = new Hp({
                                          defines: {},
                                          uniforms: {
                                            tDiffuseCombined: {
                                              type: 't',
                                              value: o,
                                            },
                                            tNoise: {
                                              type: 't',
                                              value: this.tNoise,
                                            },
                                            uPointLight: {
                                              type: 'v3',
                                              value: this.vPointLight,
                                            },
                                            uTime: { type: 'f', value: 0 },
                                            uGrid: {
                                              type: 'v2',
                                              value: new $e.Vector2(t, n),
                                            },
                                            uResolution: {
                                              type: 'v2',
                                              value: this.vResolution,
                                            },
                                            uResolutionTex: {
                                              type: 'v2',
                                              value: this.vResTex,
                                            },
                                          },
                                          transparent: !0,
                                          depthWrite: !1,
                                          depthTest: !1,
                                          side: $e.FrontSide,
                                        })),
                                        (u = this.meshTile = new $e.Mesh(
                                          r,
                                          a,
                                        )).layers.set(this.options.layer),
                                        u.scale.set(
                                          env.isMobile ? 2.4 : 2,
                                          env.isMobile ? 2.4 : 2,
                                          1,
                                        ),
                                        (u.frustumCulled = !1),
                                        this.object.add(u),
                                        i.dispose();
                                    case 18:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupTileInstancesAttributes',
                      value: function () {
                        var e = this.numInstances,
                          t = this.geoTile,
                          n = this.options.numRows,
                          i = this.options.numCols,
                          r = 0.5 * (this.totWField = 1 * i),
                          o = 0.5 * (this.totHField = 1 * n);
                        (r -= 0.5), (o -= 0.5);
                        var a = new $e.InstancedBufferAttribute(
                            new Float32Array(3 * e),
                            3,
                          ),
                          s = new $e.InstancedBufferAttribute(
                            new Float32Array(2 * e),
                            2,
                          ),
                          u = new $e.InstancedBufferAttribute(
                            new Float32Array(1 * e),
                            1,
                          ),
                          l = new $e.InstancedBufferAttribute(
                            new Float32Array(1 * e),
                            1,
                          ),
                          c = new $e.InstancedBufferAttribute(
                            new Float32Array(1 * e),
                            1,
                          ),
                          p = new $e.InstancedBufferAttribute(
                            new Float32Array(4 * e),
                            4,
                          );
                        t.addAttribute('a_base', a),
                          t.addAttribute('a_scale', s),
                          t.addAttribute('a_rand_offset', l),
                          t.addAttribute('a_color_amount', u),
                          t.addAttribute('a_map_frame', p),
                          t.addAttribute('a_map_rotation', p);
                        for (var h = 0, f = 0, d = 0; d < n; d++)
                          for (var v = 0; v < i; v++) {
                            for (
                              var m = this.stackData[f], g = 0;
                              g < m.quadAmount;
                              g++
                            ) {
                              var b = 1 * v - r,
                                y = 1 * d - o,
                                w =
                                  m.quadAmount > this.options.minQuadPerTiles
                                    ? 12 - (g + 1)
                                    : 5 - (g + 1),
                                x = this.getFrameDataField(w).frame;
                              a.setXYZ(h, b, -y, 0),
                                s.setXY(h, 1, 1),
                                l.setX(h, $e.Math.randFloat(0.5, 1)),
                                c.setX(h, m.quadRotation),
                                p.setXYZW(h, x.x, x.y, x.w, x.h),
                                u.setX(h, m.quadTintAmount),
                                h++;
                            }
                            f++;
                          }
                        (a.needsUpdate = !0),
                          (s.needsUpdate = !0),
                          (u.needsUpdate = !0),
                          (l.needsUpdate = !0),
                          (c.needsUpdate = !0),
                          (p.needsUpdate = !0);
                      },
                    },
                    {
                      key: 'getFrameDataField',
                      value: function (e) {
                        return ah[e];
                      },
                    },
                    { key: 'onVisible', value: function () {} },
                    { key: 'offVisible', value: function () {} },
                    {
                      key: 'whileVisible',
                      value: function () {
                        (this.meshTile.material.uniforms.uTime.value =
                          0.02 * store.state.time),
                          (this.meshGround.material.uniforms.uTime.value =
                            0.02 * store.state.time);
                      },
                    },
                    {
                      key: 'updateInstancesAttr',
                      value: function () {
                        for (
                          var e = this.geoTile.getAttribute('a_base'),
                            t = this.options.numRows,
                            n = this.options.numCols,
                            i = 0,
                            r = 0,
                            o = 0;
                          o < t;
                          o++
                        )
                          for (var a = 0; a < n; a++) {
                            for (
                              var s = this.stackData[r], u = 0;
                              u < s.quadAmount;
                              u++
                            ) {
                              var l =
                                this.props.pElevation +
                                u * (this.props.pElevation + s.quadElevationPlus);
                              e.setZ(i, l), i++;
                            }
                            r++;
                          }
                        e.needsUpdate = !0;
                      },
                    },
                    {
                      key: 'setPElevation',
                      value: function (e) {
                        this.updateInstancesAttr();
                      },
                    },
                    {
                      key: 'setPlX',
                      value: function (e) {
                        this.vPointLight.x = e * this.vw;
                      },
                    },
                    {
                      key: 'setPlY',
                      value: function (e) {
                        this.vPointLight.y = e * this.vh;
                      },
                    },
                    {
                      key: 'setPlZ',
                      value: function (e) {
                        this.vPointLight.z = e;
                      },
                    },
                    {
                      key: 'setResolution',
                      value: function (e) {
                        var t = e.width,
                          n = e.height,
                          i = e.dpr,
                          r = (this.vw = t),
                          o = (this.vh = n);
                        this.vResolution.set(r, o),
                          this.vResolution.multiplyScalar(i),
                          this.meshGround &&
                            (this.meshGround.scale.set(
                              this.totWField * (env.isMobile ? 1.1 : 1),
                              this.totHField * (env.isMobile ? 1.1 : 1),
                              1,
                            ),
                            this.meshGround.material.uniforms.uUVScale.value.set(
                              4 * this.totWField,
                              4 * this.totHField,
                            )),
                          this.vPointLight &&
                            ((this.vPointLight.x = 1.25 * r),
                            (this.vPointLight.y = 0.25 * o),
                            (this.vPointLight.z = 0.22));
                      },
                    },
                  ]) && th(n.prototype, i),
                  r && th(n, r),
                  t
                );
              })()),
            ) || Zp;
        function uh(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function lh(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function ch(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                lh(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                lh(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function ph(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function hh(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function fh(e) {
          return (fh = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function dh(e, t) {
          return (dh =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var vh =
          Object(it.a)(rt)(
            (oh = (function (e) {
              function t() {
                var e, n;
                !(function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t);
                for (
                  var i = arguments.length, r = new Array(i), o = 0;
                  o < i;
                  o++
                )
                  r[o] = arguments[o];
                return (
                  ((n = hh(
                    this,
                    (e = fh(t)).call.apply(e, [this].concat(r)),
                  )).options = {}),
                  (n.props = {
                    visible: !1,
                    active: !1,
                    progress: 0,
                    pointerPosition: [
                      store,
                      function (e) {
                        return e.pointer.position;
                      },
                    ],
                    pointerActive: [
                      store,
                      function (e) {
                        return e.pointer.active;
                      },
                    ],
                    resolution: [
                      store,
                      function (e) {
                        return s.a.pick(e.viewport, 'width', 'height');
                      },
                    ],
                    scale: 1,
                    cameraFOV: 30,
                  }),
                  n
                );
              }
              var n, i, r;
              return (
                (function (e, t) {
                  if ('function' != typeof t && null !== t)
                    throw new TypeError(
                      'Super expression must either be null or a function',
                    );
                  (e.prototype = Object.create(t && t.prototype, {
                    constructor: { value: e, writable: !0, configurable: !0 },
                  })),
                    t && dh(e, t);
                })(t, le['a']),
                (n = t),
                (i = [
                  {
                    key: 'onSetup',
                    value: (function () {
                      var e = ch(
                        regeneratorRuntime.mark(function e() {
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    return (
                                      (this.camera = this.options.camera),
                                      (e.next = 3),
                                      this.setupFieldObject()
                                    );
                                  case 3:
                                    return (e.next = 5), this.setupSceneContent();
                                  case 5:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        }),
                      );
                      return function () {
                        return e.apply(this, arguments);
                      };
                    })(),
                  },
                  {
                    key: 'setupFieldObject',
                    value: (function () {
                      var e = ch(
                        regeneratorRuntime.mark(function e() {
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    return (
                                      (e.next = 2),
                                      new sh().setup({
                                        options: {
                                          layer: this.options.layers.MAIN_LAYER,
                                        },
                                        props: {},
                                      })
                                    );
                                  case 2:
                                    (this.field = e.sent),
                                      this.object.add(this.field.object);
                                  case 4:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        }),
                      );
                      return function () {
                        return e.apply(this, arguments);
                      };
                    })(),
                  },
                  {
                    key: 'setupSceneContent',
                    value: (function () {
                      var e = ch(
                        regeneratorRuntime.mark(function e() {
                          var t = this;
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    return (e.next = 2), new yo();
                                  case 2:
                                    return (
                                      (this.title = e.sent),
                                      this.title.setup({
                                        options: {
                                          layer: this.options.layers.UI_LAYER,
                                          text: p['fifth-section-title'],
                                          position: 'top-left',
                                          animationDuration: 1.5,
                                          animationStagger: 0.02,
                                        },
                                        props: {
                                          fontSize: [
                                            store,
                                            function (e) {
                                              return (
                                                (c.a.isMobile ? 110 : 100) *
                                                e.viewport.scale
                                              );
                                            },
                                          ],
                                          pX: [
                                            store,
                                            function (e) {
                                              return -0.42 * e.viewport.width;
                                            },
                                          ],
                                          width: [
                                            store,
                                            function (e) {
                                              return (
                                                (c.a.isMobile ? 920 : 800) *
                                                e.viewport.scale
                                              );
                                            },
                                          ],
                                        },
                                      }),
                                      c.a.isSandbox ||
                                        this.object.add(this.title.object),
                                      (e.next = 7),
                                      new Ao()
                                    );
                                  case 7:
                                    (this.bodyText = e.sent),
                                      this.bodyText.setup({
                                        options: {
                                          layer: this.options.layers.UI_LAYER,
                                          position: 'top-left',
                                          text: p['fifth-section-body'],
                                        },
                                        props: {
                                          fontSize: [
                                            store,
                                            function (e) {
                                              return (
                                                (c.a.isMobile ? 40 : 20) *
                                                e.viewport.scale
                                              );
                                            },
                                          ],
                                          pX: [
                                            store,
                                            function (e) {
                                              return -0.42 * e.viewport.width;
                                            },
                                          ],
                                          width: [
                                            store,
                                            function (e) {
                                              return (
                                                (c.a.isMobile ? 920 : 700) *
                                                e.viewport.scale
                                              );
                                            },
                                          ],
                                        },
                                      }),
                                      c.a.isSandbox ||
                                        this.object.add(this.bodyText.object),
                                      this.title.store.compute(function (e) {
                                        var n = e.height,
                                          i = t.bodyText.props.height,
                                          r =
                                            store.state.viewport.scale *
                                            (c.a.isMobile ? 80 : 50),
                                          o = n + r + i,
                                          a = 0.6 * o,
                                          s = -n - r + 0.6 * o;
                                        (t.title.props.pY = a),
                                          (t.bodyText.props.pY = s);
                                      });
                                  case 11:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        }),
                      );
                      return function () {
                        return e.apply(this, arguments);
                      };
                    })(),
                  },
                  {
                    key: 'onVisible',
                    value: function () {
                      this.field.props.visible = !0;
                    },
                  },
                  {
                    key: 'offVisible',
                    value: function () {
                      (this.field.props.visible = !1), this.reset();
                    },
                  },
                  {
                    key: 'onActive',
                    value: function () {
                      this.title.show({ delay: 0.4 }),
                        this.bodyText.show({ delay: 0.9 }),
                        TweenMax.killTweensOf(this.offVisibleDelayed);
                    },
                  },
                  {
                    key: 'offActive',
                    value: function () {
                      this.title.hide(), this.bodyText.hide({ delay: 0 });
                    },
                  },
                  { key: 'reset', value: function () {} },
                  {
                    key: 'whileVisible',
                    value: function () {
                      this.updateProps();
                    },
                  },
                  {
                    key: 'updateProps',
                    value: function () {
                      (this.props.pX = 0),
                        (this.props.pY = 0),
                        (this.props.pZ = 0);
                    },
                  },
                  { key: 'setCameraFOV', value: function (e) {} },
                  {
                    key: 'setResolution',
                    value: function (e) {
                      var t = e.width,
                        n = e.height;
                      (this.camera.aspect = t / n),
                        this.camera.updateProjectionMatrix(),
                        this.camera.setFocalLength(this.props.cameraFOV);
                      var i = (this.vw = t),
                        r = (this.vh = n);
                      this.resObj = { width: i, height: r };
                    },
                  },
                  { key: 'onPointerActive', value: function () {} },
                  { key: 'offPointerActive', value: function () {} },
                  {
                    key: 'setPointerPosition',
                    value: function (e) {
                      var t = uh(e, 2);
                      t[0], t[1];
                    },
                  },
                ]) && ph(n.prototype, i),
                r && ph(n, r),
                t
              );
            })()),
          ) || oh;
        function mh(e) {
          return (mh = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function gh(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function bh(e, t) {
          return (bh =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function yh() {
          var e = xh([
            '\n    precision highp float;\n\n    uniform sampler2D map;\n    uniform sampler2D tGrade;\n\n    uniform vec2 resolution;\n\n    uniform float edgeTop;\n    uniform float edgeBottom;\n\n    uniform float slopeTop;\n    uniform float slopeBottom;\n\n    float random (vec2 st) {\n        return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n    }\n\n    vec3 blendMultiply(vec3 base, vec3 blend) {\n        return base*blend;\n    }\n\n    vec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n        return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n    }\n\n\n    ',
            '\n\n    void main() {\n\n        vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n        vec3 cBlend = vec3(0.02, 0.31, 0.16);\n        vec3 cDark = vec3(0.05, 0.21, 0.02);\n\n        float stDarkened = 1. - smoothstep( 0.2, 0.5, distance( uv, vec2(0.25, 0.45 ) ) );\n\n        vec4 color = texture2D(map, uv);\n        color.rgb = postGrade(color.rgb, tGrade).rgb;\n        color.rgb = blendMultiply(color.rgb, cDark, stDarkened * .3);\n        color.rgb = blendMultiply(color.rgb, cBlend, .15);\n\n        float r = random(uv);\n        float rStr = 0.04;\n        color += mix(-rStr/2.0, rStr/2.0, r);\n\n        ',
            '\n\n        color.rgb = clamp(color.rgb, 0.0, 1.0);\n        // color.rgb = mix(color.rgb, vec3(0.0), 0.5 * smoothstep(0.5, 0.8, distance(uv, vec2(0.2, 0.5))));\n        color.rgb = mix(color.rgb, vec3(0.0), 0.5 * smoothstep(0.4, 1.0, uv.x));\n\n        // gl_FragColor = vec4(vec3(stDarkened), 1.);\n        gl_FragColor = vec4(color);\n    }\n',
          ]);
          return (
            (yh = function () {
              return e;
            }),
            e
          );
        }
        function wh() {
          var e = xh([
            '\n    precision highp float;\n    attribute vec2 position;\n\n    void main() {\n        gl_Position = vec4(position, 1.0, 1.0);\n    }\n',
          ]);
          return (
            (wh = function () {
              return e;
            }),
            e
          );
        }
        function xh(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var Ph = Mt(wh()),
          _h = Mt(
            yh(),
            '#define GLSLIFY 1\nvec4 lookup(in vec4 textureColor, in sampler2D lookupTable) {\n    #ifndef LUT_NO_CLAMP\n        textureColor = clamp(textureColor, 0.0, 1.0);\n    #endif\n\n    mediump float blueColor = textureColor.b * 63.0;\n\n    mediump vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n\n    mediump vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\n    highp vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\n\n    #ifdef LUT_FLIP_Y\n        texPos1.y = 1.0-texPos1.y;\n    #endif\n\n    highp vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\n\n    #ifdef LUT_FLIP_Y\n        texPos2.y = 1.0-texPos2.y;\n    #endif\n\n    lowp vec4 newColor1 = texture2D(lookupTable, texPos1);\n    lowp vec4 newColor2 = texture2D(lookupTable, texPos2);\n\n    lowp vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    return newColor;\n}\n\nvec4 postGrade(vec3 cBase, sampler2D tGrade){\n   return lookup(vec4(cBase, 1.), tGrade);\n}',
            Kt,
          ),
          kh = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.map,
                a = r.resolution,
                u = void 0 === a ? new $e.Vector2() : a;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = mh(t).call(this, {
                  uniforms: {
                    map: { value: o },
                    tGrade: { value: null },
                    resolution: { value: u },
                    edgeTop: { value: 0 },
                    edgeBottom: { value: 0 },
                    slopeTop: { value: 0 },
                    slopeBottom: { value: 0 },
                  },
                  vertexShader: Ph,
                  fragmentShader: _h,
                  depthTest: !1,
                  transparent: !0,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? gh(n)
                    : i).type = 'FieldPostProcessingMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(gh(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && bh(e, t);
              })(t, $e['RawShaderMaterial']),
              t
            );
          })();
        var Oh = function (e, t) {
          var n, i, r, o, a;
          (this.object = e),
            (this.domElement = void 0 !== t ? t : document),
            (this.enabled = !0),
            (this.target = new $e.Vector3()),
            (this.minDistance = 0),
            (this.maxDistance = 1 / 0),
            (this.minZoom = 0),
            (this.maxZoom = 1 / 0),
            (this.minPolarAngle = 0),
            (this.maxPolarAngle = Math.PI),
            (this.minAzimuthAngle = -1 / 0),
            (this.maxAzimuthAngle = 1 / 0),
            (this.enableDamping = !1),
            (this.dampingFactor = 0.25),
            (this.enableZoom = !0),
            (this.zoomSpeed = 1),
            (this.enableRotate = !0),
            (this.rotateSpeed = 1),
            (this.enablePan = !0),
            (this.keyPanSpeed = 7),
            (this.autoRotate = !1),
            (this.autoRotateSpeed = 2),
            (this.enableKeys = !0),
            (this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }),
            (this.mouseButtons = {
              ORBIT: $e.MOUSE.LEFT,
              ZOOM: $e.MOUSE.MIDDLE,
              PAN: $e.MOUSE.RIGHT,
            }),
            (this.target0 = this.target.clone()),
            (this.position0 = this.object.position.clone()),
            (this.zoom0 = this.object.zoom),
            (this.getPolarAngle = function () {
              return d.phi;
            }),
            (this.getAzimuthalAngle = function () {
              return d.theta;
            }),
            (this.saveState = function () {
              s.target0.copy(s.target),
                s.position0.copy(s.object.position),
                (s.zoom0 = s.object.zoom);
            }),
            (this.reset = function () {
              s.target.copy(s.target0),
                s.object.position.copy(s.position0),
                (s.object.zoom = s.zoom0),
                s.object.updateProjectionMatrix(),
                s.dispatchEvent(u),
                s.update(),
                (h = p.NONE);
            }),
            (this.update =
              ((n = new $e.Vector3()),
              (i = new $e.Quaternion().setFromUnitVectors(
                e.up,
                new $e.Vector3(0, 1, 0),
              )),
              (r = i.clone().inverse()),
              (o = new $e.Vector3()),
              (a = new $e.Quaternion()),
              function () {
                var e = s.object.position;
                return (
                  n.copy(e).sub(s.target),
                  n.applyQuaternion(i),
                  d.setFromVector3(n),
                  s.autoRotate &&
                    h === p.NONE &&
                    M(((2 * Math.PI) / 60 / 60) * s.autoRotateSpeed),
                  (d.theta += v.theta),
                  (d.phi += v.phi),
                  (d.theta = Math.max(
                    s.minAzimuthAngle,
                    Math.min(s.maxAzimuthAngle, d.theta),
                  )),
                  (d.phi = Math.max(
                    s.minPolarAngle,
                    Math.min(s.maxPolarAngle, d.phi),
                  )),
                  d.makeSafe(),
                  (d.radius *= m),
                  (d.radius = Math.max(
                    s.minDistance,
                    Math.min(s.maxDistance, d.radius),
                  )),
                  s.target.add(g),
                  n.setFromSpherical(d),
                  n.applyQuaternion(r),
                  e.copy(s.target).add(n),
                  s.object.lookAt(s.target),
                  !0 === s.enableDamping
                    ? ((v.theta *= 1 - s.dampingFactor),
                      (v.phi *= 1 - s.dampingFactor))
                    : v.set(0, 0, 0),
                  (m = 1),
                  g.set(0, 0, 0),
                  !!(
                    b ||
                    o.distanceToSquared(s.object.position) > f ||
                    8 * (1 - a.dot(s.object.quaternion)) > f
                  ) &&
                    (s.dispatchEvent(u),
                    o.copy(s.object.position),
                    a.copy(s.object.quaternion),
                    (b = !1),
                    !0)
                );
              })),
            (this.dispose = function () {
              s.domElement.removeEventListener('contextmenu', X, !1),
                s.domElement.removeEventListener('mousedown', D, !1),
                s.domElement.removeEventListener('wheel', N, !1),
                s.domElement.removeEventListener('touchstart', V, !1),
                s.domElement.removeEventListener('touchend', H, !1),
                s.domElement.removeEventListener('touchmove', Y, !1),
                document.removeEventListener('mousemove', U, !1),
                document.removeEventListener('mouseup', z, !1),
                window.removeEventListener('keydown', B, !1);
            });
          var s = this,
            u = { type: 'change' },
            l = { type: 'start' },
            c = { type: 'end' },
            p = {
              NONE: -1,
              ROTATE: 0,
              DOLLY: 1,
              PAN: 2,
              TOUCH_ROTATE: 3,
              TOUCH_DOLLY: 4,
              TOUCH_PAN: 5,
            },
            h = p.NONE,
            f = 1e-6,
            d = new $e.Spherical(),
            v = new $e.Spherical(),
            m = 1,
            g = new $e.Vector3(),
            b = !1,
            y = new $e.Vector2(),
            w = new $e.Vector2(),
            x = new $e.Vector2(),
            P = new $e.Vector2(),
            _ = new $e.Vector2(),
            k = new $e.Vector2(),
            O = new $e.Vector2(),
            S = new $e.Vector2(),
            T = new $e.Vector2();
          function A() {
            return Math.pow(0.95, s.zoomSpeed);
          }
          function M(e) {
            v.theta -= e;
          }
          function j(e) {
            v.phi -= e;
          }
          var F,
            R =
              ((F = new $e.Vector3()),
              function (e, t) {
                F.setFromMatrixColumn(t, 0), F.multiplyScalar(-e), g.add(F);
              }),
            C = (function () {
              var e = new $e.Vector3();
              return function (t, n) {
                e.setFromMatrixColumn(n, 1), e.multiplyScalar(t), g.add(e);
              };
            })(),
            E = (function () {
              var e = new $e.Vector3();
              return function (t, n) {
                var i =
                  s.domElement === document ? s.domElement.body : s.domElement;
                if (s.object.isPerspectiveCamera) {
                  var r = s.object.position;
                  e.copy(r).sub(s.target);
                  var o = e.length();
                  (o *= Math.tan(((s.object.fov / 2) * Math.PI) / 180)),
                    R((2 * t * o) / i.clientHeight, s.object.matrix),
                    C((2 * n * o) / i.clientHeight, s.object.matrix);
                } else
                  s.object.isOrthographicCamera
                    ? (R(
                        (t * (s.object.right - s.object.left)) /
                          s.object.zoom /
                          i.clientWidth,
                        s.object.matrix,
                      ),
                      C(
                        (n * (s.object.top - s.object.bottom)) /
                          s.object.zoom /
                          i.clientHeight,
                        s.object.matrix,
                      ))
                    : (console.warn(
                        'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.',
                      ),
                      (s.enablePan = !1));
              };
            })();
          function L(e) {
            s.object.isPerspectiveCamera
              ? (m /= e)
              : s.object.isOrthographicCamera
              ? ((s.object.zoom = Math.max(
                  s.minZoom,
                  Math.min(s.maxZoom, s.object.zoom * e),
                )),
                s.object.updateProjectionMatrix(),
                (b = !0))
              : (console.warn(
                  'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.',
                ),
                (s.enableZoom = !1));
          }
          function I(e) {
            s.object.isPerspectiveCamera
              ? (m *= e)
              : s.object.isOrthographicCamera
              ? ((s.object.zoom = Math.max(
                  s.minZoom,
                  Math.min(s.maxZoom, s.object.zoom / e),
                )),
                s.object.updateProjectionMatrix(),
                (b = !0))
              : (console.warn(
                  'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.',
                ),
                (s.enableZoom = !1));
          }
          function D(e) {
            if (!1 !== s.enabled) {
              switch ((e.preventDefault(), e.button)) {
                case s.mouseButtons.ORBIT:
                  if (!1 === s.enableRotate) return;
                  !(function (e) {
                    y.set(e.clientX, e.clientY);
                  })(e),
                    (h = p.ROTATE);
                  break;
                case s.mouseButtons.ZOOM:
                  if (!1 === s.enableZoom) return;
                  !(function (e) {
                    O.set(e.clientX, e.clientY);
                  })(e),
                    (h = p.DOLLY);
                  break;
                case s.mouseButtons.PAN:
                  if (!1 === s.enablePan) return;
                  !(function (e) {
                    P.set(e.clientX, e.clientY);
                  })(e),
                    (h = p.PAN);
              }
              h !== p.NONE &&
                (document.addEventListener('mousemove', U, !1),
                document.addEventListener('mouseup', z, !1),
                s.dispatchEvent(l));
            }
          }
          function U(e) {
            if (!1 !== s.enabled)
              switch ((e.preventDefault(), h)) {
                case p.ROTATE:
                  if (!1 === s.enableRotate) return;
                  !(function (e) {
                    w.set(e.clientX, e.clientY), x.subVectors(w, y);
                    var t =
                      s.domElement === document
                        ? s.domElement.body
                        : s.domElement;
                    M(((2 * Math.PI * x.x) / t.clientWidth) * s.rotateSpeed),
                      j(((2 * Math.PI * x.y) / t.clientHeight) * s.rotateSpeed),
                      y.copy(w),
                      s.update();
                  })(e);
                  break;
                case p.DOLLY:
                  if (!1 === s.enableZoom) return;
                  !(function (e) {
                    S.set(e.clientX, e.clientY),
                      T.subVectors(S, O),
                      T.y > 0 ? L(A()) : T.y < 0 && I(A()),
                      O.copy(S),
                      s.update();
                  })(e);
                  break;
                case p.PAN:
                  if (!1 === s.enablePan) return;
                  !(function (e) {
                    _.set(e.clientX, e.clientY),
                      k.subVectors(_, P),
                      E(k.x, k.y),
                      P.copy(_),
                      s.update();
                  })(e);
              }
          }
          function z(e) {
            !1 !== s.enabled &&
              (document.removeEventListener('mousemove', U, !1),
              document.removeEventListener('mouseup', z, !1),
              s.dispatchEvent(c),
              (h = p.NONE));
          }
          function N(e) {
            !1 === s.enabled ||
              !1 === s.enableZoom ||
              (h !== p.NONE && h !== p.ROTATE) ||
              (e.preventDefault(),
              e.stopPropagation(),
              (function (e) {
                e.deltaY < 0 ? I(A()) : e.deltaY > 0 && L(A()), s.update();
              })(e),
              s.dispatchEvent(l),
              s.dispatchEvent(c));
          }
          function B(e) {
            !1 !== s.enabled &&
              !1 !== s.enableKeys &&
              !1 !== s.enablePan &&
              (function (e) {
                switch (e.keyCode) {
                  case s.keys.UP:
                    E(0, s.keyPanSpeed), s.update();
                    break;
                  case s.keys.BOTTOM:
                    E(0, -s.keyPanSpeed), s.update();
                    break;
                  case s.keys.LEFT:
                    E(s.keyPanSpeed, 0), s.update();
                    break;
                  case s.keys.RIGHT:
                    E(-s.keyPanSpeed, 0), s.update();
                }
              })(e);
          }
          function V(e) {
            if (!1 !== s.enabled) {
              switch (e.touches.length) {
                case 1:
                  if (!1 === s.enableRotate) return;
                  !(function (e) {
                    y.set(e.touches[0].pageX, e.touches[0].pageY);
                  })(e),
                    (h = p.TOUCH_ROTATE);
                  break;
                case 2:
                  if (!1 === s.enableZoom) return;
                  !(function (e) {
                    var t = e.touches[0].pageX - e.touches[1].pageX,
                      n = e.touches[0].pageY - e.touches[1].pageY,
                      i = Math.sqrt(t * t + n * n);
                    O.set(0, i);
                  })(e),
                    (h = p.TOUCH_DOLLY);
                  break;
                case 3:
                  if (!1 === s.enablePan) return;
                  !(function (e) {
                    P.set(e.touches[0].pageX, e.touches[0].pageY);
                  })(e),
                    (h = p.TOUCH_PAN);
                  break;
                default:
                  h = p.NONE;
              }
              h !== p.NONE && s.dispatchEvent(l);
            }
          }
          function Y(e) {
            if (!1 !== s.enabled)
              switch (
                (e.preventDefault(), e.stopPropagation(), e.touches.length)
              ) {
                case 1:
                  if (!1 === s.enableRotate) return;
                  if (h !== p.TOUCH_ROTATE) return;
                  !(function (e) {
                    w.set(e.touches[0].pageX, e.touches[0].pageY),
                      x.subVectors(w, y);
                    var t =
                      s.domElement === document
                        ? s.domElement.body
                        : s.domElement;
                    M(((2 * Math.PI * x.x) / t.clientWidth) * s.rotateSpeed),
                      j(((2 * Math.PI * x.y) / t.clientHeight) * s.rotateSpeed),
                      y.copy(w),
                      s.update();
                  })(e);
                  break;
                case 2:
                  if (!1 === s.enableZoom) return;
                  if (h !== p.TOUCH_DOLLY) return;
                  !(function (e) {
                    var t = e.touches[0].pageX - e.touches[1].pageX,
                      n = e.touches[0].pageY - e.touches[1].pageY,
                      i = Math.sqrt(t * t + n * n);
                    S.set(0, i),
                      T.subVectors(S, O),
                      T.y > 0 ? I(A()) : T.y < 0 && L(A()),
                      O.copy(S),
                      s.update();
                  })(e);
                  break;
                case 3:
                  if (!1 === s.enablePan) return;
                  if (h !== p.TOUCH_PAN) return;
                  !(function (e) {
                    _.set(e.touches[0].pageX, e.touches[0].pageY),
                      k.subVectors(_, P),
                      E(k.x, k.y),
                      P.copy(_),
                      s.update();
                  })(e);
                  break;
                default:
                  h = p.NONE;
              }
          }
          function H(e) {
            !1 !== s.enabled && (s.dispatchEvent(c), (h = p.NONE));
          }
          function X(e) {
            !1 !== s.enabled && e.preventDefault();
          }
          s.domElement.addEventListener('contextmenu', X, !1),
            s.domElement.addEventListener('mousedown', D, !1),
            s.domElement.addEventListener('wheel', N, !1),
            s.domElement.addEventListener('touchstart', V, !1),
            s.domElement.addEventListener('touchend', H, !1),
            s.domElement.addEventListener('touchmove', Y, !1),
            window.addEventListener('keydown', B, !1),
            this.update();
        };
        ((Oh.prototype = Object.create(
          $e.EventDispatcher.prototype,
        )).constructor = Oh),
          Object.defineProperties(Oh.prototype, {
            center: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .center has been renamed to .target',
                  ),
                  this.target
                );
              },
            },
            noZoom: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.',
                  ),
                  !this.enableZoom
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.',
                ),
                  (this.enableZoom = !e);
              },
            },
            noRotate: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.',
                  ),
                  !this.enableRotate
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.',
                ),
                  (this.enableRotate = !e);
              },
            },
            noPan: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.',
                  ),
                  !this.enablePan
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.',
                ),
                  (this.enablePan = !e);
              },
            },
            noKeys: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.',
                  ),
                  !this.enableKeys
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.',
                ),
                  (this.enableKeys = !e);
              },
            },
            staticMoving: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.',
                  ),
                  !this.enableDamping
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.',
                ),
                  (this.enableDamping = !e);
              },
            },
            dynamicDampingFactor: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.',
                  ),
                  this.dampingFactor
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.',
                ),
                  (this.dampingFactor = e);
              },
            },
          });
        var Sh,
          Th = Oh;
        function Ah(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function Mh(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function jh(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Fh(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Rh(e) {
          return (Rh = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ch(e, t) {
          return (Ch =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Eh,
          Lh = function (e, t) {
            return t.reduce(function (t, n) {
              return n in e && (t[n] = e[n]), t;
            }, {});
          },
          Ih =
            Object(it.a)(rt)(
              (Sh = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Fh(
                      this,
                      (e = Rh(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      name: 'Camera-Object',
                      debug: !1,
                      debugOrbit: (c.a.isSandbox, !1),
                    }),
                    (n.props = {
                      active: !1,
                      progress: 0,
                      pointerPositionMapped: [
                        store,
                        function (e) {
                          return e.pointerPositionMapped;
                        },
                      ],
                      pointerActive: [
                        store,
                        function (e) {
                          return e.pointer.active;
                        },
                      ],
                      gyro: [
                        store,
                        function (e) {
                          return Lh(e.gyro, ['alpha', 'beta', 'gamma']);
                        },
                      ],
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && Ch(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (this.camera = this.options.camera),
                                          (this.camera.far = 60),
                                          (this.scene = this.options.scene),
                                          (this.cameraWrapper = new $e.Object3D()),
                                          this.cameraWrapper.add(this.camera),
                                          (this.vTarget = new $e.Vector3()),
                                          (this.vSphericalOffset = new $e.Vector3()),
                                          (this.spherical = new $e.Spherical()),
                                          (this.quat = new $e.Quaternion().setFromUnitVectors(
                                            this.camera.up,
                                            new $e.Vector3(0, 1, 0),
                                          )),
                                          (this.object.name = this.options.name),
                                          this.object.add(this.cameraWrapper),
                                          this.scene.add(this.object),
                                          this.options.debugOrbit &&
                                            ((this.camera.position.z = 8),
                                            (this.orbitControls = new Th(
                                              this.camera,
                                              this.options.renderer.domElement,
                                            ))),
                                          this.options.debug &&
                                            ((this.meshTargetDebug = new $e.Mesh(
                                              new $e.BoxBufferGeometry(1, 1, 1),
                                              new $e.MeshBasicMaterial({
                                                color: 16711680,
                                              }),
                                            )),
                                            this.meshTargetDebug.layers.set(2),
                                            this.scene.add(this.meshTargetDebug)),
                                          (this.posOffset = [0, 0, 0]),
                                          (this.posOffsetTg = [0, 0, 0]),
                                          (this.posOffsetVel = [0, 0, 0]),
                                          (this.rotOffset = [0, 0, 0]),
                                          (this.rotOffsetTg = [0, 0, 0]),
                                          (this.rotOffsetVel = [0, 0, 0]),
                                          (this.mPointerPrev = [0, 0]),
                                          (this.mCoordsDelta = [0, 0]),
                                          (this.pointerArr = [0, 0]),
                                          (this.gyroCoordsDelta = [0, 0, 0]),
                                          (this.gyroCoords = [0, 0, 0]),
                                          (this.gyroCoordsPrev = [0, 0, 0]),
                                          (this.gyroStoredCoords = [0, 0, 0]),
                                          (this.gyroStoredOffsets = [0, 0, 0]),
                                          (this.rotTilt = [0, 0, 0]),
                                          (this.rotTiltTg = [0, 0, 0]),
                                          (this.rotTiltVel = [0, 0, 0]);
                                      case 31:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  Mh(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  Mh(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'onActive',
                      value: function () {
                        this.requestStoreGyro = !0;
                      },
                    },
                    { key: 'offActive', value: function () {} },
                    {
                      key: 'setPointerPositionMapped',
                      value: function (e) {
                        var t = Ah(e, 2),
                          n = t[0],
                          i = t[1];
                        (this.pointerArr[0] = n), (this.pointerArr[1] = i);
                      },
                    },
                    { key: 'onPointerActive', value: function () {} },
                    { key: 'offPointerActive', value: function () {} },
                    {
                      key: 'computePointerCoords',
                      value: function () {
                        (this.mCoordsDelta[0] =
                          this.pointerArr[0] - this.mPointerPrev[0]),
                          (this.mCoordsDelta[1] =
                            this.pointerArr[1] - this.mPointerPrev[1]);
                        var e = [0.8, 0.8, 0.8],
                          t = [0.24 * -Math.PI, 0.24 * Math.PI, 0];
                        (this.rotTiltTg[0] = Object(o.a)(
                          -this.mCoordsDelta[1],
                          -e[0],
                          e[0],
                          -t[0],
                          t[0],
                          !0,
                        )),
                          (this.rotTiltTg[1] = Object(o.a)(
                            -this.mCoordsDelta[0],
                            -e[1],
                            e[1],
                            -t[1],
                            t[1],
                            !0,
                          )),
                          (this.rotTiltTg[2] = Object(o.a)(
                            this.mCoordsDelta[0],
                            -e[2],
                            e[2],
                            -t[2],
                            t[2],
                            !0,
                          )),
                          (this.rotOffsetTg[0] = -this.pointerArr[1]),
                          (this.rotOffsetTg[1] = -this.pointerArr[0]),
                          (this.rotOffsetTg[0] = Object(A.a)(
                            this.rotOffsetTg[0],
                            -1,
                            1,
                          )),
                          (this.rotOffsetTg[1] = Object(A.a)(
                            this.rotOffsetTg[1],
                            -1,
                            1,
                          )),
                          (this.posOffsetTg[0] += this.mCoordsDelta[0]),
                          (this.posOffsetTg[1] += this.mCoordsDelta[1]),
                          (this.posOffsetTg[0] = Object(A.a)(
                            this.posOffsetTg[0],
                            -1,
                            1,
                          )),
                          (this.posOffsetTg[1] = Object(A.a)(
                            this.posOffsetTg[1],
                            -1,
                            1,
                          )),
                          (this.mPointerPrev[0] = this.pointerArr[0]),
                          (this.mPointerPrev[1] = this.pointerArr[1]);
                      },
                    },
                    {
                      key: 'computeGyroCoords',
                      value: function () {
                        (this.gyroCoords[0] = this.gyroStoredCoords[2]),
                          (this.gyroCoords[1] = this.gyroStoredCoords[1]),
                          (this.gyroCoordsDelta[0] =
                            this.gyroCoords[0] - this.gyroCoordsPrev[0]),
                          (this.gyroCoordsDelta[1] =
                            this.gyroCoords[1] - this.gyroCoordsPrev[1]),
                          Math.abs(Zn(this.gyroCoordsDelta[0])) < 0.1 &&
                            (this.posOffsetTg[0] +=
                              -0.08 * this.gyroCoordsDelta[0]),
                          Math.abs(Zn(this.gyroCoordsDelta[1])) < 0.1 &&
                            (this.posOffsetTg[1] +=
                              0.07 * this.gyroCoordsDelta[1]),
                          (this.posOffsetTg[0] = Object(A.a)(
                            this.posOffsetTg[0],
                            -1,
                            1,
                          )),
                          (this.posOffsetTg[1] = Object(A.a)(
                            this.posOffsetTg[1],
                            -1,
                            1,
                          )),
                          (this.gyroCoordsPrev[0] = this.gyroCoords[0]),
                          (this.gyroCoordsPrev[1] = this.gyroCoords[1]);
                      },
                    },
                    {
                      key: 'setGyro',
                      value: function (e) {
                        if (this.requestStoreGyro)
                          return (
                            (this.gyroStoredOffsets = [e.alpha, e.beta, e.gamma]),
                            (this.posOffsetTg[0] = 0),
                            (this.posOffsetTg[1] = 0),
                            (this.posOffset[0] = 0),
                            (this.posOffset[1] = 0),
                            void (this.requestStoreGyro = !1)
                          );
                        var t = e.alpha - this.gyroStoredOffsets[0];
                        t = t < 0 ? 360 - Math.abs(t) : t;
                        var n = e.beta - this.gyroStoredOffsets[1];
                        n = n < 0 ? 360 - Math.abs(n) : n;
                        var i = e.gamma - this.gyroStoredOffsets[2];
                        (i = i < 0 ? 360 - Math.abs(i) : i),
                          (this.gyroStoredCoords = [t, n, i]);
                      },
                    },
                    {
                      key: 'update',
                      value: function () {
                        c.a.isMobile
                          ? this.computeGyroCoords()
                          : this.computePointerCoords(),
                          this.applyCameraPositionOffset(),
                          this.options.debugOrbit || this.applyCameraMotion();
                      },
                    },
                    {
                      key: 'applyCameraMotion',
                      value: function () {
                        var e = this.props.progress;
                        this.objectGuide &&
                          (this.cameraWrapper.position.copy(
                            this.objectGuide.position,
                          ),
                          this.cameraWrapper.rotation.copy(
                            this.objectGuide.rotation,
                          ));
                        var t = c.a.isMobile ? 13 : 16,
                          n = c.a.isMobile ? 3 : 4,
                          i = Object(Jr.a)(e, t, -t),
                          r = Object(Jr.a)(e, -n, n);
                        (this.cameraWrapper.position.x =
                          -this.posOffset[0] * (c.a.isMobile ? 1.34 : 1.2)),
                          (this.cameraWrapper.position.y =
                            -this.posOffset[1] * (c.a.isMobile ? 1.34 : 1.2) + i),
                          (this.cameraWrapper.position.z =
                            (c.a.isMobile ? 13 : 17) + r),
                          (this.vTarget.x = 0),
                          (this.vTarget.y = i),
                          (this.vTarget.z = c.a.isMobile ? 3 : 4);
                        var o = this.quat,
                          a = o.clone().inverse(),
                          s = this.cameraWrapper.position;
                        this.vSphericalOffset.copy(s).sub(this.vTarget),
                          this.vSphericalOffset.applyQuaternion(o),
                          this.spherical.setFromVector3(this.vSphericalOffset),
                          (this.spherical.radius *= 1),
                          this.vSphericalOffset.setFromSpherical(this.spherical),
                          this.vSphericalOffset.applyQuaternion(a),
                          this.camera.position
                            .copy(this.vTarget)
                            .add(this.vSphericalOffset),
                          this.camera.lookAt(this.vTarget),
                          this.meshTargetDebug &&
                            this.meshTargetDebug.position.copy(this.vTarget);
                      },
                    },
                    {
                      key: 'applyCameraPositionOffset',
                      value: function () {
                        var e = (c.a.isMobile, 0.03),
                          t = c.a.isMobile ? 0.7 : 0.68;
                        (this.posOffsetVel[0] +=
                          (this.posOffsetTg[0] - this.posOffset[0]) * e),
                          (this.posOffset[0] += this.posOffsetVel[0] *= t),
                          (this.posOffsetVel[1] +=
                            (this.posOffsetTg[1] - this.posOffset[1]) * e),
                          (this.posOffset[1] += this.posOffsetVel[1] *= t);
                      },
                    },
                  ]) && jh(n.prototype, i),
                  r && jh(n, r),
                  t
                );
              })()),
            ) || Sh;
        function Dh(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Uh(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Dh(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Dh(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function zh(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Nh(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Bh(e) {
          return (Bh = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Vh(e, t) {
          return (Vh =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Yh = Object(u.a)(),
          Hh =
            Object(it.a)($r)(
              (Eh =
                Object(it.a)(c.a.isSandbox ? Object(Ri.a)() : null)(
                  (Eh = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = Nh(
                          this,
                          (e = Bh(t)).call.apply(e, [this].concat(r)),
                        )).options = {
                          size: 1,
                          offset: 0,
                          postProcessingMaterial: new kh(),
                          debug: !1,
                        }),
                        (n.props = {
                          progress: 0.5,
                          pointerPositionMapped: [
                            Yh,
                            function (e) {
                              return e.pointerPositionMapped;
                            },
                          ],
                          pointerActive: [
                            Yh,
                            function (e) {
                              return e.pointer.active;
                            },
                          ],
                          resolution: [
                            Yh,
                            function (e) {
                              return s.a.pick(
                                e.viewport,
                                'width',
                                'height',
                                'pixelRatio',
                              );
                            },
                          ],
                          active: !1,
                          visible: !1,
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && Vh(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e = Uh(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (window.fieldSection = this),
                                            (this.animObj = { pCamIntro: 0 }),
                                            (this.vResolution = new $e.Vector2()),
                                            (e.next = 5),
                                            this.setupPostProcessing()
                                          );
                                        case 5:
                                          return (e.next = 7), this.setupScene();
                                        case 7:
                                          return (e.next = 9), this.setupCamera();
                                        case 9:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupPostProcessing',
                          value: (function () {
                            var e = Uh(
                              regeneratorRuntime.mark(function e() {
                                var t;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (e.next = 2),
                                            Gn('map-grade-field', !1, !1)
                                          );
                                        case 2:
                                          ((t = e.sent).minFilter =
                                            $e.NearestFilter),
                                            (t.magFilter = $e.NearestFilter),
                                            (t.flipY = !1),
                                            (t.needsUpdate = !0),
                                            (this.options.postProcessingMaterial.uniforms.tGrade.value = t);
                                        case 8:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupScene',
                          value: (function () {
                            var e = Uh(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (e.next = 2),
                                            new vh().setup({
                                              options: {
                                                layers: {
                                                  BG_LAYER: 1,
                                                  MAIN_LAYER: 2,
                                                  UI_LAYER: 3,
                                                },
                                                camera: this.camera,
                                              },
                                            })
                                          );
                                        case 2:
                                          (this.sceneView = e.sent),
                                            this.scene.add(this.sceneView.object);
                                        case 4:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupCamera',
                          value: (function () {
                            var e = Uh(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (e.next = 2),
                                            new Ih().setup({
                                              options: {
                                                name: 'Field-Camera-Object',
                                                camera: this.camera,
                                                scene: this.scene,
                                                renderer: Rn().renderer,
                                              },
                                              props: {
                                                progress: [
                                                  this.store,
                                                  function (e) {
                                                    return e.progress;
                                                  },
                                                ],
                                              },
                                            })
                                          );
                                        case 2:
                                          this.cameraController = e.sent;
                                        case 3:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'onVisible',
                          value: function () {
                            (this.scene.visible = !0),
                              (this.sceneView.props.visible = !0),
                              (this.cameraController.props.active = !0);
                          },
                        },
                        {
                          key: 'offVisible',
                          value: function () {
                            (this.scene.visible = !1),
                              (this.sceneView.props.visible = !1),
                              (this.cameraController.props.active = !1);
                          },
                        },
                        {
                          key: 'onActive',
                          value: function () {
                            this.sceneView.props.active = !0;
                          },
                        },
                        {
                          key: 'offActive',
                          value: function () {
                            this.sceneView.props.active = !1;
                          },
                        },
                        { key: 'setProgress', value: function () {} },
                        { key: 'onPointerActive', value: function () {} },
                        { key: 'offPointerActive', value: function () {} },
                        {
                          key: 'whileVisible',
                          value: function () {
                            var e = this.props.progress;
                            this.cameraController &&
                              this.cameraController.update(),
                              this.sceneView &&
                                (this.sceneView.props.progress = e);
                          },
                        },
                        {
                          key: 'setResolution',
                          value: function (e) {
                            var t = e.width,
                              n = e.height,
                              i = e.pixelRatio;
                            (this.vw = t),
                              (this.vh = n),
                              this.options.postProcessingMaterial.resolution.set(
                                t * i,
                                n * i,
                              ),
                              this.vResolution.set(t, n);
                          },
                        },
                        {
                          key: 'render',
                          value: function (e) {
                            var t = e.renderer,
                              n = e.ortho;
                            n.layers.set(1),
                              t.render(this.scene, n),
                              t.clearDepth(),
                              this.camera.layers.set(2),
                              t.render(this.scene, this.camera);
                          },
                        },
                        {
                          key: 'renderUi',
                          value: function (e) {
                            var t = e.renderer,
                              n = e.ortho;
                            n.layers.set(3), t.render(this.scene, n);
                          },
                        },
                      ]) && zh(n.prototype, i),
                      r && zh(n, r),
                      t
                    );
                  })()),
                ) || Eh),
            ) || Eh;
        function Xh(e) {
          return (Xh = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Gh(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function Wh(e, t) {
          return (Wh =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Qh() {
          var e = Zh([
            '\n    precision highp float;\n\n    uniform sampler2D map;\n    uniform vec2 resolution;\n    \n    uniform float edgeTop;\n    uniform float edgeBottom;\n    \n    uniform float slopeTop;\n    uniform float slopeBottom;\n\n    uniform float inProgress;\n\n    float random (vec2 st) {\n        return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n    }\n\n    ',
            '\n\n    void main() {\n\n        vec2 uv = gl_FragCoord.xy / resolution.xy;\n        vec4 color = texture2D(map, uv);\n\n        float r = random(uv);\n        float rStr = 0.04;\n        color += mix(-rStr/2.0, rStr/2.0, r);\n\n        ',
            '\n        ',
            '\n\n        gl_FragColor = vec4(color);\n    }\n',
          ]);
          return (
            (Qh = function () {
              return e;
            }),
            e
          );
        }
        function qh() {
          var e = Zh([
            '\n    precision highp float;\n    attribute vec2 position;\n\n    void main() {\n        gl_Position = vec4(position, 1.0, 1.0);\n    }\n',
          ]);
          return (
            (qh = function () {
              return e;
            }),
            e
          );
        }
        function Zh(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var Kh,
          $h = Mt(qh()),
          Jh = Mt(Qh(), $t, en, Kt),
          ef = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.map,
                a = r.resolution,
                u = void 0 === a ? new $e.Vector2() : a;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = Xh(t).call(this, {
                  uniforms: {
                    map: { value: o },
                    resolution: { value: u },
                    edgeTop: { value: 0 },
                    edgeBottom: { value: 0 },
                    slopeTop: { value: 0 },
                    slopeBottom: { value: 0 },
                    inProgress: { value: 0 },
                  },
                  vertexShader: $h,
                  fragmentShader: Jh,
                  depthTest: !1,
                  transparent: !0,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? Gh(n)
                    : i).type = 'KernelPostProcessingMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(Gh(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Wh(e, t);
              })(t, $e['RawShaderMaterial']),
              t
            );
          })();
        function tf(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function nf(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function rf(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function of(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function af(e) {
          return (af = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function sf(e, t) {
          return (sf =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var uf,
          lf = function (e, t) {
            return t.reduce(function (t, n) {
              return n in e && (t[n] = e[n]), t;
            }, {});
          },
          cf =
            Object(it.a)(rt)(
              (Kh = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = of(
                      this,
                      (e = af(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      name: 'Camera-Object',
                      debug: !1,
                      debugOrbit: (c.a.isSandbox, !1),
                    }),
                    (n.props = {
                      active: !1,
                      progress: 0,
                      progressHotspot: 0,
                      pointerPositionMapped: [
                        store,
                        function (e) {
                          return e.pointerPositionMapped;
                        },
                      ],
                      pointerActive: [
                        store,
                        function (e) {
                          return e.pointer.active;
                        },
                      ],
                      gyro: [
                        store,
                        function (e) {
                          return lf(e.gyro, ['alpha', 'beta', 'gamma']);
                        },
                      ],
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && sf(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (this.camera = this.options.camera),
                                          (this.camera.far = 60),
                                          (this.scene = this.options.scene),
                                          (this.cameraWrapper = new $e.Object3D()),
                                          this.cameraWrapper.add(this.camera),
                                          (this.vTarget = new $e.Vector3()),
                                          (this.vSphericalOffset = new $e.Vector3()),
                                          (this.spherical = new $e.Spherical()),
                                          (this.quat = new $e.Quaternion().setFromUnitVectors(
                                            this.camera.up,
                                            new $e.Vector3(0, 1, 0),
                                          )),
                                          (this.object.name = this.options.name),
                                          this.object.add(this.cameraWrapper),
                                          this.scene.add(this.object),
                                          this.options.debugOrbit &&
                                            (this.orbitControls = new Th(
                                              this.camera,
                                              this.options.renderer.domElement,
                                            )),
                                          this.options.debug &&
                                            ((this.meshTargetDebug = new $e.Mesh(
                                              new $e.BoxBufferGeometry(1, 1, 1),
                                              new $e.MeshBasicMaterial({
                                                color: 16711680,
                                              }),
                                            )),
                                            this.meshTargetDebug.layers.set(2),
                                            this.scene.add(this.meshTargetDebug)),
                                          (this.posOffset = [0, 0, 0]),
                                          (this.posOffsetTg = [0, 0, 0]),
                                          (this.posOffsetVel = [0, 0, 0]),
                                          (this.rotOffset = [0, 0, 0]),
                                          (this.rotOffsetTg = [0, 0, 0]),
                                          (this.rotOffsetVel = [0, 0, 0]),
                                          (this.mPointerPrev = [0, 0]),
                                          (this.mCoordsDelta = [0, 0]),
                                          (this.pointerArr = [0, 0]),
                                          (this.gyroCoordsDelta = [0, 0, 0]),
                                          (this.gyroCoords = [0, 0, 0]),
                                          (this.gyroCoordsPrev = [0, 0, 0]),
                                          (this.gyroStoredCoords = [0, 0, 0]),
                                          (this.gyroStoredOffsets = [0, 0, 0]),
                                          (this.rotTilt = [0, 0, 0]),
                                          (this.rotTiltTg = [0, 0, 0]),
                                          (this.rotTiltVel = [0, 0, 0]);
                                      case 31:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  nf(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  nf(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'onActive',
                      value: function () {
                        this.requestStoreGyro = !0;
                      },
                    },
                    { key: 'offActive', value: function () {} },
                    {
                      key: 'setPointerPositionMapped',
                      value: function (e) {
                        var t = tf(e, 2),
                          n = t[0],
                          i = t[1];
                        (this.pointerArr[0] = n), (this.pointerArr[1] = i);
                      },
                    },
                    { key: 'onPointerActive', value: function () {} },
                    { key: 'offPointerActive', value: function () {} },
                    { key: 'setProgressHotspot', value: function (e) {} },
                    {
                      key: 'computePointerCoords',
                      value: function () {
                        (this.mCoordsDelta[0] =
                          this.pointerArr[0] - this.mPointerPrev[0]),
                          (this.mCoordsDelta[1] =
                            this.pointerArr[1] - this.mPointerPrev[1]);
                        var e = [0.8, 0.8, 0.8],
                          t = [0.24 * -Math.PI, 0.24 * Math.PI, 0];
                        (this.rotTiltTg[0] = Object(o.a)(
                          -this.mCoordsDelta[1],
                          -e[0],
                          e[0],
                          -t[0],
                          t[0],
                          !0,
                        )),
                          (this.rotTiltTg[1] = Object(o.a)(
                            -this.mCoordsDelta[0],
                            -e[1],
                            e[1],
                            -t[1],
                            t[1],
                            !0,
                          )),
                          (this.rotTiltTg[2] = Object(o.a)(
                            this.mCoordsDelta[0],
                            -e[2],
                            e[2],
                            -t[2],
                            t[2],
                            !0,
                          )),
                          (this.rotOffsetTg[0] = -this.pointerArr[1]),
                          (this.rotOffsetTg[1] = -this.pointerArr[0]),
                          (this.rotOffsetTg[0] = Object(A.a)(
                            this.rotOffsetTg[0],
                            -1,
                            1,
                          )),
                          (this.rotOffsetTg[1] = Object(A.a)(
                            this.rotOffsetTg[1],
                            -1,
                            1,
                          )),
                          (this.posOffsetTg[0] += this.mCoordsDelta[0]),
                          (this.posOffsetTg[1] += this.mCoordsDelta[1]),
                          (this.posOffsetTg[0] = Object(A.a)(
                            this.posOffsetTg[0],
                            -1,
                            1,
                          )),
                          (this.posOffsetTg[1] = Object(A.a)(
                            this.posOffsetTg[1],
                            -1,
                            1,
                          )),
                          (this.mPointerPrev[0] = this.pointerArr[0]),
                          (this.mPointerPrev[1] = this.pointerArr[1]);
                      },
                    },
                    {
                      key: 'computeGyroCoords',
                      value: function () {
                        (this.gyroCoords[0] = this.gyroStoredCoords[2]),
                          (this.gyroCoords[1] = this.gyroStoredCoords[1]),
                          (this.gyroCoordsDelta[0] =
                            this.gyroCoords[0] - this.gyroCoordsPrev[0]),
                          (this.gyroCoordsDelta[1] =
                            this.gyroCoords[1] - this.gyroCoordsPrev[1]),
                          Math.abs(Zn(this.gyroCoordsDelta[0])) < 0.1 &&
                            (this.posOffsetTg[0] +=
                              -0.08 * this.gyroCoordsDelta[0]),
                          Math.abs(Zn(this.gyroCoordsDelta[1])) < 0.1 &&
                            (this.posOffsetTg[1] +=
                              0.07 * this.gyroCoordsDelta[1]),
                          (this.posOffsetTg[0] = Object(A.a)(
                            this.posOffsetTg[0],
                            -1,
                            1,
                          )),
                          (this.posOffsetTg[1] = Object(A.a)(
                            this.posOffsetTg[1],
                            -1,
                            1,
                          )),
                          (this.gyroCoordsPrev[0] = this.gyroCoords[0]),
                          (this.gyroCoordsPrev[1] = this.gyroCoords[1]);
                      },
                    },
                    {
                      key: 'setGyro',
                      value: function (e) {
                        if (this.requestStoreGyro)
                          return (
                            (this.gyroStoredOffsets = [e.alpha, e.beta, e.gamma]),
                            void (this.requestStoreGyro = !1)
                          );
                        var t = e.alpha - this.gyroStoredOffsets[0];
                        t = t < 0 ? 360 - Math.abs(t) : t;
                        var n = e.beta - this.gyroStoredOffsets[1];
                        n = n < 0 ? 360 - Math.abs(n) : n;
                        var i = e.gamma - this.gyroStoredOffsets[2];
                        (i = i < 0 ? 360 - Math.abs(i) : i),
                          (this.gyroStoredCoords = [t, n, i]);
                      },
                    },
                    {
                      key: 'update',
                      value: function () {
                        c.a.isMobile
                          ? (this.oriControls && this.oriControls.update(),
                            this.computeGyroCoords())
                          : this.computePointerCoords(),
                          this.applyCameraPositionOffset(),
                          this.options.debugOrbit || this.applyCameraMotion();
                      },
                    },
                    {
                      key: 'applyCameraMotion',
                      value: function () {
                        var e = this.props.progress;
                        this.objectGuide &&
                          (this.cameraWrapper.position.copy(
                            this.objectGuide.position,
                          ),
                          this.cameraWrapper.rotation.copy(
                            this.objectGuide.rotation,
                          ));
                        var t = Object(Jr.a)(e, 8, -8);
                        (this.props.pX = 0),
                          (this.cameraWrapper.position.y = t),
                          (this.vTarget.x = 0),
                          (this.vTarget.y = 0.75 * t),
                          (this.vTarget.z = 0);
                        var n = this.quat,
                          i = n.clone().inverse(),
                          r = this.camera.position;
                        this.vSphericalOffset.copy(r).sub(this.vTarget),
                          this.vSphericalOffset.applyQuaternion(n),
                          this.spherical.setFromVector3(this.vSphericalOffset),
                          (this.spherical.theta +=
                            this.posOffsetVel[0] * (0.024 * -Math.PI)),
                          (this.spherical.phi +=
                            this.posOffsetVel[1] * (0.024 * Math.PI)),
                          (this.spherical.radius *= 1),
                          this.vSphericalOffset.setFromSpherical(this.spherical),
                          this.vSphericalOffset.applyQuaternion(i),
                          r.copy(this.vTarget).add(this.vSphericalOffset),
                          this.camera.lookAt(this.vTarget),
                          this.meshTargetDebug &&
                            this.meshTargetDebug.position.copy(this.vTarget);
                      },
                    },
                    {
                      key: 'applyCameraPositionOffset',
                      value: function () {
                        var e = (c.a.isMobile, 0.03),
                          t = c.a.isMobile ? 0.7 : 0.64;
                        (this.posOffsetVel[0] +=
                          (this.posOffsetTg[0] - this.posOffset[0]) * e),
                          (this.posOffset[0] += this.posOffsetVel[0] *= t),
                          (this.posOffsetVel[1] +=
                            (this.posOffsetTg[1] - this.posOffset[1]) * e),
                          (this.posOffset[1] += this.posOffsetVel[1] *= t);
                      },
                    },
                  ]) && rf(n.prototype, i),
                  r && rf(n, r),
                  t
                );
              })()),
            ) || Kh;
        function pf(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function hf(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function ff(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function df(e) {
          return (df = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function vf(e, t) {
          return (vf =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var mf =
            Object(it.a)(rt)(
              (uf = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = ff(
                      this,
                      (e = df(t)).call.apply(e, [this].concat(r)),
                    )).options = {}),
                    (n.props = {
                      name: 'Kernel-Background',
                      resolution: [
                        store,
                        function (e) {
                          return s.a.pick(e.viewport, 'width', 'height');
                        },
                      ],
                      progress: 0,
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && vf(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              var t, n, i;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (this.object.name = this.props.name),
                                          (e.next = 3),
                                          Gn('map-kernel-bg')
                                        );
                                      case 3:
                                        (t = e.sent),
                                          (this.vResTex = new $e.Vector2(
                                            t.image.width,
                                            t.image.height,
                                          )),
                                          (n = new $e.PlaneBufferGeometry(
                                            1,
                                            1,
                                            1,
                                          )),
                                          ((i = new $e.ShaderMaterial({
                                            uniforms: {
                                              uDiffuse: { type: 't', value: t },
                                              uResolution: {
                                                type: 'v2',
                                                value: new $e.Vector2(),
                                              },
                                              uResolutionTex: {
                                                type: 'v2',
                                                value: this.vResTex,
                                              },
                                              uProgress: { type: 'f', value: 0 },
                                              uScale: {
                                                type: 'f',
                                                value: c.a.isMobile ? 1.2 : 1,
                                              },
                                            },
                                            vertexShader: Je,
                                            fragmentShader:
                                              '#define GLSLIFY 1\nvarying vec2 vUv;\n\nuniform sampler2D uDiffuse;\n\nuniform vec2 uResolution;\nuniform vec2 uResolutionTex;\n\nuniform float uProgress;\nuniform float uScale;\n\nvec2 UVAdjust(vec2 st, float scale, vec2 offset) {\n\n    st -= .5;\n    st /= scale;\n    st += offset;\n    st += .5;\n    return st;\n}\n\nvec2 UVResize(vec2 uvBase, vec2 res, vec2 resTex, vec2 sc){\n\n  vec2 st;\n  st.x = ( res.x / resTex.x );\n  st.y = ( res.y / resTex.y );\n\n  float r = max( st.x, st.y );\n\n  vec2 uv = uvBase;\n  uv -= vec2(.5);\n    uv *= st;\n    uv *= 1. / r;\n    uv *= 1./ sc;\n  uv += vec2(.5);\n\n  return uv;\n}\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\n#include <common>\n\nvoid main() {\n\n\tfloat pOffRotation = PI * -mix(.0, .04, uProgress);\n\tfloat pOffY = -.04 + mix( .07, -.07, uProgress );\n\n\tvec2 st0 = vUv;\n\t\tst0 = rotateUV(vUv, pOffRotation, vec2(1., .5));\n\t\tst0 = UVResize(st0, uResolution, uResolutionTex, vec2(1.));\n\t\tst0 = UVAdjust(st0, uScale, vec2(0., pOffY) );\n\n\tvec4 texelColor = texture2D(uDiffuse, st0);\n\n\tgl_FragColor = texelColor;\n\t// gl_FragColor = vec4(vec3(vUv.x), 1.);\n}',
                                          })).type = 'KernelBackgroundMaterial'),
                                          (this.quad = new $e.Mesh(n, i)),
                                          this.quad.layers.set(
                                            this.options.layer,
                                          ),
                                          this.object.add(this.quad);
                                      case 11:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  pf(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  pf(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setProgress',
                      value: function (e) {
                        this.quad.material.uniforms.uProgress.value = e;
                      },
                    },
                    {
                      key: 'setResolution',
                      value: function (e) {
                        var t,
                          n,
                          i = e.width,
                          r = e.height,
                          o = (this.vw = i),
                          a = (this.vh = r),
                          s = this.vResTex.x;
                        Math.max(o / s, a / s);
                        (t = o),
                          (n = a),
                          this.quad.material.uniforms.uResolution.value.set(o, a),
                          (this.offY = 0),
                          this.quad.scale.set(t, n, 1);
                      },
                    },
                  ]) && hf(n.prototype, i),
                  r && hf(n, r),
                  t
                );
              })()),
            ) || uf,
          gf = new $e.Vector3();
        function bf(e) {
          (this.position = new $e.Vector3()),
            (this.velocity = new $e.Vector3()),
            (this.force = new $e.Vector3()),
            (this.mass = e),
            (this.fixed = !1),
            (this.age = 0),
            (this.dead = !1);
        }
        function yf(e, t, n, i, r) {
          (this.constant = n),
            (this.damping = i),
            (this.length = r),
            (this.a = e),
            (this.b = t),
            (this.on = !0);
        }
        function wf(e, t, n, i) {
          (this.a = e),
            (this.b = t),
            (this.constant = n),
            (this.on = !0),
            (this.distanceMin = i),
            (this.distanceMinSquared = i * i);
        }
        function xf(e) {
          (this.s = e),
            (this.originalPositions = []),
            (this.originalVelocities = []),
            (this.k1Forces = []),
            (this.k1Velocities = []),
            (this.k2Forces = []),
            (this.k2Velocities = []),
            (this.k3Forces = []),
            (this.k3Velocities = []),
            (this.k4Forces = []),
            (this.k4Velocities = []);
        }
        function Pf() {
          (this.particles = []),
            (this.springs = []),
            (this.attractions = []),
            (this.forces = []),
            (this.integrator = new xf(this)),
            (this.hasDeadParticles = !1);
          var e = arguments.length;
          2 === e
            ? ((this.gravity = new $e.Vector3(0, arguments[0], 0)),
              (this.drag = arguments[1]))
            : 4 === e
            ? ((this.gravity = new $e.Vector3(
                arguments[0],
                arguments[1],
                arguments[2],
              )),
              (this.drag = arguments[3]))
            : ((this.gravity = new $e.Vector3(0, Pf.DEFAULT_GRAVITY, 0)),
              (this.drag = Pf.DEFAULT_DRAG));
        }
        (bf.prototype.distanceTo = function (e) {
          return this.position.distanceTo(e.position);
        }),
          (bf.prototype.makeFixed = function () {
            (this.fixed = !0), this.velocity.set(0, 0, 0);
          }),
          (bf.prototype.reset = function () {
            (this.age = 0),
              (this.dead = !1),
              this.position.set(0, 0, 0),
              this.velocity.set(0, 0, 0),
              this.force.set(0, 0, 0),
              (this.mass = 1);
          }),
          (yf.prototype.currentLength = function () {
            return this.a.position.distanceTo(this.b.position);
          }),
          (yf.prototype.apply = function () {
            var e = this.a,
              t = this.b;
            if (!(!this.on || (e.fixed && t.fixed))) {
              var n = e.position.x - t.position.x,
                i = e.position.y - t.position.y,
                r = e.position.z - t.position.z,
                o = Math.sqrt(n * n + i * i + r * r);
              0 === o
                ? ((n = 0), (i = 0), (r = 0))
                : ((n /= o), (i /= o), (r /= o));
              var a = -1 * (o - this.length) * this.constant,
                s = e.velocity.x - t.velocity.x,
                u = e.velocity.y - t.velocity.y,
                l = e.velocity.z - t.velocity.z,
                c = a + -1 * this.damping * (n * s + i * u + r * l);
              (n *= c),
                (i *= c),
                (r *= c),
                e.fixed || ((e.force.x += n), (e.force.y += i), (e.force.z += r)),
                t.fixed ||
                  ((t.force.x += -1 * n),
                  (t.force.y += -1 * i),
                  (t.force.z += -1 * r));
            }
          }),
          (wf.prototype.apply = function () {
            var e = this.a,
              t = this.b;
            if (!(!this.on || (e.fixed && t.fixed))) {
              var n = e.position.x - t.position.x,
                i = e.position.y - t.position.y,
                r = e.position.z - t.position.z,
                o = Math.max(n * n + i * i + r * r, this.distanceMinSquared),
                a = (this.constant * e.mass * t.mass) / o,
                s = Math.sqrt(o);
              0 === a || 0 === s
                ? ((n = 0), (i = 0), (r = 0))
                : ((n /= s), (i /= s), (r /= s), (n *= a), (i *= a), (r *= a)),
                e.fixed || ((e.force.x -= n), (e.force.y -= i), (e.force.z -= r)),
                t.fixed || ((t.force.x += n), (t.force.y += i), (t.force.z += r));
            }
          }),
          (xf.prototype.allocateParticles = function () {
            for (; this.s.particles.length > this.originalPositions.length; )
              this.originalPositions.push(new $e.Vector3()),
                this.originalVelocities.push(new $e.Vector3()),
                this.k1Forces.push(new $e.Vector3()),
                this.k1Velocities.push(new $e.Vector3()),
                this.k2Forces.push(new $e.Vector3()),
                this.k2Velocities.push(new $e.Vector3()),
                this.k3Forces.push(new $e.Vector3()),
                this.k3Velocities.push(new $e.Vector3()),
                this.k4Forces.push(new $e.Vector3()),
                this.k4Velocities.push(new $e.Vector3());
          }),
          (xf.prototype.step = function (e) {
            var t,
              n,
              i,
              r,
              o,
              a,
              s,
              u,
              l,
              c,
              p,
              h,
              f = this.s;
            for (this.allocateParticles(), n = 0; n < f.particles.length; n++)
              (t = f.particles[n]).fixed ||
                (this.originalPositions[n].copy(t.position),
                this.originalVelocities[n].copy(t.velocity)),
                t.force.set(0, 0, 0);
            for (f.applyForces(), n = 0; n < f.particles.length; n++)
              (t = f.particles[n]).fixed ||
                (this.k1Forces[n].copy(t.force),
                this.k1Velocities[n].copy(t.velocity)),
                t.force.set(0, 0, 0);
            for (n = 0; n < f.particles.length; n++)
              (t = f.particles[n]).fixed ||
                ((i = this.originalPositions[n]),
                (o = this.k1Velocities[n]),
                (t.position.x = i.x + 0.5 * o.x * e),
                (t.position.y = i.y + 0.5 * o.y * e),
                (t.position.z = i.z + 0.5 * o.z * e),
                (r = this.originalVelocities[n]),
                (l = this.k1Forces[n]),
                (t.velocity.x = r.x + (0.5 * l.x * e) / t.mass),
                (t.velocity.y = r.y + (0.5 * l.y * e) / t.mass),
                (t.velocity.z = r.z + (0.5 * l.z * e) / t.mass));
            for (f.applyForces(), n = 0; n < f.particles.length; n++)
              (t = f.particles[n]).fixed ||
                (this.k2Forces[n].copy(t.force),
                this.k2Velocities[n].copy(t.velocity)),
                t.force.set(0, 0, 0);
            for (n = 0; n < f.particles.length; n++)
              (t = f.particles[n]).fixed ||
                ((i = this.originalPositions[n]),
                (a = this.k2Velocities[n]),
                (t.position.x = i.x + 0.5 * a.x * e),
                (t.position.y = i.y + 0.5 * a.y * e),
                (t.position.z = i.z + 0.5 * a.z * e),
                (r = this.originalVelocities[n]),
                (c = this.k2Forces[n]),
                (t.velocity.x = r.x + (0.5 * c.x * e) / t.mass),
                (t.velocity.y = r.y + (0.5 * c.y * e) / t.mass),
                (t.velocity.z = r.z + (0.5 * c.z * e) / t.mass));
            for (f.applyForces(), n = 0; n < f.particles.length; n++)
              (t = f.particles[n]).fixed ||
                (this.k3Forces[n].copy(t.force),
                this.k3Velocities[n].copy(t.velocity)),
                t.force.set(0, 0, 0);
            for (n = 0; n < f.particles.length; n++)
              (t = f.particles[n]).fixed ||
                ((i = this.originalPositions[n]),
                (s = this.k3Velocities[n]),
                (t.position.x = i.x + s.x * e),
                (t.position.y = i.y + s.y * e),
                (t.position.z = i.z + s.z * e),
                (r = this.originalVelocities[n]),
                (p = this.k3Forces[n]),
                (t.velocity.x = r.x + (p.x * e) / t.mass),
                (t.velocity.y = r.y + (p.y * e) / t.mass),
                (t.velocity.z = r.z + (p.z * e) / t.mass));
            for (f.applyForces(), n = 0; n < f.particles.length; n++)
              (t = f.particles[n]).fixed ||
                (this.k4Forces[n].copy(t.force),
                this.k4Velocities[n].copy(t.velocity));
            for (n = 0; n < f.particles.length; n++)
              ((t = f.particles[n]).age += e),
                t.fixed ||
                  ((i = this.originalPositions[n]),
                  (o = this.k1Velocities[n]),
                  (a = this.k2Velocities[n]),
                  (s = this.k3Velocities[n]),
                  (u = this.k4Velocities[n]),
                  (t.position.x =
                    i.x + (e / 6) * (o.x + 2 * a.x + 2 * s.x + u.x)),
                  (t.position.y =
                    i.y + (e / 6) * (o.y + 2 * a.y + 2 * s.y + u.y)),
                  (t.position.z =
                    i.z + (e / 6) * (o.z + 2 * a.z + 2 * s.z + u.z)),
                  (r = this.originalVelocities[n]),
                  (l = this.k1Forces[n]),
                  (c = this.k2Forces[n]),
                  (p = this.k3Forces[n]),
                  (h = this.k4Forces[n]),
                  (t.velocity.x =
                    r.x + (e / (6 * t.mass)) * (l.x + 2 * c.x + 2 * p.x + h.x)),
                  (t.velocity.y =
                    r.y + (e / (6 * t.mass)) * (l.y + 2 * c.y + 2 * p.y + h.y)),
                  (t.velocity.z =
                    r.z + (e / (6 * t.mass)) * (l.z + 2 * c.z + 2 * p.z + h.z)));
          }),
          (Pf.DEFAULT_GRAVITY = 0),
          (Pf.DEFAULT_DRAG = 0.001),
          (Pf.prototype.setGravity = function () {
            var e = arguments.length;
            1 === e
              ? this.gravity.copy(0, arguments[0], 0)
              : 3 === e &&
                this.gravity.copy(arguments[0], arguments[1], arguments[2]);
          }),
          (Pf.prototype.tick = function () {
            this.integrator.step(0 === arguments.length ? 1 : arguments[0]);
          }),
          (Pf.prototype.makeParticle = function () {
            var e = 1,
              t = 0,
              n = 0,
              i = 0;
            4 === arguments.length &&
              ((e = arguments[0]),
              (t = arguments[1]),
              (n = arguments[2]),
              (i = arguments[3]));
            var r = new bf(e);
            return r.position.set(t, n, i), this.particles.push(r), r;
          }),
          (Pf.prototype.makeSpring = function (e, t, n, i, r) {
            var o = new yf(e, t, n, i, r);
            return this.springs.push(o), o;
          }),
          (Pf.prototype.makeAttraction = function (e, t, n, i) {
            var r = new wf(e, t, n, i);
            return this.attractions.push(r), r;
          }),
          (Pf.prototype.clear = function () {
            this.particles.set(0, 0, 0),
              this.springs.set(0, 0, 0),
              this.attractions.set(0, 0, 0);
          }),
          (Pf.prototype.applyForces = function () {
            var e, t;
            if (!this.gravity.equals(gf))
              for (t = 0; t < this.particles.length; t++)
                (e = this.particles[t]).force.add(this.gravity);
            for (t = 0; t < this.particles.length; t++)
              ((e = this.particles[t]).force.x += -1 * e.velocity.x * this.drag),
                (e.force.y += -1 * e.velocity.y * this.drag),
                (e.force.z += -1 * e.velocity.z * this.drag);
            for (t = 0; t < this.springs.length; t++)
              (e = this.springs[t]).apply();
            for (t = 0; t < this.attractions.length; t++)
              (e = this.attractions[t]).apply();
            for (t = 0; t < this.forces.length; t++) (e = this.forces[t]).apply();
          }),
          (Pf.prototype.clearForces = function () {
            var e;
            for (e = 0; e < this.particles.length; e++)
              this.particles[e].set(0, 0, 0);
          });
        var _f = Pf,
          kf =
            '#define GLSLIFY 1\nfloat createCircle(vec2 uv, float s) {\n    float scale = 1.0 / s;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n    float radius = 0.5;\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeFeather = dDistance * feather;\n\n    // Apply radius width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float circleRadius = radius;\n    float value = smoothstep(circleRadius + edgeFeather * .5, circleRadius - edgeFeather * .5, distance);\n    // float value = smoothstep(circleRadius, circleRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createCircle(vec2 uv, float radius, float s) {\n    float scale = 1.0 / s;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeFeather = dDistance * feather;\n\n    // Apply radius width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float circleRadius = dx * radius;\n    float value = smoothstep(circleRadius, circleRadius - edgeFeather, distance);\n\n    return value;\n}\n\n';
        function Of(e) {
          return (Of = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Sf(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function Tf(e, t) {
          return (Tf =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Af() {
          var e = jf([
            '\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n\n    uniform vec2 progress;\n    uniform float shapeSides;\n    uniform vec3 color;\n    uniform float opacity;\n    uniform float time;\n    varying float vId;\n    varying float vSize;\n    ',
            '\n\n    ',
            '\n\n    void main() {\n        vec2 st = gl_PointCoord;\n        vec3 c = vec3(createCircle(st, .3));\n        \n        float random = vId * 5.193628 + vId;\n\n        float alphaShape = c.r;\n        float distanceAlpha = mix(1.0, 0.4, smoothstep(0.0, 0.2, vSize));\n        float alphaTime = mix(0.2, 1.0, sin((time * clamp(random, 1.0, 5.0) + random * TWO_PI) / 80.0) * 0.5 + 0.5);\n        \n        ',
            '\n        ',
            '\n        ',
            '\n\n        gl_FragColor = vec4(\n            color * distanceAlpha + progressColor,\n            alphaShape * distanceAlpha * opacity * alphaTime * alphaProgress * endFade\n        );\n    }\n',
          ]);
          return (
            (Af = function () {
              return e;
            }),
            e
          );
        }
        function Mf() {
          var e = jf([
            '\n    ',
            '\n    attribute float id;\n    attribute float t;\n    uniform float time;\n    uniform vec2 size;\n    uniform vec2 dofAmount;\n    uniform vec3 dofFocus;\n    uniform vec2 resolution;\n    varying float vId;\n    varying float vSize;\n    ',
            '\n\n    void main() {\n        float random = vId * 5.193628;\n        vId = id;\n        vec4 transformed = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        \n        ',
            '\n        ',
            '\n        \n        float scale = length(resolution) / 1280.;\n        \n        gl_Position = transformed;\n        gl_PointSize = mix(size.x * scale, size.y * scale, vSize);\n        \n        ',
            '\n    }\n',
          ]);
          return (
            (Mf = function () {
              return e;
            }),
            e
          );
        }
        function jf(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var Ff = function (e) {
            return Mt(
              Mf(),
              e.noise ? da : '',
              e.progress ? 'varying float vT;' : '',
              e.noise ? ba : '',
              ya,
              e.progress ? 'vT = t;' : '',
            );
          },
          Rf = function (e) {
            return Mt(
              Af(),
              e.progress ? 'varying float vT;' : '',
              kf,
              e.progress
                ? 'float alphaProgress = step(progress.x, vT) * step(vT, progress.y);'
                : 'float alphaProgress = 1.0;',
              e.progress
                ? 'vec3 progressColor = vec3(0.2) * smoothstep(progress.x + 0.3, progress.x, vT);'
                : 'vec3 progressColor = vec3(0.0);',
              e.progress
                ? 'float endFade = smoothstep(0.05, 0.15, vT);'
                : 'float endFade = 1.0;',
            );
          },
          Cf = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.progress,
                a = void 0 !== o && o,
                u = r.shapeSides,
                l = void 0 === u ? 5 : u,
                c = r.size,
                p = void 0 === c ? new $e.Vector2(10, 35) : c,
                h = r.color,
                f = void 0 === h ? new $e.Color('#333333') : h,
                d = r.opacity,
                v = void 0 === d ? 1 : d,
                m = r.dofAmount,
                g = void 0 === m ? new $e.Vector2(7, 15) : m,
                b = r.dofFocus,
                y = void 0 === b ? new $e.Vector3() : b,
                w = r.noise,
                x = void 0 !== w && w,
                P = r.resolution,
                _ = void 0 === P ? new $e.Vector2() : P;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = Of(t).call(this, {
                  uniforms: {
                    progress: { value: a },
                    shapeSides: { value: l },
                    size: { value: p },
                    color: { value: f },
                    opacity: { value: v },
                    time: { value: 0 },
                    dofAmount: { value: g },
                    dofFocus: { value: y },
                    resolution: { value: _ },
                  },
                  vertexShader: Ff({ noise: x, progress: !!a }),
                  fragmentShader: Rf({ progress: !!a }),
                  blending: $e.AdditiveBlending,
                  transparent: !0,
                  depthTest: !1,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? Sf(n)
                    : i).type = 'KernelParticlesLinkMaterial'),
                (e.extensions.derivatives = !0),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(Sf(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && Tf(e, t);
              })(t, $e['ShaderMaterial']),
              t
            );
          })();
        function Ef(e) {
          return (Ef = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Lf(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function If(e, t) {
          return (If =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Df() {
          var e = zf([
            '\n    #define PI 3.14159265359\n    #define TWO_PI 6.28318530718\n\n    uniform float shapeSides;\n    uniform vec3 color1;\n    uniform vec3 color2;\n    \n    uniform float opacity;\n    uniform float time;\n    \n    varying float vId;\n    varying float vSize;\n    \n    ',
            '\n\n    void main() {\n        vec2 st = gl_PointCoord;\n        float random = vId * 5.193628 + vId;\n        vec3 color = mod(vId, 4.0) == 0.0 ? color2 : color1;\n        vec3 c = vec3(createCircle(st, .3));\n        // float df = polygonDf(uv, shapeSides);\n        // float shapeAlpha = smoothstep(0.15, 0.15 - mix(0.02, 0.2, vSize), df);\n\n        \n        float shapeAlpha = c.r;\n        float distanceAlpha = mix(1.0, 0.4, smoothstep(0.0, 0.2, vSize));\n        \n        gl_FragColor = vec4(color * distanceAlpha, shapeAlpha * opacity);\n    }\n',
          ]);
          return (
            (Df = function () {
              return e;
            }),
            e
          );
        }
        function Uf() {
          var e = zf([
            '\n    ',
            '\n    attribute float id;\n    uniform float time;\n    uniform vec2 size;\n    \n    uniform vec2 dofAmount;\n    uniform vec3 dofFocus;\n    \n    uniform vec2 resolution;\n    \n    varying float vId;\n    varying float vSize;\n    \n    void main() {\n        vId = id;\n        vec4 transformed = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        ',
            '\n        gl_Position = transformed;\n        float scale = resolution.y / 800.0;\n        gl_PointSize = mix(size.x * scale, size.y * scale, vSize);\n    }\n',
          ]);
          return (
            (Uf = function () {
              return e;
            }),
            e
          );
        }
        function zf(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        var Nf,
          Bf = Mt(Uf(), da, ya),
          Vf = Mt(Df(), kf),
          Yf = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                o = r.shapeSides,
                a = void 0 === o ? 5 : o,
                u = r.size,
                l = void 0 === u ? new $e.Vector2(10, 35) : u,
                c = r.color1,
                p = void 0 === c ? new $e.Color('#333333') : c,
                h = r.color2,
                f = void 0 === h ? new $e.Color('#333333') : h,
                d = r.opacity,
                v = void 0 === d ? 1 : d,
                m = r.dofAmount,
                g = void 0 === m ? new $e.Vector2(7, 15) : m,
                b = r.dofFocus,
                y = void 0 === b ? new $e.Vector3() : b,
                w = r.resolution,
                x = void 0 === w ? new $e.Vector2() : w;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = Ef(t).call(this, {
                  uniforms: {
                    shapeSides: { value: a },
                    size: { value: l },
                    color1: { value: p },
                    color2: { value: f },
                    opacity: { value: v },
                    time: { value: 0 },
                    dofAmount: { value: g },
                    dofFocus: { value: y },
                    resolution: { value: x },
                  },
                  vertexShader: Bf,
                  fragmentShader: Vf,
                  blending: $e.AdditiveBlending,
                  transparent: !0,
                  depthTest: !1,
                })),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? Lf(n)
                    : i).extensions.derivatives = !0),
                (e.type = 'KernelParticlesOuterMaterial'),
                s.a.each(e.uniforms, function (t, n) {
                  Object.defineProperty(Lf(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && If(e, t);
              })(t, $e['ShaderMaterial']),
              t
            );
          })();
        function Hf(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Xf(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Gf(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Wf(e) {
          return (Wf = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Qf(e, t) {
          return (Qf =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var qf,
          Zf = Object(u.a)(),
          Kf = 2 * Math.PI,
          $f = new $e.Vector3(0, 1, 0),
          Jf =
            Object(it.a)(rt)(
              (Nf = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Gf(
                      this,
                      (e = Wf(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      height: 17,
                      width: 7.5,
                      rows: 3,
                      columns: 2,
                      particlesPerLink: 40,
                      radiusSegments: 8,
                      clusterRadius: 1.5,
                      randomness: 0,
                      dofFocus: new $e.Vector3(),
                      dofAmount: new $e.Vector3(7, 15),
                      resolution: new $e.Vector2(),
                      physGravity: 0,
                      physDrag: 1,
                      springStrength: 0.01,
                      springDamping: 0.005,
                      renderOrder: 0,
                    }),
                    (n.props = {
                      color1: '#5f661e',
                      color2: '#5f661e',
                      linksColor: '#5f661e',
                      o: 0.8,
                      particleSizeMin: 40,
                      particleSizeMax: 120,
                      pointer: [
                        Zf,
                        function (e) {
                          return e.pointerPositionMapped;
                        },
                      ],
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && Qf(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        this.setupController(),
                                          this.setupOuterParticles(),
                                          this.setupLinks();
                                      case 3:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  Hf(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  Hf(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupController',
                      value: function () {
                        var e = this,
                          t = this.options,
                          n = t.height,
                          i = t.width,
                          r = t.rows,
                          o = t.columns,
                          a = t.clusterRadius,
                          u = t.physGravity,
                          l = t.physDrag,
                          c = t.springStrength,
                          p = t.springDamping,
                          h = n / r,
                          f = i / o;
                        this.system = new _f(u, l);
                        var d = this.system;
                        (this.outerParticlesData = []),
                          (this.phyPointer = d.makeParticle(1, 0, 0, 0)),
                          this.phyPointer.makeFixed(),
                          s.a.times(o, function (t) {
                            s.a.times(r, function (r) {
                              s.a.times(o, function (o) {
                                var u = ((o % 2) * Kf) / 4,
                                  l =
                                    t * f + f / 2 - i / 2 + f * Math.cos(u) * 0.1,
                                  v =
                                    -r * h -
                                    h / 2 +
                                    n / 2 +
                                    h * Math.sin(u) * 0.4,
                                  m =
                                    o * f + f / 2 - i / 2 + f * Math.cos(u) * 0.1,
                                  g = d.makeParticle(1, l, v, m),
                                  b = d.makeParticle(1, l, v, m);
                                b.makeFixed(),
                                  d.makeSpring(g, e.phyPointer, 0.5 * c, p, 0),
                                  d.makeSpring(g, b, 5 * c, 10 * p, 1);
                                var y = [];
                                e.outerParticlesData.push({
                                  particle: g,
                                  origin: b,
                                  rotation: new $e.Quaternion(
                                    2 * Math.random() - 1,
                                    2 * Math.random() - 1,
                                    2 * Math.random() - 1,
                                    1,
                                  ).normalize(),
                                  rotationV: new $e.Quaternion(),
                                  rotationD: new $e.Quaternion(
                                    0.002 * Math.random() - 0.001,
                                    0.002 * Math.random() - 0.001,
                                    0.002 * Math.random() - 0.001,
                                    1,
                                  ).normalize(),
                                  center: g.position,
                                  children: y,
                                });
                                var w = s.a.sample([2, 3, 3, 4]);
                                s.a.times(w, function (e) {
                                  var t = (e / (w - 1)) * Kf;
                                  y.push({
                                    offset: new $e.Vector3(
                                      Math.cos(t) * a,
                                      Math.sin(t) * a,
                                      a / 3,
                                    ),
                                    position: new $e.Vector3(0, 0, 0),
                                  });
                                });
                              });
                            });
                          });
                      },
                    },
                    {
                      key: 'getFlattenOuterParticlePositions',
                      value: function () {
                        return s.a.flatten(
                          this.outerParticlesData.map(function (e) {
                            return [
                              e.center.toArray(),
                              e.children.map(function (e) {
                                return e.position.toArray();
                              }),
                            ];
                          }),
                        );
                      },
                    },
                    {
                      key: 'setupOuterParticles',
                      value: function () {
                        var e = this.getFlattenOuterParticlePositions();
                        this.outerParticlesGeometry = new $e.BufferGeometry();
                        var t = new Float32Array(s.a.range(e.length / 3));
                        this.outerParticlesGeometry.addAttribute(
                          'id',
                          new $e.BufferAttribute(t, 1),
                        );
                        var n = new Float32Array(e);
                        this.outerParticlesGeometry.addAttribute(
                          'position',
                          new $e.BufferAttribute(n, 3),
                        ),
                          (this.outerParticlesMaterial = new Yf({
                            shapeSides: 0,
                            size: new $e.Vector2(
                              this.props.particleSizeMin,
                              this.props.particleSizeMax,
                            ),
                            color1: new $e.Color(this.props.color1),
                            opacity: this.props.o,
                            dofFocus: this.options.dofFocus,
                            dofAmount: this.options.dofAmount,
                            resolution: this.options.resolution,
                          })),
                          (this.outerParticles = new $e.Points(
                            this.outerParticlesGeometry,
                            this.outerParticlesMaterial,
                          )),
                          (this.outerParticles.renderOrder =
                            this.options.renderOrder + 1),
                          this.object.add(this.outerParticles),
                          (this.glowMaterial = new Oc({
                            shapeSides: 0,
                            size: new $e.Vector2(
                              2 * this.props.particleSizeMin,
                              2 * this.props.particleSizeMax,
                            ),
                            color1: new $e.Color(this.props.color1),
                            opacity: 1.2 * this.props.o,
                            dofFocus: this.options.dofFocus,
                            dofAmount: this.options.dofAmount,
                            resolution: this.options.resolution,
                          })),
                          (this.glow = new $e.Points(
                            this.outerParticlesGeometry,
                            this.glowMaterial,
                          )),
                          (this.glow.renderOrder = this.options.renderOrder + 2),
                          this.object.add(this.glow);
                      },
                    },
                    {
                      key: 'setupLinks',
                      value: function () {
                        var e = this;
                        this.links = [];
                        var t = this.options.particlesPerLink,
                          n = this.options.clusterRadius,
                          i = new $e.BufferGeometry(),
                          r = new Float32Array(s.a.range(t));
                        i.addAttribute('id', new $e.BufferAttribute(r, 1));
                        var a = new Float32Array(
                          s.a.flatten(
                            s.a.range(t).map(function (e) {
                              var i =
                                e + Object(o.a)(Math.random(), 0, 1, -0.5, 0.5);
                              return [
                                0,
                                Object(o.a)(i, 0, t - 1, n / 2, -n / 2),
                                0,
                              ];
                            }),
                          ),
                        );
                        i.addAttribute('position', new $e.BufferAttribute(a, 3));
                        var u = new Cf({
                          color: new $e.Color(this.props.linkMaterial),
                          dofFocus: this.options.dofFocus,
                          dofAmount: this.options.dofAmount,
                          size: new $e.Vector2(4, 4),
                          opacity: 0.5,
                          resolution: this.options.resolution,
                        });
                        (this.linkMaterial = u),
                          this.outerParticlesData.forEach(function (t) {
                            t.children.forEach(function (n) {
                              var r = new $e.Points(i, u);
                              e.links.push({
                                mesh: r,
                                from: t.center,
                                to: n.position,
                              }),
                                (r.renderOrder = e.options.renderOrder + 1),
                                e.object.add(r);
                            });
                          });
                      },
                    },
                    {
                      key: 'whileV',
                      value: function () {
                        this.system.tick(),
                          this.outerParticlesData.forEach(function (e) {
                            e.origin.position.applyAxisAngle($f, 0.001);
                            var t = e.particle.velocity.length();
                            e.rotationV
                              .set(0, 0, 0, 1)
                              .slerp(e.rotationD, 0.2 + 300 * t),
                              e.rotation.multiply(e.rotationV).normalize(),
                              e.children.forEach(function (t) {
                                t.position
                                  .copy(t.offset)
                                  .applyQuaternion(e.rotation)
                                  .add(e.particle.position);
                              });
                          }),
                          this.links.forEach(function (e) {
                            var t = e.mesh;
                            t.position.copy(e.from).lerp(e.to, 0.5),
                              t.quaternion.setFromUnitVectors(
                                $f,
                                e.to.clone().sub(e.from).normalize(),
                              );
                          }),
                          this.outerParticlesGeometry.attributes.position.array.set(
                            this.getFlattenOuterParticlePositions(),
                          ),
                          (this.outerParticlesGeometry.attributes.position.needsUpdate = !0);
                      },
                    },
                    {
                      key: 'setPointer',
                      value: function (e) {
                        (this.phyPointer.position.x = 0.4 * e[0]),
                          (this.phyPointer.position.y = 0.4 * e[1]);
                      },
                    },
                    {
                      key: 'setColor1',
                      value: function (e) {
                        this.outerParticlesMaterial.color1.setStyle(e);
                      },
                    },
                    {
                      key: 'setColor2',
                      value: function (e) {
                        this.outerParticlesMaterial.color2.setStyle(e);
                      },
                    },
                    {
                      key: 'setLinksColor',
                      value: function (e) {
                        this.linkMaterial.color.setStyle(e);
                      },
                    },
                    {
                      key: 'setO',
                      value: function (e) {
                        (this.outerParticlesMaterial.opacity = 1 * e),
                          (this.glowMaterial.opacity = 1.2 * e),
                          (this.linkMaterial.opacity = 0.5 * e);
                      },
                    },
                    {
                      key: 'setParticleSizeMin',
                      value: function (e) {
                        this.outerParticlesMaterial.size.setX(e);
                      },
                    },
                    {
                      key: 'setParticleSizeMax',
                      value: function (e) {
                        this.outerParticlesMaterial.size.setY(e);
                      },
                    },
                  ]) && Xf(n.prototype, i),
                  r && Xf(n, r),
                  t
                );
              })()),
            ) || Nf,
          ed = n(376);
        function td(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              i = Object.keys(n);
            'function' == typeof Object.getOwnPropertySymbols &&
              (i = i.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                }),
              )),
              i.forEach(function (t) {
                nd(e, t, n[t]);
              });
          }
          return e;
        }
        function nd(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function id(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function rd(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                id(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                id(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function od(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function ad(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function sd(e) {
          return (sd = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function ud(e, t) {
          return (ud =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var ld =
            Object(it.a)(rt)(
              (qf = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = ad(
                      this,
                      (e = sd(t)).call.apply(e, [this].concat(r)),
                    )).options = {}),
                    (n.props = {
                      name: 'Kernel-Object',
                      visible: !1,
                      resolution: [
                        store,
                        function (e) {
                          return {
                            width: e.viewport.width,
                            height: e.viewport.height,
                            dpr: e.viewport.pixelRatio,
                          };
                        },
                      ],
                      progressHotspot: 0,
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && ud(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = rd(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.vResolution = new $e.Vector2()),
                                        (e.next = 3),
                                        this.setupKernelCluster()
                                      );
                                    case 3:
                                      return (
                                        (e.next = 5), this.setupKernelObject()
                                      );
                                    case 5:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupKernelObject',
                      value: (function () {
                        var e = rd(
                          regeneratorRuntime.mark(function e() {
                            var t, n, i, r, o, a, s, u;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.object.name = this.props.name),
                                        (t = new $e.GLTFLoader()),
                                        (n = (function () {
                                          var e = rd(
                                            regeneratorRuntime.mark(function e(
                                              n,
                                            ) {
                                              return regeneratorRuntime.wrap(
                                                function (e) {
                                                  for (;;)
                                                    switch ((e.prev = e.next)) {
                                                      case 0:
                                                        return e.abrupt(
                                                          'return',
                                                          new Promise(function (
                                                            e,
                                                          ) {
                                                            t.load(
                                                              c.a.CDN + n,
                                                              function (t) {
                                                                e(t.scene);
                                                              },
                                                            );
                                                          }),
                                                        );
                                                      case 1:
                                                      case 'end':
                                                        return e.stop();
                                                    }
                                                },
                                                e,
                                              );
                                            }),
                                          );
                                          return function (t) {
                                            return e.apply(this, arguments);
                                          };
                                        })()),
                                        (e.next = 5),
                                        n('models/kernel/KERNAL.gltf')
                                      );
                                    case 5:
                                      return (
                                        (i = this._gltfRef = e.sent),
                                        (e.next = 8),
                                        Gn('map-kernel-diffuse')
                                      );
                                    case 8:
                                      return (
                                        (r = e.sent),
                                        (e.next = 11),
                                        Gn('map-kernel-matcap-mult')
                                      );
                                    case 11:
                                      return (
                                        (o = e.sent),
                                        (e.next = 14),
                                        Gn('map-kernel-matcap-screen')
                                      );
                                    case 14:
                                      return (
                                        (a = e.sent),
                                        (e.next = 17),
                                        Gn('map-kernel-bump')
                                      );
                                    case 17:
                                      (s = e.sent),
                                        ((u = this.mesh = i.getObjectByName(
                                          'kernel',
                                        )).material = new op({
                                          map: r,
                                          bumpMap: s,
                                          mapMatCapScreen: a,
                                          mapMatCapMult: o,
                                          transparent: !0,
                                        })),
                                        (u.renderOrder = 1),
                                        u.scale.multiplyScalar(1.6),
                                        u.layers.set(this.options.layer),
                                        this.object.add(u);
                                    case 24:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupKernelCluster',
                      value: (function () {
                        var e = rd(
                          regeneratorRuntime.mark(function e() {
                            var t,
                              n,
                              i,
                              r = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (e.next = 2),
                                        new Ya().setup({
                                          options: {
                                            width: 10,
                                            height: 5,
                                            farMin: c.a.isMobile ? 50 : 40,
                                            farMax: 70,
                                          },
                                        })
                                      );
                                    case 2:
                                      return (
                                        (this.dofController = e.sent),
                                        (t = this.dofController),
                                        (n = t.dofFocus),
                                        (i = t.dofAmount),
                                        (e.next = 6),
                                        new Jf().setup({
                                          options: {
                                            dofFocus: n,
                                            dofAmount: i,
                                            resolution: this.vResolution,
                                            height: 6,
                                            width: 1,
                                            rows: 8,
                                            columns: 1,
                                            particlesPerLink: 50,
                                            radiusSegments: 6,
                                            clusterRadius: 1,
                                            physGravity: 0,
                                            physDrag: 1,
                                            springStrength: 0.03,
                                            springDamping: 0.005,
                                            renderOrder: 5,
                                          },
                                          props: td({}, ed.kernelClusterFront),
                                        })
                                      );
                                    case 6:
                                      return (
                                        (this.clusterFront = e.sent),
                                        this.clusterFront.object.children.forEach(
                                          function (e) {
                                            e.layers.set(r.options.layer);
                                          },
                                        ),
                                        this.object.add(this.clusterFront.object),
                                        (e.next = 11),
                                        new Jf().setup({
                                          options: {
                                            dofFocus: n,
                                            dofAmount: i,
                                            resolution: this.vResolution,
                                            height: 8,
                                            width: 2,
                                            rows: 8,
                                            columns: 1,
                                            particlesPerLink: 20,
                                            radiusSegments: 4,
                                            clusterRadius: 1,
                                            physGravity: 0,
                                            physDrag: 1,
                                            springStrength: 0.01,
                                            springDamping: 0.005,
                                            renderOrder: 0,
                                          },
                                          props: td({}, ed.kernelClusterBack),
                                        })
                                      );
                                    case 11:
                                      (this.clusterBack = e.sent),
                                        this.clusterBack.object.children.forEach(
                                          function (e) {
                                            e.layers.set(r.options.layer);
                                          },
                                        ),
                                        this.object.add(this.clusterBack.object);
                                    case 14:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    { key: 'onVisible', value: function () {} },
                    { key: 'offVisible', value: function () {} },
                    {
                      key: 'whileVisible',
                      value: function () {
                        var e = store.state.time;
                        (this.clusterFront.linkMaterial.uniforms.time.value =
                          40 * e),
                          (this.mesh.position.y = 0.04 * Math.sin(1.4 * e)),
                          (this.clusterFront.object.position.y =
                            0.04 * Math.sin(1 * e - 0.3)),
                          (this.clusterBack.object.position.y =
                            0.04 * Math.sin(1 * e - 0.6));
                      },
                    },
                    {
                      key: 'setProgressHotspot',
                      value: function (e) {
                        (this.clusterFront.props.pZ =
                          ed.kernelClusterFront.pZ + Object(Jr.a)(e, 0, 5)),
                          (this.clusterBack.props.pZ =
                            ed.kernelClusterBack.pZ + Object(Jr.a)(e, 0, 2)),
                          (this.clusterFront.props.particleSizeMin = Object(Jr.a)(
                            e,
                            ed.kernelClusterFront.particleSizeMin,
                            0,
                          )),
                          (this.clusterBack.props.particleSizeMin = Object(Jr.a)(
                            e,
                            ed.kernelClusterBack.particleSizeMin,
                            0,
                          )),
                          (this.clusterFront.props.o = Object(Jr.a)(
                            e,
                            ed.kernelClusterFront.o,
                            0,
                          )),
                          (this.clusterBack.props.o = Object(Jr.a)(
                            e,
                            ed.kernelClusterBack.o,
                            0,
                          ));
                      },
                    },
                    {
                      key: 'setResolution',
                      value: function (e) {
                        var t = e.width,
                          n = e.height,
                          i = e.dpr,
                          r = (this._vw = t),
                          o = (this._vh = n);
                        this.vResolution.set(r * i, o * i);
                      },
                    },
                  ]) && od(n.prototype, i),
                  r && od(n, r),
                  t
                );
              })()),
            ) || qf,
          cd =
            '#define GLSLIFY 1\nuniform float rotation;\n// uniform vec2 center;\n\n#include <common>\n\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t// #ifndef USE_SIZEATTENUATION\n\n\t// \t// bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\n\t// \t// if ( isPerspective ) scale *= - mvPosition.z;\n\t// \tscale *= - mvPosition.z * 0.12;\n\n\t// #endif\n\n\t// vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\t// vec2 rotatedPosition;\n\t// rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\t// rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tvec3 pos = position;\n\tmvPosition.xy += pos.xy * scale.xy;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\tvUv = uv;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}',
          pd =
            '#define GLSLIFY 1\nuniform float uStrokeWidth;\nuniform vec2 uSize;\nuniform float uTime;\n\nuniform float uPrInnerCircle;\nuniform float uPrOuterRing;\n\nvarying vec2 vUv;\n\n#include <common>\n\nfloat createCircle(vec2 uv, vec2 point, float scale, float smoothing) {\n\tsmoothing = smoothing > 0. ? smoothing : .01;\n    scale = 1.0 / scale;\n    float radius = length(uv + point) * 2.0 * scale;\n    float circle = smoothstep(1.0, 1. - smoothing, radius);\n    \n    return  circle;\n}\n\nfloat createRing(vec2 uv, float scale, vec2 size, float pStrokeWidth, in float smoothing) {\n\n\tsmoothing = smoothing > 0. ? smoothing : .01;\n    scale = 1.0 / scale;\n    \n    float strokeWidth = 1.0 - pStrokeWidth / size.x * 2.0 * scale;\n    // float strokeWidth = 1.0 - pStrokeWidth;\n    // float dist = distance(uv * 2.0, vec2(1.0));\n    float radius = length(uv - 0.5) * 2.0 * scale;\n    float circle = smoothstep(1.0, 1.0 - smoothing, radius);\n    float innerCircle = smoothstep(strokeWidth + smoothing, strokeWidth, radius);\n    \n    return circle * (1.0 - innerCircle);\n}\n\nfloat clampNorm(float val, float min, float max) {\n    return clamp((val - min) / (max - min), 0.0, 1.0);\n}\n\nvoid main() {\n\n    float v = step(.01, uPrInnerCircle);\n    float v0 = step(.01, uPrOuterRing);\n\n\tfloat minRing = mix(.1, .36, uPrOuterRing);//.4;\n\tfloat maxRing = mix(.1, 1., uPrOuterRing);//1.;\n\n    float sdRing = createRing(vUv, minRing, uSize, uStrokeWidth, .05);\n\t   \t  sdRing *= .3;\n          sdRing *= v0;\n\t\n    float sdCircle = createCircle(vUv, vec2(-.5), mix(0.02, .1, uPrInnerCircle), .2);\n\n\tfloat sdRingRipple = 0.;\n\n\tint NUM_RIPPLES = 3;\n    for(int i = 0; i < 3; i++) {\n\n    \tfloat t = uTime;\n    \tfloat j = float(i);\n        float sc = mix( minRing, maxRing, mod( t + ( j * (1. / float(NUM_RIPPLES)) ), 1. ) );\n        float a = ( 1. - clampNorm( sc, minRing, maxRing ) ) * .4;\n              a *= uPrInnerCircle;\n              a *= v0;\n        \n        sdRingRipple += createRing( vUv, sc, uSize, uStrokeWidth, .05 ) * a;\n    }\n\n\tfloat alpha = sdCircle + sdRing + sdRingRipple;\n    alpha *= v;\n\n\tgl_FragColor = vec4(vec3(1.), alpha);\n}';
        function hd(e) {
          return (hd = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function fd(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          return e;
        }
        function dd(e, t) {
          return (dd =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var vd,
          md,
          gd = (function (e) {
            function t() {
              var e,
                n,
                i,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                (n = this),
                (i = hd(t).call(this, r)),
                ((e =
                  !i || ('object' != typeof i && 'function' != typeof i)
                    ? fd(n)
                    : i).type = r.type || 'HotspotMaterial'),
                (e.uniforms = Object(a.extend)(
                  {},
                  r.uniforms,
                  $e.ShaderLib.sprite.uniforms,
                  {
                    uStrokeWidth: { type: 'f', value: 0.1 },
                    uSize: { type: 'v2', value: new $e.Vector2(4) },
                    uTime: { type: 'f', value: 0 },
                    uPrInnerCircle: { type: 'f', value: 0 },
                    uPrOuterRing: { type: 'f', value: 0 },
                  },
                )),
                (e.vertexShader = cd),
                (e.fragmentShader = pd),
                Object(a.each)(e.uniforms, function (t, n) {
                  Object.defineProperty(fd(e), n, {
                    get: function () {
                      return e.uniforms[n].value;
                    },
                    set: function (t) {
                      e.uniforms[n].value = t;
                    },
                  });
                }),
                e
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && dd(e, t);
              })(t, $e['SpriteMaterial']),
              t
            );
          })();
        function bd() {
          var e = wd([
            '\n            varying vec2 vUv;\n    \n            void main() {\n                vec2 st = vUv;\n                gl_FragColor = vec4(vec3(0., 1., 0.), 0.);\n            }\n        ',
          ]);
          return (
            (bd = function () {
              return e;
            }),
            e
          );
        }
        function yd() {
          var e = wd([
            '\n            varying vec2 vUv;\n            \n            void main() {\n                vec3 pos = position;\n                vec4 transformed = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n                gl_Position = transformed;\n                vUv = uv;\n            }\n        ',
          ]);
          return (
            (yd = function () {
              return e;
            }),
            e
          );
        }
        function wd(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        function xd(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Pd(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                xd(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                xd(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function _d(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function kd(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Od(e) {
          return (Od = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Sd(e, t) {
          return (Sd =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Td,
          Ad =
            Object(it.a)(rt)(
              ((function (e, t, n, i, r) {
                var o = {};
                Object.keys(i).forEach(function (e) {
                  o[e] = i[e];
                }),
                  (o.enumerable = !!o.enumerable),
                  (o.configurable = !!o.configurable),
                  ('value' in o || o.initializer) && (o.writable = !0),
                  (o = n
                    .slice()
                    .reverse()
                    .reduce(function (n, i) {
                      return i(e, t, n) || n;
                    }, o)),
                  r &&
                    void 0 !== o.initializer &&
                    ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                    (o.initializer = void 0)),
                  void 0 === o.initializer &&
                    (Object.defineProperty(e, t, o), (o = null));
              })(
                (md = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = kd(
                        this,
                        (e = Od(t)).call.apply(e, [this].concat(r)),
                      )).options = {}),
                      (n.props = {
                        visible: !1,
                        v: !1,
                        pointerActive: [
                          store,
                          function (e) {
                            return e.pointer.active;
                          },
                        ],
                        renderActive: !1,
                      }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && Sd(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e = Pd(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (this.offsetHotspot =
                                            Math.PI *
                                            (env.isMobile ? 1.5 : 1.444)),
                                          (this.animObj = {
                                            pCReveal: 0,
                                            pCRadius: 0,
                                            pHoldRad: 0,
                                            pHoldRadTg: 0,
                                            pHoldRadVel: 0,
                                          }),
                                          (this.currIdx = -1),
                                          (e.next = 5),
                                          this._setupUICircle()
                                        );
                                      case 5:
                                        return (
                                          (e.next = 7), this._setupUIHotspots()
                                        );
                                      case 7:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: '_setupUICircle',
                        value: (function () {
                          var e = Pd(
                            regeneratorRuntime.mark(function e() {
                              var t, n, i, r, o;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (t = new $e.BufferGeometry()),
                                          140,
                                          (n = new Float32Array(
                                            s.a.flatten(
                                              s.a.range(140).map(function (e) {
                                                return [0, 0, 0];
                                              }),
                                            ),
                                          )),
                                          (i = new Float32Array(
                                            s.a.flatten(
                                              s.a.range(140).map(function (e) {
                                                return e;
                                              }),
                                            ),
                                          )),
                                          t.addAttribute(
                                            'a_index',
                                            new $e.BufferAttribute(i, 1),
                                          ),
                                          t.addAttribute(
                                            'position',
                                            new $e.BufferAttribute(n, 3),
                                          ),
                                          (r = new $e.ShaderMaterial({
                                            uniforms: {
                                              u_size: { type: 'f', value: 3 },
                                              u_progress: {
                                                type: 'f',
                                                value: 0.2,
                                              },
                                              u_radius: { type: 'f', value: 2.4 },
                                            },
                                            vertexShader:
                                              '#define GLSLIFY 1\nuniform float u_size;\nuniform float u_progress;\nuniform float u_radius;\n\nvarying float vSize;\n\nattribute float a_index;\n\n#include <common>\n\nfloat cubicOut(float t) {\n  float f = t - 1.0;\n  return f * f * f + 1.0;\n}\n\nfloat map(float value, float inMin, float inMax, float outMin, float outMax, bool clamped) {\n\tif (clamped) value = min(inMax, max(inMin, value));\n\n\treturn outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\nvoid main() {\n\n    float pAmount = 140.;\n    float pIndex = 1.0 - (a_index / pAmount);\n    // float pIndex = 1.0 - floor(a_index / pAmount) / linesAmount;\n\n    float d = pIndex;\n    float a = d * PI2;\n\n    float off = (a / PI);\n    off = map( mod( off, 1. ), 0., 1., -1., 1., false );\n    off = abs( off );\n    // off = clamp( cubicOut( abs( off ) ), 0., 1. );\n\n    float t = u_progress;\n    t = map( t * (1. + 1.), off, off + 1., 0., 1., true );\n    t = cubicOut(t);\n\n    vec3 pos = position;\n    pos.x += cos(a) * u_radius;\n    pos.y += 0.;\n    pos.z += sin(a) * u_radius;\n\n    vec4 transformed = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n    \n    gl_Position = transformed;\n    vSize = u_size * t;\n    // vSize = 10. * off;\n    gl_PointSize = vSize;\n}',
                                            fragmentShader:
                                              '#define GLSLIFY 1\nuniform float opacity;\n\nvarying float vSize;\n\nfloat createCircle(vec2 uv, vec2 point, float scale, float smoothing) {\n\tsmoothing = smoothing > 0. ? smoothing : .01;\n    scale = 1.0 / scale;\n    float radius = length(uv + point) * 2.0 * scale;\n    float circle = smoothstep(1.0, 1. - smoothing, radius);\n    \n    return  circle;\n}\n\nvoid main() {\n    vec2 st = gl_PointCoord;\n    vec3 c = vec3(createCircle(st, vec2(-.5), 1., .8));\n    gl_FragColor = vec4(vec3(1.), (vSize < 0.001) ? 0. : c.r);\n}',
                                            transparent: !0,
                                            depthWrite: !1,
                                          })),
                                          ((o = this.meshCircular = new $e.Points(
                                            t,
                                            r,
                                          )).rotation.x = 0.06 * Math.PI),
                                          o.layers.set(this.options.layer),
                                          (o.renderOrder = 3),
                                          this.object.add(o);
                                      case 12:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: '_setupUIHotspots',
                        value: function () {
                          var e = this;
                          (this.wrapperHotspots = new $e.Group()),
                            (this.wrapperHotspots.rotation.x = 0.06 * Math.PI),
                            (this.wrapperHotspots.rotation.y = this.offsetHotspot);
                          (this.items = []),
                            s.a.range(this.options.numItems).map(function (t) {
                              var n =
                                  (t / e.options.numItems) * 1 * (2 * -Math.PI),
                                i = new $e.SphereBufferGeometry(0.15),
                                r = new $e.ShaderMaterial({
                                  vertexShader: Mt(yd()),
                                  fragmentShader: Mt(bd()),
                                  transparent: !0,
                                }),
                                o = new $e.Mesh(i, r);
                              o.layers.set(e.options.layer),
                                (o.renderOrder = 2),
                                e.wrapperHotspots.add(o);
                              var a = new $e.PlaneBufferGeometry(1, 1),
                                s = new gd({ transparent: !0, depthWrite: !1 }),
                                u = new $e.Mesh(a, s);
                              u.layers.set(e.options.layer),
                                (u.renderOrder = 1),
                                e.wrapperHotspots.add(u),
                                e.items.push({
                                  idx: t,
                                  angle: n,
                                  meshG: u,
                                  meshM: o,
                                  pInnerC: 0,
                                  pOuterRing: 0,
                                });
                            }),
                            this.object.add(this.wrapperHotspots);
                        },
                      },
                      {
                        key: 'onVisible',
                        value: function () {
                          (this.props.v = !0),
                            (this.props.renderActive = !0),
                            (this.animObj.pCReveal = 0),
                            (this.animObj.pCRadius = 0),
                            TweenMax.killTweensOf(this.animObj, this.items),
                            TweenMax.to(this.animObj, 1, {
                              pCReveal: 1,
                              ease: Linear.easeNone,
                              delay: 0.5,
                            }),
                            TweenMax.to(this.animObj, 1.2, {
                              pCRadius: 1,
                              ease: Expo.easeOut,
                              delay: 0.5,
                            }),
                            TweenMax.staggerTo(
                              this.items,
                              0.6,
                              { pInnerC: 1, ease: Back.easeOut, delay: 0.7 },
                              0.08,
                            ),
                            TweenMax.killDelayedCallsTo(this.offVisibleDelayed);
                        },
                      },
                      {
                        key: 'offVisible',
                        value: function () {
                          TweenMax.killTweensOf(this.animObj, this.items),
                            TweenMax.to(this.animObj, 0.6, {
                              pCReveal: 0,
                              ease: Linear.easeNone,
                            }),
                            TweenMax.to(this.animObj, 1.2, {
                              pCRadius: 0,
                              ease: Power3.easeIn,
                            }),
                            TweenMax.staggerTo(
                              this.items,
                              0.6,
                              { pInnerC: 0, ease: Back.easeOut },
                              0.08,
                            ),
                            TweenMax.delayedCall(1.2, this.offVisibleDelayed);
                        },
                      },
                      {
                        key: 'offVisibleDelayed',
                        value: function () {
                          (this.props.v = !1), (this.props.renderActive = !1);
                        },
                      },
                      { key: 'whileVisible', value: function () {} },
                      {
                        key: 'enableItem',
                        value: function (e) {
                          TweenMax.killTweensOf(this.items[e], {
                            pOuterRing: !0,
                          }),
                            TweenMax.to(this.items[e], 0.56, {
                              pOuterRing: 1,
                              ease: Back.easeOut.config(2),
                            });
                        },
                      },
                      {
                        key: 'disableItem',
                        value: function (e) {
                          TweenMax.killTweensOf(this.items[e], {
                            pOuterRing: !0,
                          }),
                            TweenMax.to(this.items[e], 0.4, {
                              pOuterRing: 0,
                              ease: Power3.easeOut,
                            });
                        },
                      },
                      {
                        key: 'onPointerActive',
                        value: function () {
                          if (this.props.visible) {
                            for (var e = 0; e < this.items.length; e++)
                              this.disableItem(e);
                            this.animObj.pHoldRadTg = 1;
                          }
                        },
                      },
                      {
                        key: 'offPointerActive',
                        value: function () {
                          this.props.visible &&
                            (this.displayCurrent(),
                            (this.animObj.pHoldRadTg = 0));
                        },
                      },
                      {
                        key: 'displayCurrent',
                        value: function () {
                          this.enableItem(this.currIdx);
                        },
                      },
                      {
                        key: 'whileRenderActive',
                        value: function () {
                          this.update();
                        },
                      },
                      {
                        key: 'update',
                        value: function () {
                          var e = this.props.pointerActive ? 0.052 : 0.02,
                            t = this.props.pointerActive ? 0.78 : 0.76;
                          (this.animObj.pHoldRadVel +=
                            (this.animObj.pHoldRadTg - this.animObj.pHoldRad) *
                            e),
                            (this.animObj.pHoldRad += this.animObj.pHoldRadVel *= t);
                          var n =
                            Object(o.a)(this.animObj.pCRadius, 0, 1, 1.5, 2.4) +
                            Object(o.a)(this.animObj.pHoldRad, 0, 1, 0, -0.22);
                          (this.meshCircular.material.uniforms.u_progress.value = Object(
                            o.a,
                          )(this.animObj.pCReveal, 0, 1, 0, 1)),
                            (this.meshCircular.material.uniforms.u_radius.value = n);
                          for (var i = 0; i < this.items.length; i++) {
                            var r = this.items[i],
                              a = [0, 0, 0];
                            (a[0] = Math.cos(r.angle) * n),
                              (a[2] = Math.sin(r.angle) * n);
                            var s = Math.max(r.pOuterRing, 0.01);
                            (r.meshG.material.uniforms.uTime.value =
                              0.3 * store.state.time),
                              (r.meshG.material.uniforms.uPrInnerCircle.value =
                                r.pInnerC),
                              (r.meshG.material.uniforms.uPrOuterRing.value =
                                r.pOuterRing),
                              r.meshG.position.fromArray(a),
                              r.meshM.position.fromArray(a),
                              r.meshM.scale.set(s, s, s);
                          }
                        },
                      },
                      {
                        key: 'spinProgress',
                        set: function (e) {
                          var t = e / this.pSpinStep,
                            n = (2 * Math.PI) / this.options.numItems;
                          (this.wrapperHotspots.rotation.y =
                            this.offsetHotspot + t * n),
                            (this.meshCircular.rotation.y = t * (0.1 * Math.PI));
                        },
                      },
                      {
                        key: 'spinStep',
                        set: function (e) {
                          this.pSpinStep = e;
                        },
                      },
                      {
                        key: 'index',
                        set: function (e) {
                          this.items[this.currIdx] &&
                            e !== this.currIdx &&
                            this.disableItem(this.currIdx),
                            (this.currIdx = e);
                        },
                      },
                    ]) && _d(n.prototype, i),
                    r && _d(n, r),
                    t
                  );
                })()).prototype,
                'offVisibleDelayed',
                [X.a],
                Object.getOwnPropertyDescriptor(
                  md.prototype,
                  'offVisibleDelayed',
                ),
                md.prototype,
              ),
              (vd = md)),
            ) || vd,
          Md =
            '#define GLSLIFY 1\nuniform float uAlpha;\nuniform vec3 color;\nuniform sampler2D msdfMap;\n\nvarying vec2 vUv;\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\n\nvoid main() {\n    vec3 msdfSample = texture2D(msdfMap, vUv).rgb;\n    float sigDist = median(msdfSample.r, msdfSample.g, msdfSample.b) - 0.5;\n\n    float border = fwidth(sigDist);\n    \n    sigDist = sigDist / border;\n    float fill = clamp(sigDist + 0.5, 0.0, 1.0);\n\n    float mask = step(0.5, vUv.y);\n\n    float alpha = fill * uAlpha;\n\n    // gl_FragColor = vec4(color, 1. - alpha);\n    gl_FragColor = vec4(vec3(color), alpha);\n}';
        function jd(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Fd(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                jd(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                jd(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Rd(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Cd(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Ed(e) {
          return (Ed = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ld(e, t) {
          return (Ld =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Id,
          Dd =
            Fi()(
              (Td =
                Object(it.a)(rt)(
                  (Td = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = Cd(
                          this,
                          (e = Ed(t)).call.apply(e, [this].concat(r)),
                        )).options = {
                          text: 'Text',
                          align: 'center',
                          lineHeight: 1,
                          layer: 1,
                          minAlpha: 0.5,
                        }),
                        (n.props = {
                          v: !0,
                          active: !1,
                          visible: !1,
                          fontSize: 30,
                          width: 100,
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && Ld(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e = Fd(
                              regeneratorRuntime.mark(function e() {
                                var t;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (this.animObj = {
                                              pAlpha: 0,
                                              pAlphaActive: 0,
                                            }),
                                            (n = this.options.text),
                                            (t =
                                              'number' == typeof n
                                                ? this.options.text.toString()
                                                : this.options.text),
                                            (this.charLength = t.replace(
                                              ' ',
                                              '',
                                            )),
                                            (this.textScale = 0),
                                            (this.baseFontSize =
                                              Kn.json.info.size),
                                            (e.next = 7),
                                            this.setupText()
                                          );
                                        case 7:
                                          this.text = e.sent;
                                        case 8:
                                        case 'end':
                                          return e.stop();
                                      }
                                    var n;
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupText',
                          value: (function () {
                            var e = Fd(
                              regeneratorRuntime.mark(function e() {
                                var t, n, i;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (t = si({
                                              width: this.props.width,
                                              align: this.options.align,
                                              font: Kn.json,
                                              lineHeight:
                                                Kn.json.common.lineHeight *
                                                this.options.lineHeight,
                                              text: this.options.text.toString(),
                                            })),
                                            ((n = new $e.ShaderMaterial({
                                              uniforms: {
                                                uAlpha: { value: 0 },
                                                msdfMap: { value: Kn.map },
                                                color: {
                                                  value: new $e.Color('white'),
                                                },
                                              },
                                              transparent: !0,
                                              vertexShader: Je,
                                              fragmentShader: Md,
                                            })).extensions.derivatives = !0),
                                            ((i = new $e.Mesh(
                                              t,
                                              n,
                                            )).rotation.x = Zn(180)),
                                            i.layers.set(this.options.layer),
                                            (i.renderOrder = 50),
                                            this.object.add(i),
                                            e.abrupt('return', i)
                                          );
                                        case 9:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setFontSize',
                          value: function (e) {
                            this.updateMesh();
                          },
                        },
                        {
                          key: 'updateMesh',
                          value: function () {
                            var e = this.props.fontSize / this.baseFontSize;
                            this.text.scale.setScalar(e),
                              this.text.geometry.update({
                                width: this.props.width / e,
                              });
                            var t =
                                this.text.geometry.layout.width /
                                this.text.geometry.layout.height,
                              n = this.props.width / 2,
                              i = this.props.width / t / 2;
                            this.text.position.set(-n, -i, 0);
                          },
                        },
                        {
                          key: 'highlight',
                          value: function () {
                            var e = this;
                            L.b.killTweensOf(this.props, { s: !0 }),
                              L.b.to(this.props, 0.4, {
                                s: 1.1,
                                ease: 'easeOutSine',
                                delay: 0.05,
                                onComplete: function () {
                                  L.b.to(e.props, 0.6, {
                                    s: 1,
                                    ease: 'easeOutSine',
                                  });
                                },
                              });
                          },
                        },
                        {
                          key: 'show',
                          value: function () {
                            var e =
                                arguments.length > 0 && void 0 !== arguments[0]
                                  ? arguments[0]
                                  : {},
                              t = e.delay,
                              n = void 0 === t ? 0 : t,
                              i = e.dur,
                              r = void 0 === i ? 1 : i;
                            (this.props.visible = !0),
                              L.b.killTweensOf(this.animObj, { pAlpha: !0 }),
                              L.b.to(this.animObj, r, {
                                pAlpha: 1,
                                ease: 'easeOutQuart',
                                delay: n,
                              });
                          },
                        },
                        {
                          key: 'hide',
                          value: function () {
                            var e = this,
                              t =
                                arguments.length > 0 && void 0 !== arguments[0]
                                  ? arguments[0]
                                  : {},
                              n = t.delay,
                              i = void 0 === n ? 0 : n,
                              r = t.dur,
                              o = void 0 === r ? 0.5 : r;
                            L.b.killTweensOf(this.animObj, { pAlpha: !0 }),
                              L.b.to(this.animObj, o, {
                                pAlpha: 0,
                                ease: 'easeInQuart',
                                onComplete: function () {
                                  e.props.visible = !1;
                                },
                                delay: i,
                              }),
                              (this.props.active = !1);
                          },
                        },
                        {
                          key: 'onVisible',
                          value: function () {
                            this.object.visible = !0;
                          },
                        },
                        {
                          key: 'offVisible',
                          value: function () {
                            this.object.visible = !1;
                          },
                        },
                        {
                          key: 'onActive',
                          value: function () {
                            L.b.killTweensOf(this.animObj, { pAlphaActive: !0 }),
                              L.b.to(this.animObj, 0.5, {
                                pAlphaActive: 1,
                                ease: 'easeOutQuart',
                              });
                          },
                        },
                        {
                          key: 'offActive',
                          value: function () {
                            L.b.killTweensOf(this.animObj, { pAlphaActive: !0 }),
                              L.b.to(this.animObj, 0.5, {
                                pAlphaActive: 0,
                                ease: 'easeInQuart',
                              });
                          },
                        },
                        {
                          key: 'whileVisible',
                          value: function () {
                            this.text.material.uniforms.uAlpha.value =
                              this.animObj.pAlpha * this.options.minAlpha +
                              this.animObj.pAlpha *
                                this.animObj.pAlphaActive *
                                0.5;
                          },
                        },
                      ]) && Rd(n.prototype, i),
                      r && Rd(n, r),
                      t
                    );
                  })()),
                ) || Td),
            ) || Td;
        function Ud(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function zd(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Nd(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                zd(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                zd(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Bd(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Vd(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Yd(e) {
          return (Yd = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Hd(e, t) {
          return (Hd =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Xd,
          Gd,
          Wd = 100,
          Qd = Object(u.a)(),
          qd =
            Qe(
              (Id =
                Object(it.a)(rt)(
                  (Id = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = Vd(
                          this,
                          (e = Yd(t)).call.apply(e, [this].concat(r)),
                        )).options = {}),
                        (n.props = {
                          active: !1,
                          visible: !1,
                          render: !1,
                          eventsActive: !1,
                          pointerPosition: [
                            Qd,
                            function (e) {
                              return e.pointer.position;
                            },
                          ],
                          pointerClick: [
                            Qd,
                            function (e) {
                              return e.pointer.click;
                            },
                          ],
                          viewport: [
                            Qd,
                            function (e) {
                              return s.a.pick(
                                e.viewport,
                                'width',
                                'height',
                                'scale',
                              );
                            },
                          ],
                          cursorDefault: 'grab',
                          rollover: !1,
                          size: function (e) {
                            var t = e.viewport.scale,
                              n = Wd * t;
                            return n;
                          },
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && Hd(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e = Nd(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (this.bbox = {}),
                                            (this.tweenObj = {
                                              p0In: 0,
                                              p0Start: 0,
                                              p0End: 1,
                                              p1In: 1,
                                              p1Start: 0,
                                              p1End: 1,
                                              pActive: 0,
                                              pActiveVel: 0,
                                            }),
                                            (e.next = 4),
                                            this.setupRing({})
                                          );
                                        case 4:
                                          return (e.next = 6), this.setupLabel();
                                        case 6:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupRing',
                          value: (function () {
                            var e = Nd(
                              regeneratorRuntime.mark(function e(t) {
                                var n, i, r, o, a, s;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          (n = t.outerCircle),
                                            void 0 === n || n,
                                            (i = t.strokeWidth),
                                            (r = void 0 === i ? 2 : i),
                                            (o = t.size),
                                            void 0 === o ? 1 : o,
                                            ((a = this.mat = new $e.ShaderMaterial(
                                              {
                                                uniforms: {
                                                  uRotation: { value: 0 },
                                                  uAlpha: { value: 0 },
                                                  uProgress0: { value: 0 },
                                                  uProgress0Edges: {
                                                    value: new $e.Vector2(0, 0),
                                                  },
                                                  uProgress1: { value: 0 },
                                                  uProgress1Edges: {
                                                    value: new $e.Vector2(0, 0),
                                                  },
                                                  uStrokeWidth: {
                                                    value:
                                                      r *
                                                      Qd.state.viewport
                                                        .pixelRatio,
                                                  },
                                                  uSize: { value: Wd },
                                                },
                                                transparent: !0,
                                                vertexShader: Je,
                                                fragmentShader:
                                                  '#define GLSLIFY 1\nuniform float uStrokeWidth;\nuniform float uSize;\nuniform float uTime;\nuniform float uAlpha;\n\nuniform float uProgress0;\nuniform vec2 uProgress0Edges;\n\nuniform float uProgress1;\nuniform vec2 uProgress1Edges;\n\nvarying vec2 vUv;\n\n#include <common>\n\nfloat createRing(vec2 uv, float strokeWidth, float s) {\n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(uv - 0.5) * scale;\n    \n    // Calculate edge antialias feather\n    float distance = length(center);\n    float edgeFeather = fwidth(distance) * feather;\n\n    // Calculate fixed stroke width regardless of scale\n    float dx = dFdx(uv.x);\n    strokeWidth = dx * strokeWidth;\n  \n    float innerRadius = radius - strokeWidth;\n    float outerRadius = radius;\n    float value = smoothstep(innerRadius - edgeFeather, innerRadius, distance) * \n                  smoothstep(outerRadius, outerRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s, float alignStroke) {\n    // alignStroke values: 0 = innner, 0.5 = center,  1 = outer\n    \n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeWidth = dDistance * feather;\n    float innerEdge = mix(1.0, 0.0, alignStroke);\n    float outerEdge = mix(0.0, 1.0, alignStroke);\n\n    // Apply stroke width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float dxStrokeWidth = dx * strokeWidth;\n    float innerRadius = radius - dxStrokeWidth * innerEdge;\n    float outerRadius = radius + dxStrokeWidth * outerEdge;\n    float value = smoothstep(innerRadius - edgeWidth * .5, innerRadius + edgeWidth * .5, distance) * (1. - smoothstep(outerRadius - edgeWidth * .5, outerRadius + edgeWidth * .5, distance));\n\n    return value;\n}\n\nfloat clampNorm(float val, float min, float max) {\n    return clamp((val - min) / (max - min), 0.0, 1.0);\n}\n\nfloat createGradient(vec2 point) {\n    float angleFromPoint = atan(point.x, point.y);\n    return (angleFromPoint + PI) / (PI * 2.0);\n}\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvoid main() {\n\n    float v = step(.01, uProgress0);\n\n    vec2 uv = vUv;\n    \n    vec2 uvGradient = vUv;\n         uvGradient = rotateUV(uvGradient, 3.141592653589793);\n    \n    vec2 center = uvGradient - 0.5;\n\n    float sdRing = createRing(uv, uStrokeWidth, 1.0);\n    float sdGradient = createGradient(center);\n\n    float start0 = step(uProgress0Edges.x * uProgress0, sdGradient);\n    float end0 = 1.0 - step(uProgress0Edges.y * uProgress0, sdGradient);\n    float progressRing0 = start0 * end0 * sdRing;\n\n    float start1 = step(uProgress1Edges.x * uProgress1, sdGradient);\n    float end1 = 1.0 - step(uProgress1Edges.y * uProgress1, sdGradient);\n    float progressRing1 = start1 * end1 * sdRing;\n\n\tfloat alpha = (progressRing0 * uAlpha) + (progressRing0 * progressRing1);\n\t\t  alpha = min(alpha, 1.);\n    \t  alpha *= v;\n\n    gl_FragColor = vec4(vec3(1.), alpha);\n}',
                                              },
                                            )).extensions.derivatives = !0),
                                            (s = this.quadRing = new $e.Mesh(
                                              et,
                                              a,
                                            )).layers.set(this.options.layer),
                                            this.object.add(s);
                                        case 6:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function (t) {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupLabel',
                          value: (function () {
                            var e = Nd(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (e.next = 2),
                                            new Dd().setup({
                                              options: {
                                                layer: this.options.layer,
                                                text: this.props.index + 1,
                                              },
                                              props: {
                                                fontSize: [
                                                  this.store,
                                                  function (e) {
                                                    return (
                                                      (c.a.isMobile ? 32 : 22) *
                                                      e.viewport.scale
                                                    );
                                                  },
                                                ],
                                                pY: function (e) {
                                                  return 0.03 * e.width;
                                                },
                                                pX: function (e) {
                                                  return 0.02 * e.width;
                                                },
                                              },
                                            })
                                          );
                                        case 2:
                                          (this.label = e.sent),
                                            this.object.add(this.label.object);
                                        case 4:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'show',
                          value: function () {
                            var e = this,
                              t = (arguments.length > 0 && void 0 !== arguments[0]
                                ? arguments[0]
                                : {}
                              ).delay,
                              n = void 0 === t ? 0 : t;
                            (this.props.visible = !0),
                              (this.props.v = !0),
                              (this.tweenObj.p0In = 0),
                              (this.tweenObj.p0Start = 0),
                              this.refreshSizing(),
                              TweenMax.killTweensOf(this.tweenObj, {
                                p0In: !0,
                                p0Start: !0,
                              }),
                              TweenMax.to(this.tweenObj, 0.88, {
                                p0In: 1,
                                delay: n,
                                ease: 'easeInOutQuart',
                                onStart: function () {
                                  (e.props.eventsActive = !0),
                                    (e.props.render = !0);
                                },
                              }),
                              this.label.show({ delay: n + 1, dur: 1 });
                          },
                        },
                        {
                          key: 'hide',
                          value: function () {
                            var e = this,
                              t = (arguments.length > 0 && void 0 !== arguments[0]
                                ? arguments[0]
                                : {}
                              ).delay,
                              n = void 0 === t ? 0 : t;
                            (this.props.eventsActive = !1),
                              TweenMax.killTweensOf(this.tweenObj, {
                                p0In: !0,
                                p0Start: !0,
                              }),
                              TweenMax.to(this.tweenObj, 0.88, {
                                p0Start: 1,
                                delay: n,
                                ease: 'easeInOutQuart',
                                onComplete: function () {
                                  (e.props.active = !1), (e.props.render = !1);
                                },
                              }),
                              this.label.hide();
                          },
                        },
                        {
                          key: 'onActive',
                          value: function () {
                            (this.tweenObj.p1End = 0),
                              (this.tweenObj.p1Start = 0),
                              TweenMax.killTweensOf(this.tweenObj, {
                                p1End: !0,
                                p1Start: !0,
                              }),
                              TweenMax.to(this.tweenObj, 0.58, {
                                p1End: 1,
                                ease: Power3.easeInOut,
                              }),
                              (this.label.props.active = !0);
                          },
                        },
                        {
                          key: 'offActive',
                          value: function () {
                            var e = this;
                            TweenMax.killTweensOf(this.tweenObj, {
                              p1End: !0,
                              p1Start: !0,
                            }),
                              TweenMax.to(this.tweenObj, 0.58, {
                                p1Start: 1,
                                ease: Power3.easeInOut,
                                onComplete: function () {
                                  (e.tweenObj.p1End = 0),
                                    (e.tweenObj.p1Start = 0);
                                },
                              }),
                              (this.label.props.active = !1);
                          },
                        },
                        {
                          key: 'whileRender',
                          value: function () {
                            var e = this.tweenObj;
                            (this.mat.uniforms.uProgress0Edges.value.x =
                              e.p0Start),
                              (this.mat.uniforms.uProgress0Edges.value.y =
                                e.p0End),
                              (this.mat.uniforms.uProgress1Edges.value.x =
                                e.p1Start),
                              (this.mat.uniforms.uProgress1Edges.value.y =
                                e.p1End),
                              (this.mat.uniforms.uProgress0.value = e.p0In),
                              (this.mat.uniforms.uProgress1.value = e.p1In);
                            (e.pActiveVel =
                              0.008 * (1 - e.pActive) + 0.86 * e.pActiveVel),
                              (e.pActive += e.pActiveVel);
                            var t = 0.2 + 0.2 * e.pActive;
                            this.mat.uniforms.uAlpha.value = t;
                          },
                        },
                        {
                          key: 'setPointerClick',
                          value: function () {
                            this.props.eventsActive &&
                              Ke(this.bbox) &&
                              this.emit('click', { index: this.props.index });
                          },
                        },
                        { key: 'offPointerActive', value: function () {} },
                        {
                          key: 'setPointerPosition',
                          value: function (e) {
                            var t = Ud(e, 2),
                              n = t[0],
                              i = t[1];
                            this.props.eventsActive &&
                              ((this.pointer = [n, i]),
                              (this.props.rollover = Ke(this.bbox)));
                          },
                        },
                        {
                          key: 'setRollover',
                          value: function (e) {
                            e
                              ? ((Qd.state.cursor = 'pointer'),
                                (this.tweenObj.pActiveVel = 0.8))
                              : (Qd.state.cursor = this.props.cursorDefault);
                          },
                        },
                        {
                          key: 'setSize',
                          value: function () {
                            this.refreshSizing();
                          },
                        },
                        {
                          key: 'refreshSizing',
                          value: function () {
                            var e = this.props,
                              t = (e.width, e.height, e.size);
                            if (
                              (this.quadRing.scale.setScalar(t),
                              this.object.parent)
                            ) {
                              var n = this.object.parent.position.toArray();
                              (this.bbox = {
                                min: {
                                  x: -t / 2 + (n[0] + this.props.pX),
                                  y: -t / 2 + (n[1] + this.props.pY),
                                },
                                max: {
                                  x: t / 2 + (n[0] + this.props.pX),
                                  y: t / 2 + (n[1] + this.props.pY),
                                },
                              }),
                                (this.mat.uniforms.uSize.value = t),
                                (this.label.props.width = t);
                            }
                          },
                        },
                      ]) && Bd(n.prototype, i),
                      r && Bd(n, r),
                      t
                    );
                  })()),
                ) || Id),
            ) || Id;
        function Zd(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Kd(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function $d(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Jd(e) {
          return (Jd = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function ev(e, t) {
          return (ev =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function tv(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var nv,
          iv =
            Qe(
              (Xd =
                Object(it.a)(rt)(
                  (tv(
                    (Gd = (function (e) {
                      function t() {
                        var e, n;
                        !(function (e, t) {
                          if (!(e instanceof t))
                            throw new TypeError(
                              'Cannot call a class as a function',
                            );
                        })(this, t);
                        for (
                          var i = arguments.length, r = new Array(i), o = 0;
                          o < i;
                          o++
                        )
                          r[o] = arguments[o];
                        return (
                          ((n = $d(
                            this,
                            (e = Jd(t)).call.apply(e, [this].concat(r)),
                          )).options = {}),
                          (n.props = {
                            name: 'Hotspot-Indicator',
                            visible: !1,
                            v: !1,
                            pointerActive: [
                              store,
                              function (e) {
                                return e.pointer.active;
                              },
                            ],
                            resolution: [
                              store,
                              function (e) {
                                return s.a.pick(
                                  e.viewport,
                                  'width',
                                  'height',
                                  'scale',
                                );
                              },
                            ],
                          }),
                          n
                        );
                      }
                      var n, i, r;
                      return (
                        (function (e, t) {
                          if ('function' != typeof t && null !== t)
                            throw new TypeError(
                              'Super expression must either be null or a function',
                            );
                          (e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                              value: e,
                              writable: !0,
                              configurable: !0,
                            },
                          })),
                            t && ev(e, t);
                        })(t, le['a']),
                        (n = t),
                        (i = [
                          {
                            key: 'onSetup',
                            value: (function () {
                              var e,
                                t =
                                  ((e = regeneratorRuntime.mark(function e() {
                                    var t, n;
                                    return regeneratorRuntime.wrap(
                                      function (e) {
                                        for (;;)
                                          switch ((e.prev = e.next)) {
                                            case 0:
                                              (this.object.name = this.props.name),
                                                (this.btnItems = []),
                                                (this.currIdx = -1),
                                                (t = 0);
                                            case 4:
                                              if (!(t < this.options.numItems)) {
                                                e.next = 13;
                                                break;
                                              }
                                              return (
                                                (e.next = 7),
                                                new qd().setup({
                                                  options: {
                                                    layer: this.options.layer,
                                                  },
                                                  props: { index: t },
                                                })
                                              );
                                            case 7:
                                              (n = e.sent),
                                                this.object.add(n.object),
                                                this.btnItems.push(n);
                                            case 10:
                                              t++, (e.next = 4);
                                              break;
                                            case 13:
                                            case 'end':
                                              return e.stop();
                                          }
                                      },
                                      e,
                                      this,
                                    );
                                  })),
                                  function () {
                                    var t = this,
                                      n = arguments;
                                    return new Promise(function (i, r) {
                                      var o = e.apply(t, n);
                                      function a(e) {
                                        Zd(o, i, r, a, s, 'next', e);
                                      }
                                      function s(e) {
                                        Zd(o, i, r, a, s, 'throw', e);
                                      }
                                      a(void 0);
                                    });
                                  });
                              return function () {
                                return t.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'onVisible',
                            value: function () {
                              var e = this;
                              (this.props.v = !0),
                                this.btnItems.forEach(function (t, n) {
                                  t.on('click', e.onBtnItemClick),
                                    t.show({ delay: 0.1 + 0.08 * n });
                                }),
                                TweenMax.killTweensOf(this.offVisibleDelayed);
                            },
                          },
                          {
                            key: 'offVisible',
                            value: function () {
                              var e = this;
                              this.btnItems.forEach(function (t, n) {
                                t.listeners('click').length &&
                                  t.off('click', e.onBtnItemClick),
                                  t.hide({
                                    delay: 0.08 * (e.btnItems.length - 1 - n),
                                  });
                              }),
                                TweenMax.delayedCall(2, this.offVisibleDelayed);
                            },
                          },
                          {
                            key: 'offVisibleDelayed',
                            value: function () {
                              this.props.v = !1;
                            },
                          },
                          {
                            key: 'setResolution',
                            value: function (e) {
                              var t = this,
                                n = (e.width, e.height, e.scale),
                                i = 36 * n,
                                r = 100 * n,
                                o = -(r + i),
                                a = 0;
                              this.btnItems.forEach(function (e, n) {
                                (e.props.pX = o + a),
                                  (a += r),
                                  (a += n < t.options.numItems - 1 ? i : 0);
                              });
                            },
                          },
                          {
                            key: 'enableItem',
                            value: function (e) {
                              this.btnItems[e].props.active = !0;
                            },
                          },
                          {
                            key: 'disableItem',
                            value: function (e) {
                              this.btnItems[e].props.active = !1;
                            },
                          },
                          {
                            key: 'onPointerActive',
                            value: function () {
                              if (this.props.visible)
                                for (var e = 0; e < this.btnItems.length; e++)
                                  this.disableItem(e);
                            },
                          },
                          {
                            key: 'offPointerActive',
                            value: function () {
                              this.props.visible && this.displayCurrent();
                            },
                          },
                          {
                            key: 'displayCurrent',
                            value: function () {
                              this.enableItem(this.currIdx);
                            },
                          },
                          {
                            key: 'onBtnItemClick',
                            value: function (e) {
                              var t = e.index;
                              this.emit('click', { index: t });
                            },
                          },
                          {
                            key: 'index',
                            set: function (e) {
                              this.btnItems[this.currIdx] &&
                                e !== this.currIdx &&
                                this.disableItem(this.currIdx),
                                (this.currIdx = e);
                            },
                          },
                        ]) && Kd(n.prototype, i),
                        r && Kd(n, r),
                        t
                      );
                    })()).prototype,
                    'offVisibleDelayed',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      Gd.prototype,
                      'offVisibleDelayed',
                    ),
                    Gd.prototype,
                  ),
                  tv(
                    Gd.prototype,
                    'onBtnItemClick',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      Gd.prototype,
                      'onBtnItemClick',
                    ),
                    Gd.prototype,
                  ),
                  (Xd = Gd)),
                ) || Xd),
            ) || Xd;
        function rv(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function ov(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function av(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function sv(e) {
          return (sv = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function uv(e, t) {
          return (uv =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var lv,
          cv =
            Object(it.a)(rt)(
              (nv = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = av(
                      this,
                      (e = sv(t)).call.apply(e, [this].concat(r)),
                    )).options = { id: 'image', name: 'Image', layer: 1 }),
                    (n.props = { v: !0, alpha: 1, active: !1, size: 100 }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && uv(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              var t, n;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (t = Qn(this.options.id)),
                                          (n = new $e.MeshBasicMaterial({
                                            map: t,
                                            transparent: !0,
                                          })),
                                          (this.mesh = new $e.Mesh(et, n)),
                                          this.mesh.layers.set(
                                            this.options.layer,
                                          ),
                                          this.object.add(this.mesh);
                                      case 5:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  rv(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  rv(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    { key: 'onActive', value: function () {} },
                    {
                      key: 'setSize',
                      value: function (e) {
                        this.mesh.scale.setScalar(e);
                      },
                    },
                    {
                      key: 'setAlpha',
                      value: function (e) {
                        this.mesh.material.opacity = e;
                      },
                    },
                  ]) && ov(n.prototype, i),
                  r && ov(n, r),
                  t
                );
              })()),
            ) || nv;
        function pv(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function hv(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                pv(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                pv(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function fv(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function dv(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function vv(e) {
          return (vv = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function mv(e, t) {
          return (mv =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var gv,
          bv,
          yv = Object(u.a)(),
          wv =
            Qe(
              (lv =
                Object(it.a)(rt)(
                  (lv = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = dv(
                          this,
                          (e = vv(t)).call.apply(e, [this].concat(r)),
                        )).options = {}),
                        (n.props = {
                          active: !1,
                          viewport: [
                            yv,
                            function (e) {
                              return s.a.pick(
                                e.viewport,
                                'width',
                                'height',
                                'scale',
                              );
                            },
                          ],
                          delayed: !0,
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && mv(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'setCurrIdx',
                          value: function (e) {
                            this.options.index === e
                              ? this.btnCta && (this.btnCta.props.active = !0)
                              : this.btnCta && (this.btnCta.props.active = !1);
                          },
                        },
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e = hv(
                              regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (e.next = 2), this.setupView({});
                                        case 2:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupView',
                          value: (function () {
                            var e = hv(
                              regeneratorRuntime.mark(function e() {
                                var t = this;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (e.next = 2), new yo();
                                        case 2:
                                          return (
                                            (this.title = e.sent),
                                            this.title.setup({
                                              options: {
                                                layer: this.options.layer,
                                                text: this.options.title,
                                                position: 'bottom-left',
                                                align: c.a.isMobile
                                                  ? 'center'
                                                  : 'left',
                                                animationDuration: 0.2,
                                                animationStagger: 0.02,
                                                interaction: !c.a.isMobile,
                                              },
                                              props: {
                                                fontSize: [
                                                  yv,
                                                  function (e) {
                                                    return (
                                                      (c.a.isMobile ? 60 : 100) *
                                                      e.viewport.scale
                                                    );
                                                  },
                                                ],
                                                width: [
                                                  yv,
                                                  function (e) {
                                                    return (
                                                      (c.a.isMobile ? 920 : 950) *
                                                      e.viewport.scale
                                                    );
                                                  },
                                                ],
                                              },
                                            }),
                                            this.object.add(this.title.object),
                                            (e.next = 7),
                                            new Ao()
                                          );
                                        case 7:
                                          if (
                                            ((this.bodyText = e.sent),
                                            this.bodyText.setup({
                                              options: {
                                                layer: this.options.layer,
                                                position: c.a.isMobile
                                                  ? 'bottom-left'
                                                  : 'top-left',
                                                text: this.options.bodyText,
                                                align: c.a.isMobile
                                                  ? 'center'
                                                  : 'left',
                                              },
                                              props: {
                                                fontSize: [
                                                  yv,
                                                  function (e) {
                                                    return (
                                                      (c.a.isMobile ? 40 : 20) *
                                                      e.viewport.scale
                                                    );
                                                  },
                                                ],
                                                width: [
                                                  yv,
                                                  function (e) {
                                                    return (
                                                      (c.a.isMobile ? 860 : 650) *
                                                      e.viewport.scale
                                                    );
                                                  },
                                                ],
                                              },
                                            }),
                                            this.object.add(this.bodyText.object),
                                            !this.options.btnLabel)
                                          ) {
                                            e.next = 16;
                                            break;
                                          }
                                          return (
                                            (e.next = 13),
                                            new yi().setup({
                                              options: {
                                                layer: this.options.layer,
                                                align: c.a.isMobile
                                                  ? 'center'
                                                  : 'left',
                                                position: c.a.isMobile
                                                  ? 'center'
                                                  : 'top-left',
                                                font: 'bold',
                                                textTransform: 'uppercase',
                                                clickable: !0,
                                                text: this.options.btnLabel,
                                              },
                                              props: {
                                                fontSize: [
                                                  yv,
                                                  function (e) {
                                                    return (
                                                      (c.a.isMobile ? 35 : 20) *
                                                      e.viewport.scale
                                                    );
                                                  },
                                                ],
                                                width: [
                                                  yv,
                                                  function (e) {
                                                    return (
                                                      (c.a.isMobile ? 860 : 250) *
                                                      e.viewport.scale
                                                    );
                                                  },
                                                ],
                                              },
                                            })
                                          );
                                        case 13:
                                          (this.btnCta = e.sent),
                                            this.object.add(this.btnCta.object),
                                            this.btnCta.on('click', function () {
                                              m(
                                                'CTA Link Click',
                                                'Click',
                                                'Qrome product page',
                                              ),
                                                window.open(t.options.btnLink);
                                            });
                                        case 16:
                                          if (!this.options.rSymbolPostions) {
                                            e.next = 20;
                                            break;
                                          }
                                          return (
                                            (e.next = 19),
                                            Promise.all(
                                              this.options.rSymbolPostions.map(
                                                (function () {
                                                  var e = hv(
                                                    regeneratorRuntime.mark(
                                                      function e(n) {
                                                        var i;
                                                        return regeneratorRuntime.wrap(
                                                          function (e) {
                                                            for (;;)
                                                              switch (
                                                                (e.prev = e.next)
                                                              ) {
                                                                case 0:
                                                                  return (
                                                                    (e.next = 2),
                                                                    new cv().setup(
                                                                      {
                                                                        options: {
                                                                          id:
                                                                            'registered',
                                                                          layer:
                                                                            t
                                                                              .options
                                                                              .layer,
                                                                        },
                                                                        props: {
                                                                          alpha: 0,
                                                                          size: [
                                                                            yv,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return (
                                                                                e
                                                                                  .viewport
                                                                                  .scale *
                                                                                (c
                                                                                  .a
                                                                                  .isMobile,
                                                                                15)
                                                                              );
                                                                            },
                                                                          ],
                                                                          pX: [
                                                                            yv,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return (
                                                                                e
                                                                                  .viewport
                                                                                  .scale *
                                                                                (c
                                                                                  .a
                                                                                  .isMobile
                                                                                  ? n
                                                                                      .mobile
                                                                                      .x
                                                                                  : n
                                                                                      .desktop
                                                                                      .x)
                                                                              );
                                                                            },
                                                                          ],
                                                                          pY: [
                                                                            yv,
                                                                            function (
                                                                              e,
                                                                            ) {
                                                                              return (
                                                                                e
                                                                                  .viewport
                                                                                  .scale *
                                                                                (c
                                                                                  .a
                                                                                  .isMobile
                                                                                  ? n
                                                                                      .mobile
                                                                                      .y
                                                                                  : n
                                                                                      .desktop
                                                                                      .y)
                                                                              );
                                                                            },
                                                                          ],
                                                                        },
                                                                      },
                                                                    )
                                                                  );
                                                                case 2:
                                                                  return (
                                                                    (i = e.sent),
                                                                    t.object.add(
                                                                      i.object,
                                                                    ),
                                                                    e.abrupt(
                                                                      'return',
                                                                      i,
                                                                    )
                                                                  );
                                                                case 5:
                                                                case 'end':
                                                                  return e.stop();
                                                              }
                                                          },
                                                          e,
                                                        );
                                                      },
                                                    ),
                                                  );
                                                  return function (t) {
                                                    return e.apply(
                                                      this,
                                                      arguments,
                                                    );
                                                  };
                                                })(),
                                              ),
                                            )
                                          );
                                        case 19:
                                          this.symbols = e.sent;
                                        case 20:
                                          this.title.store.compute(function (e) {
                                            var n = yv.state.viewport,
                                              i = n.width,
                                              r = n.height,
                                              o = n.scale,
                                              a =
                                                (e.height,
                                                t.bodyText.props.height),
                                              s =
                                                -0.5 * r +
                                                (t.options.btnLabel
                                                  ? 100 * o
                                                  : 0) +
                                                100 * o,
                                              u = -0.06 * r,
                                              l = s + a + 50 * o;
                                            if (
                                              ((t.title.props.pX = 0.42 * -i),
                                              (t.bodyText.props.pX = 0.42 * -i),
                                              (t.bodyText.props.pY = c.a.isMobile
                                                ? s
                                                : u),
                                              (t.title.props.pY = c.a.isMobile
                                                ? l
                                                : 0),
                                              t.btnCta)
                                            ) {
                                              var p = -0.5 * r + 120 * o,
                                                h = u - a - 50 * o,
                                                f = 0.42 * -i;
                                              (t.btnCta.props.pX = c.a.isMobile
                                                ? 0
                                                : f),
                                                (t.btnCta.props.pY = c.a.isMobile
                                                  ? p
                                                  : h);
                                            }
                                          });
                                        case 21:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              }),
                            );
                            return function () {
                              return e.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'onActive',
                          value: function () {
                            var e = [{}, { delay: 0.8 }],
                              t = [
                                {
                                  delay: 0,
                                  dur: 1.1,
                                  stagger: 0.01,
                                  easeLetter: 'easeOutQuart',
                                  fillDur: 0.5,
                                  fillDelay: 0.4,
                                },
                                { delay: 0.46 },
                              ];
                            if (
                              (this.title.show(this.props.delayed ? e[0] : t[0]),
                              this.bodyText.show(
                                this.props.delayed ? e[1] : t[1],
                              ),
                              this.btnCta)
                            ) {
                              L.b.killTweensOf(this.btnCta.props),
                                L.b.to(this.btnCta.props, 1, {
                                  alpha: 1,
                                  ease: 'easeOutSine',
                                  delay: 0.5,
                                });
                            }
                            this.symbols &&
                              this.symbols.forEach(function (e) {
                                L.b.killTweensOf(e.props),
                                  L.b.to(e.props, 1, {
                                    alpha: 1,
                                    ease: 'easeOutSine',
                                  });
                              });
                          },
                        },
                        {
                          key: 'offActive',
                          value: function () {
                            this.title.hide(),
                              this.bodyText.hide(),
                              this.btnCta &&
                                (L.b.killTweensOf(this.btnCta.props),
                                L.b.to(this.btnCta.props, 0.2, {
                                  alpha: 0,
                                  ease: 'easeOutSine',
                                })),
                              this.symbols &&
                                this.symbols.forEach(function (e) {
                                  L.b.killTweensOf(e.props),
                                    L.b.to(e.props, 0.2, {
                                      alpha: 0,
                                      ease: 'easeOutSine',
                                    });
                                });
                          },
                        },
                      ]) && fv(n.prototype, i),
                      r && fv(n, r),
                      t
                    );
                  })()),
                ) || lv),
            ) || lv;
        function xv(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              i = Object.keys(n);
            'function' == typeof Object.getOwnPropertySymbols &&
              (i = i.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                }),
              )),
              i.forEach(function (t) {
                Pv(e, t, n[t]);
              });
          }
          return e;
        }
        function Pv(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function _v(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function kv(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Ov(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Sv(e) {
          return (Sv = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Tv(e, t) {
          return (Tv =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Av,
          Mv,
          jv,
          Fv,
          Rv = Object(u.a)(),
          Cv =
            Qe(
              (gv =
                Object(it.a)(rt)(
                  ((function (e, t, n, i, r) {
                    var o = {};
                    Object.keys(i).forEach(function (e) {
                      o[e] = i[e];
                    }),
                      (o.enumerable = !!o.enumerable),
                      (o.configurable = !!o.configurable),
                      ('value' in o || o.initializer) && (o.writable = !0),
                      (o = n
                        .slice()
                        .reverse()
                        .reduce(function (n, i) {
                          return i(e, t, n) || n;
                        }, o)),
                      r &&
                        void 0 !== o.initializer &&
                        ((o.value = o.initializer
                          ? o.initializer.call(r)
                          : void 0),
                        (o.initializer = void 0)),
                      void 0 === o.initializer &&
                        (Object.defineProperty(e, t, o), (o = null));
                  })(
                    (bv = (function (e) {
                      function t() {
                        var e, n;
                        !(function (e, t) {
                          if (!(e instanceof t))
                            throw new TypeError(
                              'Cannot call a class as a function',
                            );
                        })(this, t);
                        for (
                          var i = arguments.length, r = new Array(i), o = 0;
                          o < i;
                          o++
                        )
                          r[o] = arguments[o];
                        return (
                          ((n = Ov(
                            this,
                            (e = Sv(t)).call.apply(e, [this].concat(r)),
                          )).options = {}),
                          (n.props = {
                            name: 'Hotspot-Content',
                            visible: !1,
                            v: !1,
                            delayed: !1,
                            currIdx: -1,
                            pointerActive: [
                              Rv,
                              function (e) {
                                return e.pointer.active;
                              },
                            ],
                            viewport: [
                              Rv,
                              function (e) {
                                return s.a.pick(
                                  e.viewport,
                                  'width',
                                  'height',
                                  'scale',
                                );
                              },
                            ],
                          }),
                          n
                        );
                      }
                      var n, i, r;
                      return (
                        (function (e, t) {
                          if ('function' != typeof t && null !== t)
                            throw new TypeError(
                              'Super expression must either be null or a function',
                            );
                          (e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                              value: e,
                              writable: !0,
                              configurable: !0,
                            },
                          })),
                            t && Tv(e, t);
                        })(t, le['a']),
                        (n = t),
                        (i = [
                          {
                            key: 'onSetup',
                            value: (function () {
                              var e,
                                t =
                                  ((e = regeneratorRuntime.mark(function e() {
                                    var t, n, i;
                                    return regeneratorRuntime.wrap(
                                      function (e) {
                                        for (;;)
                                          switch ((e.prev = e.next)) {
                                            case 0:
                                              (t = [
                                                {
                                                  title:
                                                    p[
                                                      'sixth-section-hotspot-sub_one-title'
                                                    ],
                                                  bodyText:
                                                    p[
                                                      'sixth-section-hotspot-sub_one-body'
                                                    ],
                                                },
                                                {
                                                  title:
                                                    p[
                                                      'sixth-section-hotspot-sub_two-title'
                                                    ],
                                                  bodyText:
                                                    p[
                                                      'sixth-section-hotspot-sub_two-body'
                                                    ],
                                                },
                                                {
                                                  title:
                                                    p[
                                                      'sixth-section-hotspot-sub_three-title'
                                                    ],
                                                  bodyText:
                                                    p[
                                                      'sixth-section-hotspot-sub_three-body'
                                                    ],
                                                  btnLabel:
                                                    p[
                                                      'sixth-section-hotspot-sub_three-cta-label'
                                                    ],
                                                  btnLink:
                                                    p[
                                                      'sixth-section-hotspot-sub_three-cta-link'
                                                    ],
                                                  rSymbolPostions: [
                                                    {
                                                      mobile: {
                                                        x: -80.64,
                                                        y: -276.48,
                                                      },
                                                      desktop: {
                                                        x: -412,
                                                        y: 155,
                                                      },
                                                    },
                                                    {
                                                      mobile: {
                                                        x: 339.84,
                                                        y: -276.48,
                                                      },
                                                      desktop: { x: -474, y: 62 },
                                                    },
                                                  ],
                                                },
                                              ]),
                                                (this.object.name = this.props.name),
                                                (this.copyItems = []),
                                                (this.currIdx = -1),
                                                (n = 0);
                                            case 5:
                                              if (!(n < this.options.numItems)) {
                                                e.next = 14;
                                                break;
                                              }
                                              return (
                                                (e.next = 8),
                                                new wv().setup({
                                                  data: t[n],
                                                  options: xv({}, t[n], {
                                                    layer: this.options.layer,
                                                    index: n,
                                                  }),
                                                  props: {
                                                    currIdx: [
                                                      this.store,
                                                      function (e) {
                                                        return e.currIdx;
                                                      },
                                                    ],
                                                  },
                                                })
                                              );
                                            case 8:
                                              (i = e.sent),
                                                this.object.add(i.object),
                                                this.copyItems.push(i);
                                            case 11:
                                              (n += 1), (e.next = 5);
                                              break;
                                            case 14:
                                            case 'end':
                                              return e.stop();
                                          }
                                      },
                                      e,
                                      this,
                                    );
                                  })),
                                  function () {
                                    var t = this,
                                      n = arguments;
                                    return new Promise(function (i, r) {
                                      var o = e.apply(t, n);
                                      function a(e) {
                                        _v(o, i, r, a, s, 'next', e);
                                      }
                                      function s(e) {
                                        _v(o, i, r, a, s, 'throw', e);
                                      }
                                      a(void 0);
                                    });
                                  });
                              return function () {
                                return t.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'onVisible',
                            value: function () {
                              (this.props.v = !0),
                                TweenMax.killTweensOf(this.offVisibleDelayed);
                            },
                          },
                          {
                            key: 'offVisible',
                            value: function () {
                              for (var e = 0; e < this.copyItems.length; e++)
                                this.disableItem(e);
                              (this.props.delayed = !0),
                                TweenMax.delayedCall(2, this.offVisibleDelayed);
                            },
                          },
                          {
                            key: 'offVisibleDelayed',
                            value: function () {
                              this.props.v = !1;
                            },
                          },
                          {
                            key: 'setViewport',
                            value: function (e) {
                              e.width, e.height, e.scale;
                            },
                          },
                          {
                            key: 'enableItem',
                            value: function (e) {
                              (this.copyItems[
                                e
                              ].props.delayed = this.props.delayed),
                                (this.copyItems[e].props.active = !0),
                                (this.props.delayed = !1);
                            },
                          },
                          {
                            key: 'disableItem',
                            value: function (e) {
                              this.copyItems[e].props.active = !1;
                            },
                          },
                          {
                            key: 'onPointerActive',
                            value: function () {
                              if (this.props.visible)
                                for (var e = 0; e < this.copyItems.length; e++)
                                  this.disableItem(e);
                            },
                          },
                          {
                            key: 'offPointerActive',
                            value: function () {
                              this.props.visible && this.displayCurrent();
                            },
                          },
                          {
                            key: 'displayCurrent',
                            value: function () {
                              this.enableItem(this.currIdx);
                            },
                          },
                          {
                            key: 'index',
                            set: function (e) {
                              this.copyItems[this.currIdx] &&
                                e !== this.currIdx &&
                                this.disableItem(this.currIdx),
                                (this.currIdx = e),
                                (this.props.currIdx = this.currIdx);
                            },
                          },
                        ]) && kv(n.prototype, i),
                        r && kv(n, r),
                        t
                      );
                    })()).prototype,
                    'offVisibleDelayed',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      bv.prototype,
                      'offVisibleDelayed',
                    ),
                    bv.prototype,
                  ),
                  (gv = bv)),
                ) || gv),
            ) || gv,
          Ev = n(80);
        function Lv(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function Iv(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Dv(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Iv(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Iv(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Uv(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function zv(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Nv(e) {
          return (Nv = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Bv(e, t) {
          return (Bv =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Vv(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var Yv,
          Hv = { DEFAULT: 'mode:default', HOTSPOT: 'mode:hotspot' },
          Xv = Object(u.a)(),
          Gv =
            ((Av = Object(it.a)(rt)),
            (Mv = Object(X.a)()),
            Av(
              (Vv(
                (Fv = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = zv(
                        this,
                        (e = Nv(t)).call.apply(e, [this].concat(r)),
                      )).options = {}),
                      (n.props = {
                        visible: !1,
                        active: !1,
                        progress: 0,
                        progressHotspot: 0,
                        pointerPosition: [
                          Xv,
                          function (e) {
                            return e.pointer.position;
                          },
                        ],
                        pointerActive: [
                          Xv,
                          function (e) {
                            return e.pointer.active;
                          },
                        ],
                        resolution: [
                          Xv,
                          function (e) {
                            return s.a.pick(e.viewport, 'width', 'height');
                          },
                        ],
                        scale: 1,
                        hotspotKernel: [
                          Xv,
                          function (e) {
                            return e.navigation.hotspotKernel;
                          },
                        ],
                        mode: function (e) {
                          return e.active && e.hotspotKernel
                            ? Hv.HOTSPOT
                            : Hv.DEFAULT;
                        },
                      }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && Bv(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e = Dv(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (this.camera = this.options.camera),
                                          (this.pCoordsStore = [0, 0]),
                                          (this.pCoordsDelta = [0, 0]),
                                          (this.pSpin = 0),
                                          (this.pSpinDelta = 0),
                                          (this.pSpinTg = 0),
                                          (this.pSpinVel = 0),
                                          (this.pSpinStep = 1),
                                          (this.mSpring = 0.02),
                                          (this.mFriction = 0.78),
                                          (this.idxTarget = -1),
                                          (this.idxCurr = -1),
                                          (this.vArbitraryDir = new $e.Vector3(
                                            0,
                                            0,
                                            -1,
                                          )),
                                          (this.resObj = { width: 0, height: 0 }),
                                          (this.kernelCoords = [0, 0]),
                                          (this.props.scale = c.a.isMobile
                                            ? 0.9
                                            : 1),
                                          (e.next = 18),
                                          this.setupKernelObject()
                                        );
                                      case 18:
                                        return (
                                          (e.next = 20), this.setupKernelUI()
                                        );
                                      case 20:
                                        return (
                                          (e.next = 22), this.setupKernelHotspot()
                                        );
                                      case 22:
                                        return (e.next = 24), this.setupSceneUI();
                                      case 24:
                                        return (
                                          (e.next = 26), this.setupSceneContent()
                                        );
                                      case 26:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupKernelObject',
                        value: (function () {
                          var e = Dv(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (e.next = 2),
                                          new ld().setup({
                                            options: {
                                              layer: this.options.layers
                                                .MAIN_LAYER,
                                            },
                                            props: { s: this.props.scale },
                                          })
                                        );
                                      case 2:
                                        (this.kernel = e.sent),
                                          this.object.add(this.kernel.object);
                                      case 4:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupKernelUI',
                        value: (function () {
                          var e = Dv(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (e.next = 2),
                                          new Ad().setup({
                                            options: {
                                              layer: this.options.layers
                                                .MAIN_LAYER,
                                              numItems: 3,
                                            },
                                            props: { s: this.props.scale },
                                          })
                                        );
                                      case 2:
                                        (this.kernelUI = e.sent),
                                          this.object.add(this.kernelUI.object);
                                      case 4:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupKernelHotspot',
                        value: (function () {
                          var e = Dv(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (e.next = 2),
                                          new js().setup({
                                            options: {
                                              text: p['sixth-section-cta'],
                                              layer: this.options.layers.UI_LAYER,
                                            },
                                            props: {
                                              pX: function (e) {
                                                var t =
                                                  e.viewport.width /
                                                  e.viewport.height;
                                                return (
                                                  e.viewport.width *
                                                  (c.a.isMobile ? 0.15 : 0.4) *
                                                  (1 / t)
                                                );
                                              },
                                              pY: function (e) {
                                                e.viewport.width,
                                                  e.viewport.height;
                                                return (
                                                  e.viewport.height *
                                                  (c.a.isMobile ? 0 : 0.24)
                                                );
                                              },
                                              size: function (e) {
                                                var t = e.viewport.scale,
                                                  n =
                                                    (e.viewport.width,
                                                    e.viewport.height,
                                                    (c.a.isMobile ? 290 : 150) *
                                                      Math.max(
                                                        t,
                                                        c.a.isMobile ? 0.2 : 0.62,
                                                      ));
                                                return n;
                                              },
                                            },
                                          })
                                        );
                                      case 2:
                                        (this.kernelHotspot = e.sent),
                                          this.kernelHotspot.on(
                                            'click',
                                            this.onHotspotPointer,
                                          ),
                                          this.object.add(
                                            this.kernelHotspot.object,
                                          );
                                      case 5:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupSceneUI',
                        value: (function () {
                          var e = Dv(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        if (c.a.isMobile) {
                                          e.next = 5;
                                          break;
                                        }
                                        return (
                                          (e.next = 3),
                                          new iv().setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              numItems: 3,
                                            },
                                            props: {},
                                          })
                                        );
                                      case 3:
                                        (this.hotspotIndicator = e.sent),
                                          this.object.add(
                                            this.hotspotIndicator.object,
                                          );
                                      case 5:
                                        return (
                                          (e.next = 7),
                                          new Dd().setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              text: p[
                                                'sixth-section-'.concat(
                                                  c.a.isMobile ? 'spin' : 'drag',
                                                  '-label',
                                                )
                                              ].toUpperCase(),
                                              minAlpha: 1,
                                            },
                                            props: {
                                              fontSize: [
                                                Xv,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 32 : 24) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              width: [
                                                Xv,
                                                function (e) {
                                                  return (
                                                    e.viewport.width *
                                                    (c.a.isMobile ? 0.5 : 0.25)
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 7:
                                        return (
                                          (this.hotspotHelpLabel = e.sent),
                                          this.object.add(
                                            this.hotspotHelpLabel.object,
                                          ),
                                          (e.next = 11),
                                          new ft().setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                            },
                                          })
                                        );
                                      case 11:
                                        return (
                                          (this.hotspotCloseBtn = e.sent),
                                          this.hotspotCloseBtn.store.compute(
                                            function (e) {
                                              (e.pX =
                                                e.viewport.width *
                                                (c.a.isMobile ? 0.4 : 0.46)),
                                                (e.pY =
                                                  0.445 * e.viewport.height +
                                                  (c.a.isMobile
                                                    ? 0
                                                    : -14 * e.viewport.scale));
                                            },
                                          ),
                                          this.object.add(
                                            this.hotspotCloseBtn.object,
                                          ),
                                          (e.next = 16),
                                          new Cv().setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              numItems: 3,
                                            },
                                            props: { visible: !1 },
                                          })
                                        );
                                      case 16:
                                        (this.hotspotContent = e.sent),
                                          this.object.add(
                                            this.hotspotContent.object,
                                          );
                                      case 18:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupSceneContent',
                        value: (function () {
                          var e = Dv(
                            regeneratorRuntime.mark(function e() {
                              var t = this;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (e.next = 2), new yo();
                                      case 2:
                                        return (
                                          (this.title = e.sent),
                                          (e.next = 5),
                                          this.title.setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              text: p['sixth-section-title'],
                                              position:
                                                (c.a.isMobile, 'top-left'),
                                              animationDuration: 1.5,
                                              animationStagger: 0.02,
                                            },
                                            props: {
                                              fontSize: [
                                                Xv,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 110 : 100) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              width: [
                                                Xv,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 920 : 800) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              pX: [
                                                Xv,
                                                function (e) {
                                                  return -0.42 * e.viewport.width;
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 5:
                                        return (
                                          this.object.add(this.title.object),
                                          (e.next = 8),
                                          new Ao()
                                        );
                                      case 8:
                                        return (
                                          (this.bodyText = e.sent),
                                          (e.next = 11),
                                          this.bodyText.setup({
                                            options: {
                                              layer: this.options.layers.UI_LAYER,
                                              position: c.a.isMobile
                                                ? 'bottom-left'
                                                : 'top-left',
                                              text: p['sixth-section-body'],
                                            },
                                            props: {
                                              fontSize: [
                                                Xv,
                                                function (e) {
                                                  return (
                                                    (c.a.isMobile ? 40 : 20) *
                                                    e.viewport.scale
                                                  );
                                                },
                                              ],
                                              width: [
                                                Xv,
                                                function (e) {
                                                  return (
                                                    c.a.isMobile,
                                                    700 * e.viewport.scale
                                                  );
                                                },
                                              ],
                                              pX: [
                                                Xv,
                                                function (e) {
                                                  return (
                                                    e.viewport.width *
                                                    (c.a.isMobile ? -0.18 : -0.42)
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 11:
                                        this.object.add(this.bodyText.object),
                                          this.title.store.compute(function (e) {
                                            var n = Xv.state.viewport,
                                              i = n.height,
                                              r = n.scale,
                                              o = e.height,
                                              a = t.bodyText.props.height,
                                              s = r * (c.a.isMobile ? 80 : 50),
                                              u = o + s + a,
                                              l = 0.6 * u,
                                              p = -o - s + 0.6 * u,
                                              h = 0.35 * i,
                                              f = -0.45 * i;
                                            (t.title.props.pY = c.a.isMobile
                                              ? h
                                              : l),
                                              (t.bodyText.props.pY = c.a.isMobile
                                                ? f
                                                : p);
                                          });
                                      case 13:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'onHotspotKernel',
                        value: function () {
                          c.a.isMobile ||
                            c.a.isTablet ||
                            V().scrollTo(B('result', 0));
                        },
                      },
                      {
                        key: 'onVisible',
                        value: function () {
                          this.kernel.props.visible = !0;
                        },
                      },
                      {
                        key: 'offVisible',
                        value: function () {
                          (this.kernel.props.visible = !1), this.reset();
                        },
                      },
                      {
                        key: 'onActive',
                        value: function () {
                          var e = Xv.state.inPreloader ? 0.88 : 0;
                          this.title.show({ delay: 0.4 + e }),
                            this.bodyText.show({ delay: 0.9 + e }),
                            this.kernelHotspot.show({ delay: 0.2 + e });
                        },
                      },
                      {
                        key: 'offActive',
                        value: function () {
                          this.kernelHotspot.hide(),
                            this.title.hide(),
                            this.bodyText.hide({ delay: 0 });
                        },
                      },
                      {
                        key: 'reset',
                        value: function () {
                          (this.pSpin = 0),
                            (this.pSpinTg = 0),
                            (this.idxTarget = -1),
                            (this.idxCurr = -1),
                            (this.kernel.mesh.rotation.z = 0);
                        },
                      },
                      {
                        key: 'whileVisible',
                        value: function () {
                          this.updateProps(), this.updateSpin();
                        },
                      },
                      {
                        key: 'setResolution',
                        value: function (e) {
                          var t = e.width,
                            n = e.height,
                            i = (this.vw = t),
                            r = (this.vh = n);
                          (this.camera.aspect = t / n),
                            this.camera.updateProjectionMatrix(),
                            (this.resObj = { width: i, height: r }),
                            (this.pSpinStep = i * (c.a.isMobile ? 0.5 : 0.25)),
                            (this.props.pX = c.a.isMobile ? 0 : 2),
                            this.updateKernelCoords(),
                            this.kernelUI &&
                              (this.kernelUI.spinStep = this.pSpinStep);
                        },
                      },
                      {
                        key: 'updateKernelCoords',
                        value: function () {
                          var e = this.vw || Xv.state.viewport.width,
                            t = this.vh || Xv.state.viewport.height,
                            n = pu(0, this.camera, this.vArbitraryDir);
                          (this.kernelCoords = [
                            (e * this.props.pX) / n[0],
                            (t * this.props.pY) / n[1],
                          ]),
                            this.hotspotIndicator &&
                              ((this.hotspotIndicator.props.pX = this.kernelCoords[0]),
                              (this.hotspotIndicator.props.pY = 0.35 * -t)),
                            this.hotspotHelpLabel &&
                              ((this.hotspotHelpLabel.props.pX = c.a.isMobile
                                ? 0
                                : this.kernelCoords[0]),
                              (this.hotspotHelpLabel.props.pY = 0.33 * t));
                        },
                      },
                      {
                        key: 'setMode',
                        value: function () {
                          if (this.props.visible)
                            switch (this.props.mode) {
                              case Hv.DEFAULT:
                                (this.kernelUI.props.visible = !1),
                                  (this.hotspotContent.props.visible = !1),
                                  this.goToIndex(0),
                                  (this.pCoordsDelta[0] = 0),
                                  this.hotspotCloseBtn &&
                                    ((this.hotspotCloseBtn.props.visible = !1),
                                    (this.hotspotCloseBtn.props.cursorDefault =
                                      'default'),
                                    this.hotspotCloseBtn.listeners('click')
                                      .length &&
                                      this.hotspotCloseBtn.off(
                                        'click',
                                        this.onHotspotCloseClick,
                                      )),
                                  this.hotspotIndicator &&
                                    ((this.hotspotIndicator.props.visible = !1),
                                    this.hotspotIndicator.listeners('click')
                                      .length &&
                                      this.hotspotIndicator.off(
                                        'click',
                                        this.onHotspotIndicClick,
                                      )),
                                  this.props.active &&
                                    ((this.kernelHotspot.props.cursorDefault =
                                      'default'),
                                    this.kernelHotspot.show(),
                                    this.title.show({ delay: 0.4 }),
                                    this.bodyText.show({ delay: 0.9 })),
                                  this.hotspotHelpLabel.hide(),
                                  this.animHotspotOut(),
                                  (Xv.state.cursor = 'default');
                                break;
                              case Hv.HOTSPOT:
                                (this.kernelUI.props.visible = !0),
                                  (this.hotspotContent.props.visible = !0),
                                  this.hotspotCloseBtn &&
                                    ((this.hotspotCloseBtn.props.visible = !0),
                                    (this.hotspotCloseBtn.props.cursorDefault =
                                      'grab'),
                                    this.hotspotCloseBtn.on(
                                      'click',
                                      this.onHotspotCloseClick,
                                    )),
                                  this.hotspotIndicator &&
                                    ((this.hotspotIndicator.props.visible = !0),
                                    this.hotspotIndicator.on(
                                      'click',
                                      this.onHotspotIndicClick,
                                    )),
                                  this.hotspotHelpLabel &&
                                    !this.hotspotHelpLabelDisabled &&
                                    this.hotspotHelpLabel.show({ delay: 1 }),
                                  (this.kernelHotspot.props.cursorDefault =
                                    'grab'),
                                  this.kernelHotspot.hide(),
                                  this.title.hide(),
                                  this.bodyText.hide({ delay: 0 }),
                                  this.updateSpinIndexTarget(0),
                                  this.updateSpinIndex(!0),
                                  this.animHotspotIn(),
                                  (Xv.state.cursor = 'grab');
                            }
                        },
                      },
                      {
                        key: 'goToIndex',
                        value: function (e) {
                          this.pSpinTg -=
                            Object(Ev.a)(this.pSpinTg / this.pSpinStep + e, 3) *
                            this.pSpinStep;
                        },
                      },
                      {
                        key: 'onHotspotIndicClick',
                        value: function () {
                          var e = (arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {}
                          ).index;
                          m(
                            'Detail Button Click',
                            'Click',
                            'Kernel hotspot '.concat(e + 1),
                          ),
                            this.goToIndex(e),
                            (this.invalidate = !0);
                        },
                      },
                      {
                        key: 'onHotspotCloseClick',
                        value: function () {
                          Xv.state.navigation.hotspotKernel = !1;
                        },
                      },
                      {
                        key: 'onHotspotPointer',
                        value: function () {
                          Xv.state.navigation.hotspotKernel = !0;
                        },
                      },
                      {
                        key: 'onPointerActive',
                        value: function () {
                          this.props.mode === Hv.HOTSPOT &&
                            ((this.isPointerDown = !0),
                            (this.mSpring = 0.04),
                            (this.mFriction = 0.52),
                            (this.pSpinTg = this.pSpin));
                        },
                      },
                      {
                        key: 'offPointerActive',
                        value: function () {
                          if (this.props.mode === Hv.HOTSPOT) {
                            (this.isPointerDown = !1),
                              (this.mSpring = 0.05),
                              (this.mFriction = 0.68);
                            var e =
                                this.project(2 * this.pSpinVel, 0.95) /
                                this.pSpinStep,
                              t = Math.round(e);
                            Math.sign(t);
                            (this.pSpinTg =
                              0 === t
                                ? Math.floor(
                                    (this.pSpinTg +
                                      this.pSpinDelta +
                                      0.5 * this.pSpinStep) /
                                      this.pSpinStep,
                                  ) * this.pSpinStep
                                : Math.floor(
                                    (this.pSpinTg + 0.5 * this.pSpinStep) /
                                      this.pSpinStep +
                                      t,
                                  ) * this.pSpinStep),
                              (this.pCoordsDelta[0] = 0);
                          }
                        },
                      },
                      {
                        key: 'setPointerPosition',
                        value: function (e) {
                          var t = Lv(e, 2),
                            n = t[0],
                            i = t[1];
                          if (this.props.mode === Hv.HOTSPOT) {
                            var r = [
                              n - this.pCoordsStore[0],
                              i - this.pCoordsStore[1],
                            ];
                            this.isPointerDown &&
                              ((this.pCoordsDelta[0] += r[0]),
                              Math.abs(this.pCoordsDelta[0]) > 10 &&
                                (this.hotspotHelpLabel.hide(),
                                (this.hotspotHelpLabelDisabled = !0))),
                              (this.pCoordsStore = Xv.state.pointer.position);
                          }
                        },
                      },
                      {
                        key: 'animHotspotIn',
                        value: function () {
                          TweenMax.killTweensOf(this.props, {
                            progressHotspot: !0,
                          }),
                            TweenMax.to(this.props, 1.16, {
                              progressHotspot: 1,
                              ease: Power3.easeInOut,
                            });
                        },
                      },
                      {
                        key: 'animHotspotOut',
                        value: function () {
                          TweenMax.killTweensOf(this.props, {
                            progressHotspot: !0,
                          }),
                            TweenMax.to(this.props, 1.3, {
                              progressHotspot: 0,
                              ease: Power2.easeInOut,
                            });
                        },
                      },
                      {
                        key: 'setProgressHotspot',
                        value: function (e) {
                          var t = this.props.progressHotspot;
                          this.kernel.props.progressHotspot = t;
                        },
                      },
                      {
                        key: 'project',
                        value: function (e, t) {
                          return (e * t) / (1 - t);
                        },
                      },
                      {
                        key: 'updateProps',
                        value: function () {
                          var e = c.a.isMobile ? 0 : 2,
                            t = c.a.isMobile ? 0.3 : 0;
                          (this.props.pX = e),
                            (this.props.pY = t),
                            (this.props.pZ = 0);
                        },
                      },
                      {
                        key: 'updateSpin',
                        value: function () {
                          var e = this.mSpring || 0.68,
                            t = this.mFriction || 0.2,
                            n = this.pSpinTg + this.pSpinDelta;
                          (this.pSpinDelta = this.pCoordsDelta[0]),
                            (this.pSpinVel += (n - this.pSpin) * e),
                            (this.pSpinVel *= t),
                            (this.pSpin += this.pSpinVel);
                          var i = this.pSpin / this.pSpinStep,
                            r = (2 * Math.PI) / 3,
                            o = Object(Ev.a)(
                              Math.round(-this.pSpinTg / this.pSpinStep),
                              3,
                            );
                          o !== this.idxTarget && this.updateSpinIndexTarget(o),
                            Math.abs(this.pSpinVel) < 8 &&
                              this.props.mode === Hv.HOTSPOT &&
                              this.updateSpinIndex(),
                            this.kernelUI &&
                              (this.kernelUI.spinProgress = this.pSpin),
                            (this.kernel.mesh.rotation.z = -i * r);
                        },
                      },
                      {
                        key: 'updateSpinIndexTarget',
                        value: function (e) {
                          (this.idxTarget = e),
                            (this.kernelUI.index = e),
                            this.hotspotIndicator &&
                              (this.hotspotIndicator.index = e),
                            this.hotspotContent &&
                              (this.hotspotContent.index = e);
                        },
                      },
                      {
                        key: 'updateSpinIndex',
                        value: function () {
                          var e =
                            arguments.length > 0 &&
                            void 0 !== arguments[0] &&
                            arguments[0];
                          (this.idxCurr !== this.idxTarget || e) &&
                            ((this.idxCurr = this.idxTarget),
                            this.kernelUI.displayCurrent(),
                            this.hotspotIndicator &&
                              this.hotspotIndicator.displayCurrent(),
                            this.hotspotContent &&
                              this.hotspotContent.displayCurrent(),
                            m(
                              'Kernel',
                              'Hotspot change',
                              'Kernel hotspot '.concat(this.idxTarget + 1),
                            ),
                            console.info(
                              '------ SWITCH TO INDEX ------',
                              this.idxTarget,
                            ));
                        },
                      },
                    ]) && Uv(n.prototype, i),
                    r && Uv(n, r),
                    t
                  );
                })()).prototype,
                'goToIndex',
                [X.a],
                Object.getOwnPropertyDescriptor(Fv.prototype, 'goToIndex'),
                Fv.prototype,
              ),
              Vv(
                Fv.prototype,
                'onHotspotIndicClick',
                [Mv],
                Object.getOwnPropertyDescriptor(
                  Fv.prototype,
                  'onHotspotIndicClick',
                ),
                Fv.prototype,
              ),
              Vv(
                Fv.prototype,
                'onHotspotCloseClick',
                [X.a],
                Object.getOwnPropertyDescriptor(
                  Fv.prototype,
                  'onHotspotCloseClick',
                ),
                Fv.prototype,
              ),
              Vv(
                Fv.prototype,
                'onHotspotPointer',
                [X.a],
                Object.getOwnPropertyDescriptor(Fv.prototype, 'onHotspotPointer'),
                Fv.prototype,
              ),
              (jv = Fv)),
            ) || jv);
        n(423);
        function Wv(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {},
              i = Object.keys(n);
            'function' == typeof Object.getOwnPropertySymbols &&
              (i = i.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                  return Object.getOwnPropertyDescriptor(n, e).enumerable;
                }),
              )),
              i.forEach(function (t) {
                Qv(e, t, n[t]);
              });
          }
          return e;
        }
        function Qv(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function qv(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Zv(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                qv(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                qv(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Kv(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function $v(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Jv(e) {
          return (Jv = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function em(e, t) {
          return (em =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var tm = Object(u.a)(),
          nm = 1,
          im = 2,
          rm = 3,
          om =
            Object(it.a)(rt)(
              (Yv = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = $v(
                      this,
                      (e = Jv(t)).call.apply(e, [this].concat(r)),
                    )).options = {
                      layers: { BG_LAYER: nm, MAIN_LAYER: im, UI_LAYER: rm },
                      camera: new $e.PerspectiveCamera(45, 1, 1, 700),
                    }),
                    (n.props = {
                      progress: 0.5,
                      visible: !1,
                      active: function (e) {
                        return e.progress > 0 && e.progress < 0.65;
                      },
                      resolution: [
                        tm,
                        function (e) {
                          return s.a.pick(
                            e.viewport,
                            'width',
                            'height',
                            'pixelRatio',
                          );
                        },
                      ],
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && em(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                        /******** AREAS ********************************************************************************************************************************* */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                        /************************************************************************************************************************************************ */
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e = Zv(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (window.kernelSection = this),
                                        (this.vResolution = new $e.Vector2()),
                                        (e.next = 4),
                                        this.setupScene()
                                      );
                                    case 4:
                                      return (e.next = 6), this.setupBackground();
                                    case 6:
                                      return (
                                        (e.next = 8), this.setupParticleAreas()
                                      );
                                    case 8:
                                      return (e.next = 10), this.setupCamera();
                                    case 10:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupScene',
                      value: (function () {
                        var e = Zv(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (e.next = 2),
                                        new Gv().setup({
                                          options: {
                                            layers: this.options.layers,
                                            camera: this.options.camera,
                                          },
                                        })
                                      );
                                    case 2:
                                      (this.sceneView = e.sent),
                                        this.object.add(this.sceneView.object);
                                    case 4:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupBackground',
                      value: (function () {
                        var e = Zv(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (e.next = 2),
                                        new mf().setup({
                                          options: {
                                            layer: this.options.layers.BG_LAYER,
                                          },
                                          props: {},
                                        })
                                      );
                                    case 2:
                                      (this.kernelBG = e.sent),
                                        this.object.add(this.kernelBG.object);
                                    case 4:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupCamera',
                      value: (function () {
                        var e = Zv(
                          regeneratorRuntime.mark(function e() {
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (e.next = 2),
                                        new cf().setup({
                                          options: {
                                            name: 'Kernel-Camera-Object',
                                            camera: this.options.camera,
                                            scene: this.object,
                                            renderer: Rn().renderer,
                                          },
                                          props: {},
                                        })
                                      );
                                    case 2:
                                      this.cameraController = e.sent;
                                    case 3:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'setupParticleAreas',
                      value: (function () {
                        var e = Zv(
                          regeneratorRuntime.mark(function e() {
                            var t, n, i;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return (
                                        (this.kernelParticlesObject = new $e.Object3D()),
                                        (e.next = 3),
                                        new Ya().setup({
                                          options: {
                                            width: 5,
                                            height: 12,
                                            farMin: 25,
                                            farMax: 40,
                                          },
                                        })
                                      );
                                    case 3:
                                      return (
                                        (this.dofController = e.sent),
                                        (t = this.dofController),
                                        (n = t.dofFocus),
                                        (i = t.dofAmount),
                                        (e.next = 7),
                                        new La().setup({
                                          options: {
                                            dofFocus: n,
                                            dofAmount: i,
                                            layer: this.options.layers.MAIN_LAYER,
                                            resolution: this.vResolution,
                                            renderOrder: 0,
                                          },
                                          props: Wv({}, ed.particlesAreaBack0),
                                        })
                                      );
                                    case 7:
                                      return (
                                        (this.particlesAreaBack0 = e.sent),
                                        this.kernelParticlesObject.add(
                                          this.particlesAreaBack0.object,
                                        ),
                                        (e.next = 11),
                                        new La().setup({
                                          options: {
                                            dofFocus: n,
                                            dofAmount: i,
                                            layer: this.options.layers.MAIN_LAYER,
                                            resolution: this.vResolution,
                                            renderOrder: 0,
                                          },
                                          props: Wv({}, ed.particlesAreaBack1),
                                        })
                                      );
                                    case 11:
                                      return (
                                        (this.particlesAreaBack1 = e.sent),
                                        this.kernelParticlesObject.add(
                                          this.particlesAreaBack1.object,
                                        ),
                                        (e.next = 15),
                                        new La().setup({
                                          options: {
                                            dofFocus: n,
                                            dofAmount: i,
                                            layer: this.options.layers.MAIN_LAYER,
                                            resolution: this.vResolution,
                                            renderOrder: 0,
                                          },
                                          props: Wv({}, ed.particlesAreaBack2),
                                        })
                                      );
                                    case 15:
                                      (this.particlesAreaBack2 = e.sent),
                                        this.kernelParticlesObject.add(
                                          this.particlesAreaBack2.object,
                                        ),
                                        this.object.add(
                                          this.kernelParticlesObject,
                                        );
                                    case 18:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          }),
                        );
                        return function () {
                          return e.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'onVisible',
                      value: function () {
                        (this.object.visible = !0),
                          (this.sceneView.props.visible = !0),
                          (this.cameraController.props.active = !0);
                      },
                    },
                    {
                      key: 'offVisible',
                      value: function () {
                        (this.object.visible = !1),
                          (this.sceneView.props.visible = !1),
                          (this.cameraController.props.active = !1);
                      },
                    },
                    {
                      key: 'onActive',
                      value: function () {
                        this.sceneView.props.active = !0;
                      },
                    },
                    {
                      key: 'offActive',
                      value: function () {
                        this.sceneView.props.active = !1;
                      },
                    },
                    {
                      key: 'whileVisible',
                      value: function () {
                        var e = this.props.progress,
                          t = this.sceneView.props.progressHotspot;
                        this.sceneView && (this.sceneView.props.progress = e),
                          this.kernelBG && (this.kernelBG.props.progress = e),
                          this.cameraController &&
                            (this.cameraController.update(),
                            (this.cameraController.props.progress = e)),
                          (this.kernelParticlesObject.position.z = Object(Jr.a)(
                            t,
                            0,
                            6,
                          ));
                      },
                    },
                    {
                      key: 'setResolution',
                      value: function (e) {
                        var t = e.width,
                          n = e.height;
                        e.pixelRatio;
                        (this.vw = t), (this.vh = n), this.vResolution.set(t, n);
                      },
                    },
                  ]) && Kv(n.prototype, i),
                  r && Kv(n, r),
                  t
                );
              })()),
            ) || Yv,
          am = n(425),
          sm = n.n(am);
        n(426);
        function um(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function lm(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function cm(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function pm(e) {
          return (pm = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function hm(e, t) {
          return (hm =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var fm,
          dm,
          vm = Object(u.a)(),
          mm = (function (e) {
            function t() {
              var e, n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = cm(
                  this,
                  (e = pm(t)).call.apply(e, [this].concat(r)),
                )).el = void 0),
                (n.props = { visible: !1 }),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && hm(e, t);
              })(t, le['a']),
              (n = t),
              (i = [
                {
                  key: 'onSetup',
                  value: (function () {
                    var e,
                      t =
                        ((e = regeneratorRuntime.mark(function e(t) {
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    (this.el = t.parent.appendChild(sm()())),
                                      this.setInitState();
                                  case 2:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        })),
                        function () {
                          var t = this,
                            n = arguments;
                          return new Promise(function (i, r) {
                            var o = e.apply(t, n);
                            function a(e) {
                              um(o, i, r, a, s, 'next', e);
                            }
                            function s(e) {
                              um(o, i, r, a, s, 'throw', e);
                            }
                            a(void 0);
                          });
                        });
                    return function (e) {
                      return t.apply(this, arguments);
                    };
                  })(),
                },
                {
                  key: 'setInitState',
                  value: function () {
                    this.el.style.display = 'none';
                  },
                },
                {
                  key: 'onVisible',
                  value: function () {
                    this.el.style.display = 'block';
                    vm.state.viewport.scale, vm.state.scrollDirection;
                    L.b.killTweensOf(this.el),
                      L.b.set(this.el, { alpha: 0 }),
                      L.b.to(this.el, 2, {
                        alpha: 1,
                        y: 0,
                        ease: 'easeOutExpo',
                        delay: 0.5,
                      });
                  },
                },
                {
                  key: 'offVisible',
                  value: function () {
                    var e = this;
                    vm.state.viewport.scale, vm.state.scrollDirection;
                    L.b.killTweensOf(this.el),
                      L.b.to(this.el, 0.3, {
                        alpha: 0,
                        ease: 'easeInSine',
                        onComplete: function () {
                          e.el.style.display = 'none';
                        },
                      });
                  },
                },
              ]) && lm(n.prototype, i),
              r && lm(n, r),
              t
            );
          })();
        function gm(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function bm(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function ym(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function wm(e) {
          return (wm = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function xm(e, t) {
          return (xm =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Pm,
          _m,
          km = Object(u.a)(),
          Om =
            Object(it.a)(rt)(
              ((function (e, t, n, i, r) {
                var o = {};
                Object.keys(i).forEach(function (e) {
                  o[e] = i[e];
                }),
                  (o.enumerable = !!o.enumerable),
                  (o.configurable = !!o.configurable),
                  ('value' in o || o.initializer) && (o.writable = !0),
                  (o = n
                    .slice()
                    .reverse()
                    .reduce(function (n, i) {
                      return i(e, t, n) || n;
                    }, o)),
                  r &&
                    void 0 !== o.initializer &&
                    ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                    (o.initializer = void 0)),
                  void 0 === o.initializer &&
                    (Object.defineProperty(e, t, o), (o = null));
              })(
                (dm = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = ym(
                        this,
                        (e = wm(t)).call.apply(e, [this].concat(r)),
                      )).data = {}),
                      (n.options = {}),
                      (n.props = {
                        active: !1,
                        render: !1,
                        size: { width: 0, height: 0 },
                        pointerActive: [
                          km,
                          function (e) {
                            return e.pointer.active;
                          },
                        ],
                        pointerPosition: [
                          km,
                          function (e) {
                            return e.pointer.position;
                          },
                        ],
                        rollover: !1,
                      }),
                      (n.anim = { dur: 0, delay: 0 }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && xm(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e,
                            t =
                              ((e = regeneratorRuntime.mark(function e() {
                                var t,
                                  n,
                                  i = this;
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (this.title = new yo()),
                                            (e.next = 3),
                                            this.title.setup({
                                              options: {
                                                interaction: !1,
                                                layer: this.options.layer,
                                                align: 'left',
                                                text: this.options.data.text,
                                                lineWidth: 0.2,
                                              },
                                              props: {
                                                fontSize: [
                                                  km,
                                                  function (e) {
                                                    return (
                                                      (c.a.isMobile ? 70 : 50) *
                                                      e.viewport.scale
                                                    );
                                                  },
                                                ],
                                                width: [
                                                  km,
                                                  function (e) {
                                                    return (
                                                      (c.a.isMobile
                                                        ? 940
                                                        : i.options.data.width +
                                                          50) * e.viewport.scale
                                                    );
                                                  },
                                                ],
                                              },
                                            })
                                          );
                                        case 3:
                                          (t =
                                            'external' === this.options.data.type
                                              ? 'arrow-link-external'
                                              : 'arrow-link'),
                                            (n = Qn(t)),
                                            (this.icon = new $e.Mesh(
                                              et,
                                              new $e.MeshBasicMaterial({
                                                map: n,
                                                transparent: !0,
                                              }),
                                            )),
                                            (this.icon.material.opacity = 0),
                                            this.icon.layers.set(
                                              this.options.layer,
                                            ),
                                            this.title.store.compute(function (
                                              e,
                                            ) {
                                              (i.icon.position.y =
                                                -7 * e.viewport.scale),
                                                i.icon.scale.setScalar(
                                                  e.viewport.scale *
                                                    (c.a.isMobile ? 20 : 10),
                                                );
                                            }),
                                            (this.mask = new $e.Mesh(
                                              et,
                                              new $e.MeshBasicMaterial({
                                                color: 'red',
                                              }),
                                            )),
                                            (this.mask.material.opacity = 0),
                                            (this.mask.position.z = 1),
                                            this.mask.layers.set(
                                              this.options.layer,
                                            ),
                                            (this.hitbox = new $e.Mesh(
                                              et,
                                              new $e.MeshBasicMaterial({
                                                color: 'blue',
                                                transparent: !0,
                                                opacity: 0,
                                              }),
                                            )),
                                            this.hitbox.layers.set(
                                              this.options.layer,
                                            ),
                                            (this.line = new $e.Mesh(
                                              et,
                                              new $e.MeshBasicMaterial({
                                                color: 'white',
                                                blending: $e.AdditiveBlending,
                                                transparent: !0,
                                              }),
                                            )),
                                            this.line.layers.set(
                                              this.options.layer,
                                            ),
                                            (this.line.material.opacity = 0.2),
                                            (this.line.renderOrder = 1),
                                            this.object.add(this.title.object),
                                            this.object.add(this.icon),
                                            this.object.add(this.line),
                                            this.object.add(this.mask),
                                            this.object.add(this.hitbox),
                                            (this.bbox = new $e.Box3()),
                                            this.title.store.compute(function (
                                              e,
                                            ) {
                                              i.props.size = s.a.pick(
                                                e,
                                                'width',
                                                'height',
                                              );
                                            }),
                                            he.on('click', this.setPointerClick);
                                        case 27:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              })),
                              function () {
                                var t = this,
                                  n = arguments;
                                return new Promise(function (i, r) {
                                  var o = e.apply(t, n);
                                  function a(e) {
                                    gm(o, i, r, a, s, 'next', e);
                                  }
                                  function s(e) {
                                    gm(o, i, r, a, s, 'throw', e);
                                  }
                                  a(void 0);
                                });
                              });
                          return function () {
                            return t.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'onActive',
                        value: function () {
                          this.props.render = !0;
                          var e = this.anim.delay;
                          this.title.show({ delay: e }),
                            L.b.killTweensOf(this.line.position),
                            L.b.fromTo(
                              this.line.position,
                              1.5,
                              { x: -this.line.scale.x },
                              { x: 0, ease: 'easeOutExpo', delay: e + 0.2 },
                            ),
                            L.b.killTweensOf(this.icon.material),
                            L.b.to(this.icon.material, 1, {
                              opacity: 1,
                              ease: 'easeOutSine',
                              delay: e + 0.4,
                            });
                        },
                      },
                      {
                        key: 'offActive',
                        value: function () {
                          var e = this;
                          this.props.render &&
                            (this.title.hide(),
                            L.b.killTweensOf(this.line.position),
                            L.b.to(this.line.position, 0.2, {
                              x: -this.line.scale.x,
                              ease: 'easeOutSine',
                            }),
                            L.b.killTweensOf(this.icon.material),
                            L.b.to(this.icon.material, 0.2, {
                              opacity: 0,
                              ease: 'easeOutSine',
                              onComplete: function () {
                                e.props.render = !1;
                              },
                            }));
                        },
                      },
                      {
                        key: 'offPointerActive',
                        value: function () {
                          this.props.rollover = !1;
                        },
                      },
                      {
                        key: 'setPointerClick',
                        value: function () {
                          if (
                            this.props.active &&
                            !km.state.menuStates &&
                            (this.bbox.setFromObject(this.hitbox), Ke(this.bbox))
                          )
                            switch (this.options.data.type) {
                              case 'internal':
                                m(
                                  'CTA Link Click',
                                  'click',
                                  this.options.data.text,
                                ),
                                  (km.state.submenuTriggeredFrom = 'footer'),
                                  (km.state.navigation[
                                    this.options.data.link
                                  ] = !0);
                                break;
                              default:
                                m(
                                  'CTA Link Click',
                                  'click',
                                  this.options.data.text,
                                ),
                                  window.open(this.options.data.link, '_blank');
                            }
                        },
                      },
                      {
                        key: 'setPointerPosition',
                        value: function () {
                          if (
                            this.props.active &&
                            !km.state.menuStates &&
                            !c.a.isMobile
                          ) {
                            this.bbox.setFromObject(this.hitbox);
                            var e = Ke(this.bbox);
                            this.props.rollover = !!e;
                          }
                        },
                      },
                      {
                        key: 'onRollover',
                        value: function () {
                          var e = this;
                          if (this.props.active) {
                            km.state.cursor = 'pointer';
                            var t = 50 * km.state.viewport.scale,
                              n =
                                -this.props.size.width / 2 -
                                50 * km.state.viewport.scale,
                              i = n - 50 * km.state.viewport.scale;
                            L.b.killTweensOf(this.props),
                              L.b.killTweensOf([
                                this.icon.material,
                                this.icon.position,
                              ]),
                              L.b.to(this.props, 1, {
                                pX: t,
                                ease: 'easeOutQuart',
                              }),
                              L.b.to(this.icon.material, 0.3, {
                                opacity: 0,
                                ease: 'easeOutQuart',
                                onComplete: function () {
                                  L.b.set(e.icon.position, { x: i }),
                                    L.b.to(e.icon.material, 0.7, {
                                      opacity: 1,
                                      ease: 'easeOutQuart',
                                    }),
                                    L.b.to(e.icon.position, 0.7, {
                                      x: n,
                                      ease: 'easeOutQuart',
                                    });
                                },
                              });
                          }
                        },
                      },
                      {
                        key: 'offRollover',
                        value: function () {
                          var e = this;
                          if (this.props.active) {
                            km.state.cursor = 'default';
                            km.state.viewport.scale;
                            var t = this.props.size.width / 2,
                              n = t + 50 * km.state.viewport.scale;
                            L.b.killTweensOf(this.props),
                              L.b.killTweensOf([
                                this.icon.material,
                                this.icon.position,
                              ]),
                              L.b.to(this.props, 1, {
                                pX: 0,
                                ease: 'easeOutQuart',
                              }),
                              L.b.to(this.icon.material, 0.3, {
                                opacity: 0,
                                ease: 'easeOutQuart',
                                onComplete: function () {
                                  L.b.set(e.icon.position, { x: n }),
                                    L.b.to(e.icon.material, 0.7, {
                                      opacity: 1,
                                      ease: 'easeOutQuart',
                                    }),
                                    L.b.to(e.icon.position, 0.7, {
                                      x: t,
                                      ease: 'easeOutQuart',
                                    });
                                },
                              });
                          }
                        },
                      },
                      {
                        key: 'setSize',
                        value: function (e) {
                          var t = e.width,
                            n = e.height,
                            i =
                              km.state.viewport.scale * (c.a.isMobile ? 100 : 50);
                          this.line.scale.set(t, 2, 1);
                          var r = this.props.active ? 0 : -t;
                          (this.line.position.y =
                            -n / 2 - i * (c.a.isMobile ? 0.85 : 1.1)),
                            (this.line.position.x = r),
                            (this.mask.position.x = -t),
                            (this.mask.position.y = this.line.position.y),
                            this.mask.scale.set(t, 10, 1),
                            (this.icon.position.x = t / 2),
                            this.hitbox.scale.set(t, n + i, 1);
                        },
                      },
                    ]) && bm(n.prototype, i),
                    r && bm(n, r),
                    t
                  );
                })()).prototype,
                'setPointerClick',
                [X.a],
                Object.getOwnPropertyDescriptor(dm.prototype, 'setPointerClick'),
                dm.prototype,
              ),
              (fm = dm)),
            ) || fm,
          Sm = n(428);
        function Tm(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Am(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Tm(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Tm(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Mm(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function jm(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Fm(e) {
          return (Fm = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Rm(e, t) {
          return (Rm =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Cm(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var Em,
          Lm = Object(u.a)(),
          Im = [
            {
              type: 'internal',
              width: 425,
              link: 'signup',
              text: p['seventh-section-cta_one'],
            },
            {
              type: 'internal',
              width: 750,
              link: 'contact',
              text: p['seventh-section-cta_two'],
            },
            {
              type: 'internal',
              width: 540,
              link: 'legal',
              text: p['seventh-section-cta-legal'],
            },
            {
              type: 'external',
              width: 775,
              link: p['seventh-section-cta_three-link'],
              text: p['seventh-section-cta_three-label'],
            },
            {
              type: 'external',
              width: 430,
              link: p['seventh-section-cta_four-link'],
              text: p['seventh-section-cta_four-label'],
            },
          ],
          Dm =
            Object(it.a)(rt)(
              (Cm(
                (_m = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = jm(
                        this,
                        (e = Fm(t)).call.apply(e, [this].concat(r)),
                      )).el = void 0),
                      (n.totalMenuHeight = 0),
                      (n.options = {}),
                      (n.props = {
                        menu: [
                          Lm,
                          function (e) {
                            return e.navigation.menu;
                          },
                        ],
                        visible: !1,
                        active: function (e) {
                          return e.progress > -0.5 && e.progress < 1;
                        },
                        viewport: [
                          Lm,
                          function (e) {
                            return s.a.pick(
                              e.viewport,
                              'width',
                              'height',
                              'pixelRatio',
                              'scale',
                            );
                          },
                        ],
                        menuLayout: 0,
                        menuStates: [
                          Lm,
                          function (e) {
                            return e.menuStates;
                          },
                        ],
                        scrollDelta: [
                          Lm,
                          function (e) {
                            return e.scrollDelta;
                          },
                        ],
                      }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && Rm(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      { key: 'setScrollDelta', value: function (e) {} },
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e = Am(
                            regeneratorRuntime.mark(function e() {
                              var t;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (this.menuObj = new $e.Object3D()),
                                          this.object.add(this.menuObj),
                                          (e.next = 4),
                                          new na().setup({
                                            options: {
                                              layer: this.options.layers.BG_LAYER,
                                              height: 2,
                                              accent1Position: new $e.Vector2(
                                                0.2,
                                                0.8,
                                              ),
                                              accent2Position: new $e.Vector2(
                                                0.8,
                                                0.2,
                                              ),
                                            },
                                            props: {
                                              baseColor: '#001c0c',
                                              accentColor1: '#0a3a4f',
                                              accentColor2: '#10421a',
                                              pY: [
                                                this.store,
                                                function (e) {
                                                  return Object(o.a)(
                                                    e.progress,
                                                    -1,
                                                    1,
                                                    -e.viewport.height / 2,
                                                    e.viewport.height / 2,
                                                    !0,
                                                  );
                                                },
                                              ],
                                              opacity: [
                                                this.store,
                                                function (e) {
                                                  return Object(o.a)(
                                                    e.progress,
                                                    -0.5,
                                                    0,
                                                    0,
                                                    1,
                                                    !0,
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 4:
                                        return (
                                          (this.bg = e.sent),
                                          this.object.add(this.bg.object),
                                          (e.next = 8),
                                          new La().setup({
                                            options: {
                                              dofFocus: new $e.Vector3(0, 1, 0.5),
                                              dofAmount: new $e.Vector2(10, 15),
                                              layer: this.options.layers
                                                .MAIN_LAYER,
                                              resolution: this.props.resolution,
                                            },
                                            props: Sm.areaBack1,
                                          })
                                        );
                                      case 8:
                                        return (
                                          (this.areaBack1 = e.sent),
                                          this.object.add(this.areaBack1.object),
                                          (this.termsLink = new yi()),
                                          (e.next = 13),
                                          this.termsLink.setup({
                                            options: {
                                              align: c.a.isMobile
                                                ? 'right'
                                                : 'left',
                                              position: c.a.isMobile
                                                ? 'center'
                                                : 'bottom-left',
                                              textTransform: 'uppercase',
                                              layer: this.options.layers.UI_LAYER,
                                              clickable: !0,
                                              text:
                                                p[
                                                  'seventh-section-cta_five-label'
                                                ],
                                            },
                                            props: {
                                              alpha: 0,
                                              width: [
                                                Lm,
                                                function (e) {
                                                  return (
                                                    e.viewport.scale *
                                                    (c.a.isMobile ? 375 : 200)
                                                  );
                                                },
                                              ],
                                              fontSize: [
                                                Lm,
                                                function (e) {
                                                  return (
                                                    e.viewport.scale *
                                                    (c.a.isMobile ? 28 : 16)
                                                  );
                                                },
                                              ],
                                              viewportScale: [
                                                Lm,
                                                function (e) {
                                                  return e.viewport.scale;
                                                },
                                              ],
                                              viewportWidth: [
                                                Lm,
                                                function (e) {
                                                  return e.viewport.width;
                                                },
                                              ],
                                              pX: function (e) {
                                                var t =
                                                    0.42 * e.viewportWidth -
                                                    e.width / 2,
                                                  n = -0.42 * e.viewportWidth;
                                                return c.a.isMobile ? t : n;
                                              },
                                              pY: [
                                                Lm,
                                                function (e) {
                                                  return (
                                                    e.viewport.height *
                                                    (c.a.isMobile ? -0.34 : -0.45)
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 13:
                                        return (
                                          this.object.add(this.termsLink.object),
                                          this.termsLink.on(
                                            'click',
                                            this.onTermsClick,
                                          ),
                                          (this.privacyLink = new yi()),
                                          (e.next = 18),
                                          this.privacyLink.setup({
                                            options: {
                                              align: c.a.isMobile
                                                ? 'right'
                                                : 'left',
                                              position: c.a.isMobile
                                                ? 'center'
                                                : 'bottom-left',
                                              textTransform: 'uppercase',
                                              layer: this.options.layers.UI_LAYER,
                                              clickable: !0,
                                              text:
                                                p[
                                                  'seventh-section-cta_six-label'
                                                ],
                                            },
                                            props: {
                                              alpha: 0,
                                              width: [
                                                Lm,
                                                function (e) {
                                                  return (
                                                    e.viewport.scale *
                                                    (c.a.isMobile ? 400 : 185)
                                                  );
                                                },
                                              ],
                                              fontSize: [
                                                Lm,
                                                function (e) {
                                                  return (
                                                    e.viewport.scale *
                                                    (c.a.isMobile ? 28 : 16)
                                                  );
                                                },
                                              ],
                                              viewportScale: [
                                                Lm,
                                                function (e) {
                                                  return e.viewport.scale;
                                                },
                                              ],
                                              viewportWidth: [
                                                Lm,
                                                function (e) {
                                                  return e.viewport.width;
                                                },
                                              ],
                                              termsWidth: [
                                                this.termsLink.store,
                                                function (e) {
                                                  return e.width;
                                                },
                                              ],
                                              pX: function (e) {
                                                var t =
                                                    0.42 * e.viewportWidth -
                                                    (e.termsWidth + e.width / 2),
                                                  n =
                                                    -0.42 * e.viewportWidth +
                                                    e.termsWidth +
                                                    15 * e.viewportScale;
                                                return c.a.isMobile ? t : n;
                                              },
                                              pY: [
                                                Lm,
                                                function (e) {
                                                  return (
                                                    e.viewport.height *
                                                    (c.a.isMobile ? -0.34 : -0.45)
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 18:
                                        return (
                                          this.object.add(
                                            this.privacyLink.object,
                                          ),
                                          this.privacyLink.on(
                                            'click',
                                            this.onPrivacyClick,
                                          ),
                                          (this.californiaPrivacyLink = new yi()),
                                          (e.next = 23),
                                          this.californiaPrivacyLink.setup({
                                            options: {
                                              align: c.a.isMobile
                                                ? 'right'
                                                : 'left',
                                              position: c.a.isMobile
                                                ? 'center'
                                                : 'bottom-left',
                                              textTransform: 'uppercase',
                                              layer: this.options.layers.UI_LAYER,
                                              clickable: !0,
                                              text:
                                                p[
                                                  'seventh-section-cta_seven-label'
                                                ],
                                            },
                                            props: {
                                              alpha: 0,
                                              width: [
                                                Lm,
                                                function (e) {
                                                  return (
                                                    e.viewport.scale *
                                                    (c.a.isMobile, 300)
                                                  );
                                                },
                                              ],
                                              fontSize: [
                                                Lm,
                                                function (e) {
                                                  return (
                                                    e.viewport.scale *
                                                    (c.a.isMobile ? 28 : 16)
                                                  );
                                                },
                                              ],
                                              viewportScale: [
                                                Lm,
                                                function (e) {
                                                  return e.viewport.scale;
                                                },
                                              ],
                                              viewportWidth: [
                                                Lm,
                                                function (e) {
                                                  return e.viewport.width;
                                                },
                                              ],
                                              termsWidth: [
                                                this.termsLink.store,
                                                function (e) {
                                                  return e.width;
                                                },
                                              ],
                                              privacyWidth: [
                                                this.privacyLink.store,
                                                function (e) {
                                                  return e.width;
                                                },
                                              ],
                                              pX: function (e) {
                                                var t =
                                                    0.42 * e.viewportWidth -
                                                    (e.termsWidth +
                                                      e.privacyWidth +
                                                      20),
                                                  n =
                                                    -0.42 * e.viewportWidth +
                                                    e.termsWidth +
                                                    e.privacyWidth;
                                                return c.a.isMobile ? t : n;
                                              },
                                              pY: [
                                                Lm,
                                                function (e) {
                                                  return (
                                                    e.viewport.height *
                                                    (c.a.isMobile ? -0.34 : -0.45)
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 23:
                                        if (
                                          (this.object.add(
                                            this.californiaPrivacyLink.object,
                                          ),
                                          this.californiaPrivacyLink.on(
                                            'click',
                                            this.onCaliforniaPrivacyClick,
                                          ),
                                          !c.a.isMobile)
                                        ) {
                                          e.next = 32;
                                          break;
                                        }
                                        (t = Qn('corteva-logo')),
                                          (this.cortevaMesh = new $e.Mesh(
                                            et,
                                            new $e.MeshBasicMaterial({
                                              map: t,
                                              transparent: !0,
                                            }),
                                          )),
                                          this.object.add(this.cortevaMesh),
                                          this.cortevaMesh.layers.set(
                                            this.options.layers.UI_LAYER,
                                          ),
                                          (e.next = 35);
                                        break;
                                      case 32:
                                        return (
                                          (e.next = 34),
                                          new mm().setup({
                                            parent: document.querySelector(
                                              '.root',
                                            ),
                                            props: {
                                              visible: [
                                                this.store,
                                                function (e) {
                                                  return (
                                                    (e.progress > 0 &&
                                                      e.progress < 0.5) ||
                                                    e.menu
                                                  );
                                                },
                                              ],
                                            },
                                          })
                                        );
                                      case 34:
                                        this.cortevaLogo = e.sent;
                                      case 35:
                                        return (e.next = 37), this.setupNav();
                                      case 37:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'setupNav',
                        value: (function () {
                          var e = Am(
                            regeneratorRuntime.mark(function e() {
                              var t = this;
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (e.next = 2),
                                          Promise.all(
                                            Im.map(
                                              (function () {
                                                var e = Am(
                                                  regeneratorRuntime.mark(
                                                    function e(n) {
                                                      var i;
                                                      return regeneratorRuntime.wrap(
                                                        function (e) {
                                                          for (;;)
                                                            switch (
                                                              (e.prev = e.next)
                                                            ) {
                                                              case 0:
                                                                return (
                                                                  (e.next = 2),
                                                                  new Om().setup({
                                                                    options: {
                                                                      data: n,
                                                                      layer:
                                                                        t.options
                                                                          .layers
                                                                          .UI_LAYER,
                                                                    },
                                                                  })
                                                                );
                                                              case 2:
                                                                return (
                                                                  (i = e.sent),
                                                                  t.menuObj.add(
                                                                    i.object,
                                                                  ),
                                                                  e.abrupt(
                                                                    'return',
                                                                    i,
                                                                  )
                                                                );
                                                              case 5:
                                                              case 'end':
                                                                return e.stop();
                                                            }
                                                        },
                                                        e,
                                                      );
                                                    },
                                                  ),
                                                );
                                                return function (t) {
                                                  return e.apply(this, arguments);
                                                };
                                              })(),
                                            ),
                                          )
                                        );
                                      case 2:
                                        (this.navItems = e.sent),
                                          this.navItems[0].store.compute(
                                            function (e) {
                                              t.props.menuLayout = e.size;
                                            },
                                          );
                                      case 4:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'onActive',
                        value: function () {
                          this.navItems.forEach(function (e, t) {
                            (e.anim.delay = 0.02 * t + (c.a.isMobile, 0)),
                              (e.props.active = !0);
                          }),
                            (this.termsLink.props.active = !0),
                            L.b.killTweensOf(this.termsLink.props),
                            L.b.to(this.termsLink.props, 1, {
                              alpha: 1,
                              ease: 'easeOutSine',
                              delay: 0.5,
                            }),
                            (this.privacyLink.props.active = !0),
                            L.b.killTweensOf(this.privacyLink.props),
                            L.b.to(this.privacyLink.props, 1, {
                              alpha: 1,
                              ease: 'easeOutSine',
                              delay: 0.5,
                            }),
                            (this.californiaPrivacyLink.props.active = !0),
                            L.b.killTweensOf(this.californiaPrivacyLink.props),
                            L.b.to(this.californiaPrivacyLink.props, 1, {
                              alpha: 1,
                              ease: 'easeOutSine',
                              delay: 0.5,
                            }),
                            this.cortevaMesh &&
                              (L.b.killTweensOf(this.cortevaMesh.material),
                              L.b.to(this.cortevaMesh.material, 1, {
                                opacity: 1,
                                ease: 'easeOutSine',
                                delay: 0.5,
                              }));
                        },
                      },
                      {
                        key: 'offActive',
                        value: function () {
                          this.navItems.forEach(function (e, t) {
                            e.props.active = !1;
                          }),
                            (this.termsLink.props.active = !1),
                            L.b.killTweensOf(this.termsLink.props),
                            L.b.to(this.termsLink.props, 0.5, {
                              alpha: 0,
                              ease: 'easeOutSine',
                            }),
                            (this.privacyLink.props.active = !1),
                            L.b.killTweensOf(this.privacyLink.props),
                            L.b.to(this.privacyLink.props, 0.5, {
                              alpha: 0,
                              ease: 'easeOutSine',
                            }),
                            (this.californiaPrivacyLink.props.active = !1),
                            L.b.killTweensOf(this.californiaPrivacyLink.props),
                            L.b.to(this.californiaPrivacyLink.props, 0.5, {
                              alpha: 0,
                              ease: 'easeOutSine',
                            }),
                            this.cortevaMesh &&
                              (L.b.killTweensOf(this.cortevaMesh.material),
                              L.b.to(this.cortevaMesh.material, 0.5, {
                                opacity: 0,
                                ease: 'easeOutSine',
                              }));
                        },
                      },
                      {
                        key: 'whileVisible',
                        value: function () {
                          var e = Lm.state.viewport.height;
                          (this.areaBack1.props.pY = Object(Jr.a)(
                            this.props.progress,
                            -9,
                            -13,
                          )),
                            (this.areaBack1.props.o = Object(o.a)(
                              this.props.progress,
                              -1,
                              0,
                              0,
                              0.5,
                              !0,
                            ));
                          var t = Object(o.a)(
                              this.props.progress,
                              -0.5,
                              1,
                              -0.5 * e,
                              0.5 * e,
                            ),
                            n = Object(Jr.a)(
                              this.props.progress,
                              -0.3 * e,
                              0.55 * e,
                            );
                          this.menuObj.position.y =
                            this.totalMenuHeight / 2 + (c.a.isMobile ? t : n);
                        },
                      },
                      {
                        key: 'setMenuLayout',
                        value: function () {
                          var e = this,
                            t = Lm.state.viewport,
                            n =
                              (t.width,
                              t.height,
                              t.scale * (c.a.isMobile ? 150 : 100));
                          (this.totalMenuHeight = 0),
                            this.navItems.forEach(function (t) {
                              (t.props.pY =
                                -e.totalMenuHeight - t.props.size.height / 2),
                                (e.totalMenuHeight += t.props.size.height + n);
                            });
                        },
                      },
                      {
                        key: 'onTermsClick',
                        value: function () {
                          m('CTA Link Click', 'click', 'Terms & conditions'),
                            window.open(
                              p['seventh-section-cta_five-link'],
                              '_blank',
                            );
                        },
                      },
                      {
                        key: 'onPrivacyClick',
                        value: function () {
                          m('CTA Link Click', 'click', 'Privacy policy'),
                            window.open(
                              p['seventh-section-cta_six-link'],
                              '_blank',
                            );
                        },
                      },
                      {
                        key: 'onCaliforniaPrivacyClick',
                        value: function () {
                          m(
                            'CTA Link Click',
                            'click',
                            'California Privacy Rights',
                          ),
                            window.open(
                              p['seventh-section-cta_seven-link'],
                              '_blank',
                            );
                        },
                      },
                      {
                        key: 'setViewport',
                        value: function (e) {
                          var t = e.width,
                            n = e.height,
                            i = (e.pixelRatio, e.scale);
                          if (this.cortevaMesh) {
                            var r = i * (c.a.isMobile ? 400 : 100);
                            this.cortevaMesh.scale.set(r, r, 1),
                              (this.cortevaMesh.position.x = 0.42 * t - r / 2),
                              (this.cortevaMesh.position.y = -0.41 * n);
                          }
                        },
                      },
                    ]) && Mm(n.prototype, i),
                    r && Mm(n, r),
                    t
                  );
                })()).prototype,
                'onTermsClick',
                [X.a],
                Object.getOwnPropertyDescriptor(_m.prototype, 'onTermsClick'),
                _m.prototype,
              ),
              Cm(
                _m.prototype,
                'onPrivacyClick',
                [X.a],
                Object.getOwnPropertyDescriptor(_m.prototype, 'onPrivacyClick'),
                _m.prototype,
              ),
              Cm(
                _m.prototype,
                'onCaliforniaPrivacyClick',
                [X.a],
                Object.getOwnPropertyDescriptor(
                  _m.prototype,
                  'onCaliforniaPrivacyClick',
                ),
                _m.prototype,
              ),
              (Pm = _m)),
            ) || Pm;
        function Um(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function zm(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Nm(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Bm(e) {
          return (Bm = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Vm(e, t) {
          return (Vm =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Ym = Object(u.a)(),
          Hm =
            Object(it.a)($r)(
              (Em =
                Object(it.a)(
                  c.a.isSandbox
                    ? Object(Ri.a)({ without: 'dofController' })
                    : null,
                )(
                  (Em = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = Nm(
                          this,
                          (e = Bm(t)).call.apply(e, [this].concat(r)),
                        )).options = { postProcessingMaterial: new ef() }),
                        (n.props = {
                          resolution: [
                            Ym,
                            function (e) {
                              var t = e.viewport;
                              return {
                                width: t.width,
                                height: t.height,
                                pixelRatio: t.pixelRatio,
                              };
                            },
                          ],
                          slope: [
                            Ym,
                            function (e) {
                              return (1 / 3) * e.maxSlope;
                            },
                          ],
                          appStart: [
                            Ym,
                            function (e) {
                              return e.started;
                            },
                          ],
                          progress: 0,
                          progressIn: 0,
                          active: !1,
                          visible: !1,
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && Vm(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e,
                              t =
                                ((e = regeneratorRuntime.mark(function e() {
                                  var t;
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (this.resolution = new $e.Vector2()),
                                              (t = this.resolution),
                                              (this.tweenObj = { pIn: 0 }),
                                              (e.next = 5),
                                              new om().setup({
                                                options: {
                                                  camera: this.camera,
                                                  layers: {
                                                    BG_LAYER: 1,
                                                    MAIN_LAYER: 2,
                                                    UI_LAYER: 3,
                                                  },
                                                  resolution: t,
                                                },
                                                props: {
                                                  progress: [
                                                    this.store,
                                                    function (e) {
                                                      return Object(o.a)(
                                                        e.progress,
                                                        0,
                                                        1 / 1.7,
                                                        0,
                                                        1,
                                                      );
                                                    },
                                                  ],
                                                },
                                              })
                                            );
                                          case 5:
                                            return (
                                              (this.kernel = e.sent),
                                              this.scene.add(this.kernel.object),
                                              (e.next = 9),
                                              new Dm().setup({
                                                options: {
                                                  layers: {
                                                    BG_LAYER: 1,
                                                    MAIN_LAYER: 2,
                                                    UI_LAYER: 3,
                                                  },
                                                  resolution: t,
                                                },
                                                props: {
                                                  resolution: this.resolution,
                                                  progress: [
                                                    this.store,
                                                    function (e) {
                                                      return Object(o.a)(
                                                        e.progress,
                                                        1 / 1.7,
                                                        1,
                                                        0,
                                                        1,
                                                      );
                                                    },
                                                  ],
                                                },
                                              })
                                            );
                                          case 9:
                                            (this.footer = e.sent),
                                              this.scene.add(this.footer.object);
                                          case 11:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                })),
                                function () {
                                  var t = this,
                                    n = arguments;
                                  return new Promise(function (i, r) {
                                    var o = e.apply(t, n);
                                    function a(e) {
                                      Um(o, i, r, a, s, 'next', e);
                                    }
                                    function s(e) {
                                      Um(o, i, r, a, s, 'throw', e);
                                    }
                                    a(void 0);
                                  });
                                });
                            return function () {
                              return t.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'preCompile',
                          value: function (e) {
                            var t = e.renderer,
                              n = e.ortho;
                            t.compile(this.scene, n),
                              t.compile(this.scene, this.camera);
                          },
                        },
                        {
                          key: 'onVisible',
                          value: function () {
                            (this.kernel.props.visible = !0),
                              (this.footer.props.visible = !0),
                              Ym.state.inPreloader || (this.tweenObj.pIn = 1),
                              this.scene.updateMatrixWorld();
                          },
                        },
                        {
                          key: 'offVisible',
                          value: function () {
                            (this.kernel.props.visible = !1),
                              (this.footer.props.visible = !1);
                          },
                        },
                        {
                          key: 'onActive',
                          value: function () {
                            Ym.state.inPreloader
                              ? ((this.tweenObj.pIn = 0),
                                TweenMax.to(this.tweenObj, 3, {
                                  pIn: 1,
                                  ease: 'easeOutQuint',
                                  delay: 1,
                                }))
                              : (this.tweenObj.pIn = 1);
                          },
                        },
                        { key: 'offActive', value: function () {} },
                        {
                          key: 'whileVisible',
                          value: function () {
                            var e = this.tweenObj;
                            this.options.postProcessingMaterial.inProgress =
                              e.pIn;
                          },
                        },
                        {
                          key: 'render',
                          value: function (e) {
                            var t = e.renderer,
                              n = e.ortho;
                            n.layers.set(1),
                              t.render(this.scene, n),
                              t.clearDepth(),
                              this.camera.layers.set(2),
                              t.render(this.scene, this.camera);
                          },
                        },
                        {
                          key: 'renderUi',
                          value: function (e) {
                            var t = e.renderer,
                              n = e.ortho;
                            e.target;
                            n.layers.set(3), t.render(this.scene, n);
                          },
                        },
                        {
                          key: 'setResolution',
                          value: function (e) {
                            var t = e.width,
                              n = e.height,
                              i = e.pixelRatio;
                            this.resolution.set((t * i) / 2, (n * i) / 2),
                              this.options.postProcessingMaterial.resolution.set(
                                t * i,
                                n * i,
                              );
                          },
                        },
                        {
                          key: 'setProgressIn',
                          value: function (e) {
                            this.tweenObj.pIn = e;
                          },
                        },
                      ]) && zm(n.prototype, i),
                      r && zm(n, r),
                      t
                    );
                  })()),
                ) || Em),
            ) || Em,
          Xm = function (e, t) {
            var n, i, r, o, a;
            (this.object = e),
              (this.domElement = void 0 !== t ? t : document),
              (this.enabled = !0),
              (this.target = new $e.Vector3()),
              (this.minDistance = 0),
              (this.maxDistance = 1 / 0),
              (this.minZoom = 0),
              (this.maxZoom = 1 / 0),
              (this.minPolarAngle = 0),
              (this.maxPolarAngle = Math.PI),
              (this.minAzimuthAngle = -1 / 0),
              (this.maxAzimuthAngle = 1 / 0),
              (this.enableDamping = !1),
              (this.dampingFactor = 0.25),
              (this.enableZoom = !0),
              (this.zoomSpeed = 1),
              (this.enableRotate = !0),
              (this.rotateSpeed = 1),
              (this.enablePan = !0),
              (this.keyPanSpeed = 7),
              (this.autoRotate = !1),
              (this.autoRotateSpeed = 2),
              (this.enableKeys = !0),
              (this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }),
              (this.mouseButtons = {
                ORBIT: $e.MOUSE.LEFT,
                ZOOM: $e.MOUSE.MIDDLE,
                PAN: $e.MOUSE.RIGHT,
              }),
              (this.target0 = this.target.clone()),
              (this.position0 = this.object.position.clone()),
              (this.zoom0 = this.object.zoom),
              (this.getPolarAngle = function () {
                return d.phi;
              }),
              (this.getAzimuthalAngle = function () {
                return d.theta;
              }),
              (this.saveState = function () {
                s.target0.copy(s.target),
                  s.position0.copy(s.object.position),
                  (s.zoom0 = s.object.zoom);
              }),
              (this.reset = function () {
                s.target.copy(s.target0),
                  s.object.position.copy(s.position0),
                  (s.object.zoom = s.zoom0),
                  s.object.updateProjectionMatrix(),
                  s.dispatchEvent(u),
                  s.update(),
                  (h = p.NONE);
              }),
              (this.update =
                ((n = new $e.Vector3()),
                (i = new $e.Quaternion().setFromUnitVectors(
                  e.up,
                  new $e.Vector3(0, 1, 0),
                )),
                (r = i.clone().inverse()),
                (o = new $e.Vector3()),
                (a = new $e.Quaternion()),
                function () {
                  var e = s.object.position;
                  return (
                    n.copy(e).sub(s.target),
                    n.applyQuaternion(i),
                    d.setFromVector3(n),
                    s.autoRotate &&
                      h === p.NONE &&
                      M(((2 * Math.PI) / 60 / 60) * s.autoRotateSpeed),
                    (d.theta += v.theta),
                    (d.phi += v.phi),
                    (d.theta = Math.max(
                      s.minAzimuthAngle,
                      Math.min(s.maxAzimuthAngle, d.theta),
                    )),
                    (d.phi = Math.max(
                      s.minPolarAngle,
                      Math.min(s.maxPolarAngle, d.phi),
                    )),
                    d.makeSafe(),
                    (d.radius *= m),
                    (d.radius = Math.max(
                      s.minDistance,
                      Math.min(s.maxDistance, d.radius),
                    )),
                    s.target.add(g),
                    n.setFromSpherical(d),
                    n.applyQuaternion(r),
                    e.copy(s.target).add(n),
                    s.object.lookAt(s.target),
                    !0 === s.enableDamping
                      ? ((v.theta *= 1 - s.dampingFactor),
                        (v.phi *= 1 - s.dampingFactor))
                      : v.set(0, 0, 0),
                    (m = 1),
                    g.set(0, 0, 0),
                    !!(
                      b ||
                      o.distanceToSquared(s.object.position) > f ||
                      8 * (1 - a.dot(s.object.quaternion)) > f
                    ) &&
                      (s.dispatchEvent(u),
                      o.copy(s.object.position),
                      a.copy(s.object.quaternion),
                      (b = !1),
                      !0)
                  );
                })),
              (this.dispose = function () {
                s.domElement.removeEventListener('contextmenu', X, !1),
                  s.domElement.removeEventListener('mousedown', D, !1),
                  s.domElement.removeEventListener('wheel', N, !1),
                  s.domElement.removeEventListener('touchstart', V, !1),
                  s.domElement.removeEventListener('touchend', H, !1),
                  s.domElement.removeEventListener('touchmove', Y, !1),
                  document.removeEventListener('mousemove', U, !1),
                  document.removeEventListener('mouseup', z, !1),
                  window.removeEventListener('keydown', B, !1);
              });
            var s = this,
              u = { type: 'change' },
              l = { type: 'start' },
              c = { type: 'end' },
              p = {
                NONE: -1,
                ROTATE: 0,
                DOLLY: 1,
                PAN: 2,
                TOUCH_ROTATE: 3,
                TOUCH_DOLLY: 4,
                TOUCH_PAN: 5,
              },
              h = p.NONE,
              f = 1e-6,
              d = new $e.Spherical(),
              v = new $e.Spherical(),
              m = 1,
              g = new $e.Vector3(),
              b = !1,
              y = new $e.Vector2(),
              w = new $e.Vector2(),
              x = new $e.Vector2(),
              P = new $e.Vector2(),
              _ = new $e.Vector2(),
              k = new $e.Vector2(),
              O = new $e.Vector2(),
              S = new $e.Vector2(),
              T = new $e.Vector2();
            function A() {
              return Math.pow(0.95, s.zoomSpeed);
            }
            function M(e) {
              v.theta -= e;
            }
            function j(e) {
              v.phi -= e;
            }
            var F,
              R =
                ((F = new $e.Vector3()),
                function (e, t) {
                  F.setFromMatrixColumn(t, 0), F.multiplyScalar(-e), g.add(F);
                }),
              C = (function () {
                var e = new $e.Vector3();
                return function (t, n) {
                  e.setFromMatrixColumn(n, 1), e.multiplyScalar(t), g.add(e);
                };
              })(),
              E = (function () {
                var e = new $e.Vector3();
                return function (t, n) {
                  var i =
                    s.domElement === document ? s.domElement.body : s.domElement;
                  if (s.object.isPerspectiveCamera) {
                    var r = s.object.position;
                    e.copy(r).sub(s.target);
                    var o = e.length();
                    (o *= Math.tan(((s.object.fov / 2) * Math.PI) / 180)),
                      R((2 * t * o) / i.clientHeight, s.object.matrix),
                      C((2 * n * o) / i.clientHeight, s.object.matrix);
                  } else
                    s.object.isOrthographicCamera
                      ? (R(
                          (t * (s.object.right - s.object.left)) /
                            s.object.zoom /
                            i.clientWidth,
                          s.object.matrix,
                        ),
                        C(
                          (n * (s.object.top - s.object.bottom)) /
                            s.object.zoom /
                            i.clientHeight,
                          s.object.matrix,
                        ))
                      : (console.warn(
                          'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.',
                        ),
                        (s.enablePan = !1));
                };
              })();
            function L(e) {
              s.object.isPerspectiveCamera
                ? (m /= e)
                : s.object.isOrthographicCamera
                ? ((s.object.zoom = Math.max(
                    s.minZoom,
                    Math.min(s.maxZoom, s.object.zoom * e),
                  )),
                  s.object.updateProjectionMatrix(),
                  (b = !0))
                : (console.warn(
                    'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.',
                  ),
                  (s.enableZoom = !1));
            }
            function I(e) {
              s.object.isPerspectiveCamera
                ? (m *= e)
                : s.object.isOrthographicCamera
                ? ((s.object.zoom = Math.max(
                    s.minZoom,
                    Math.min(s.maxZoom, s.object.zoom / e),
                  )),
                  s.object.updateProjectionMatrix(),
                  (b = !0))
                : (console.warn(
                    'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.',
                  ),
                  (s.enableZoom = !1));
            }
            function D(e) {
              if (!1 !== s.enabled) {
                switch ((e.preventDefault(), e.button)) {
                  case s.mouseButtons.ORBIT:
                    if (!1 === s.enableRotate) return;
                    !(function (e) {
                      y.set(e.clientX, e.clientY);
                    })(e),
                      (h = p.ROTATE);
                    break;
                  case s.mouseButtons.ZOOM:
                    if (!1 === s.enableZoom) return;
                    !(function (e) {
                      O.set(e.clientX, e.clientY);
                    })(e),
                      (h = p.DOLLY);
                    break;
                  case s.mouseButtons.PAN:
                    if (!1 === s.enablePan) return;
                    !(function (e) {
                      P.set(e.clientX, e.clientY);
                    })(e),
                      (h = p.PAN);
                }
                h !== p.NONE &&
                  (document.addEventListener('mousemove', U, !1),
                  document.addEventListener('mouseup', z, !1),
                  s.dispatchEvent(l));
              }
            }
            function U(e) {
              if (!1 !== s.enabled)
                switch ((e.preventDefault(), h)) {
                  case p.ROTATE:
                    if (!1 === s.enableRotate) return;
                    !(function (e) {
                      w.set(e.clientX, e.clientY), x.subVectors(w, y);
                      var t =
                        s.domElement === document
                          ? s.domElement.body
                          : s.domElement;
                      M(((2 * Math.PI * x.x) / t.clientWidth) * s.rotateSpeed),
                        j(((2 * Math.PI * x.y) / t.clientHeight) * s.rotateSpeed),
                        y.copy(w),
                        s.update();
                    })(e);
                    break;
                  case p.DOLLY:
                    if (!1 === s.enableZoom) return;
                    !(function (e) {
                      S.set(e.clientX, e.clientY),
                        T.subVectors(S, O),
                        T.y > 0 ? L(A()) : T.y < 0 && I(A()),
                        O.copy(S),
                        s.update();
                    })(e);
                    break;
                  case p.PAN:
                    if (!1 === s.enablePan) return;
                    !(function (e) {
                      _.set(e.clientX, e.clientY),
                        k.subVectors(_, P),
                        E(k.x, k.y),
                        P.copy(_),
                        s.update();
                    })(e);
                }
            }
            function z(e) {
              !1 !== s.enabled &&
                (document.removeEventListener('mousemove', U, !1),
                document.removeEventListener('mouseup', z, !1),
                s.dispatchEvent(c),
                (h = p.NONE));
            }
            function N(e) {
              !1 === s.enabled ||
                !1 === s.enableZoom ||
                (h !== p.NONE && h !== p.ROTATE) ||
                (e.preventDefault(),
                e.stopPropagation(),
                (function (e) {
                  e.deltaY < 0 ? I(A()) : e.deltaY > 0 && L(A()), s.update();
                })(e),
                s.dispatchEvent(l),
                s.dispatchEvent(c));
            }
            function B(e) {
              !1 !== s.enabled &&
                !1 !== s.enableKeys &&
                !1 !== s.enablePan &&
                (function (e) {
                  switch (e.keyCode) {
                    case s.keys.UP:
                      E(0, s.keyPanSpeed), s.update();
                      break;
                    case s.keys.BOTTOM:
                      E(0, -s.keyPanSpeed), s.update();
                      break;
                    case s.keys.LEFT:
                      E(s.keyPanSpeed, 0), s.update();
                      break;
                    case s.keys.RIGHT:
                      E(-s.keyPanSpeed, 0), s.update();
                  }
                })(e);
            }
            function V(e) {
              if (!1 !== s.enabled) {
                switch (e.touches.length) {
                  case 1:
                    if (!1 === s.enableRotate) return;
                    !(function (e) {
                      y.set(e.touches[0].pageX, e.touches[0].pageY);
                    })(e),
                      (h = p.TOUCH_ROTATE);
                    break;
                  case 2:
                    if (!1 === s.enableZoom) return;
                    !(function (e) {
                      var t = e.touches[0].pageX - e.touches[1].pageX,
                        n = e.touches[0].pageY - e.touches[1].pageY,
                        i = Math.sqrt(t * t + n * n);
                      O.set(0, i);
                    })(e),
                      (h = p.TOUCH_DOLLY);
                    break;
                  case 3:
                    if (!1 === s.enablePan) return;
                    !(function (e) {
                      P.set(e.touches[0].pageX, e.touches[0].pageY);
                    })(e),
                      (h = p.TOUCH_PAN);
                    break;
                  default:
                    h = p.NONE;
                }
                h !== p.NONE && s.dispatchEvent(l);
              }
            }
            function Y(e) {
              if (!1 !== s.enabled)
                switch (
                  (e.preventDefault(), e.stopPropagation(), e.touches.length)
                ) {
                  case 1:
                    if (!1 === s.enableRotate) return;
                    if (h !== p.TOUCH_ROTATE) return;
                    !(function (e) {
                      w.set(e.touches[0].pageX, e.touches[0].pageY),
                        x.subVectors(w, y);
                      var t =
                        s.domElement === document
                          ? s.domElement.body
                          : s.domElement;
                      M(((2 * Math.PI * x.x) / t.clientWidth) * s.rotateSpeed),
                        j(((2 * Math.PI * x.y) / t.clientHeight) * s.rotateSpeed),
                        y.copy(w),
                        s.update();
                    })(e);
                    break;
                  case 2:
                    if (!1 === s.enableZoom) return;
                    if (h !== p.TOUCH_DOLLY) return;
                    !(function (e) {
                      var t = e.touches[0].pageX - e.touches[1].pageX,
                        n = e.touches[0].pageY - e.touches[1].pageY,
                        i = Math.sqrt(t * t + n * n);
                      S.set(0, i),
                        T.subVectors(S, O),
                        T.y > 0 ? I(A()) : T.y < 0 && L(A()),
                        O.copy(S),
                        s.update();
                    })(e);
                    break;
                  case 3:
                    if (!1 === s.enablePan) return;
                    if (h !== p.TOUCH_PAN) return;
                    !(function (e) {
                      _.set(e.touches[0].pageX, e.touches[0].pageY),
                        k.subVectors(_, P),
                        E(k.x, k.y),
                        P.copy(_),
                        s.update();
                    })(e);
                    break;
                  default:
                    h = p.NONE;
                }
            }
            function H(e) {
              !1 !== s.enabled && (s.dispatchEvent(c), (h = p.NONE));
            }
            function X(e) {
              !1 !== s.enabled && e.preventDefault();
            }
            s.domElement.addEventListener('contextmenu', X, !1),
              s.domElement.addEventListener('mousedown', D, !1),
              s.domElement.addEventListener('wheel', N, !1),
              s.domElement.addEventListener('touchstart', V, !1),
              s.domElement.addEventListener('touchend', H, !1),
              s.domElement.addEventListener('touchmove', Y, !1),
              window.addEventListener('keydown', B, !1),
              this.update();
          };
        ((Xm.prototype = Object.create(
          $e.EventDispatcher.prototype,
        )).constructor = Xm),
          Object.defineProperties(Xm.prototype, {
            center: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .center has been renamed to .target',
                  ),
                  this.target
                );
              },
            },
            noZoom: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.',
                  ),
                  !this.enableZoom
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.',
                ),
                  (this.enableZoom = !e);
              },
            },
            noRotate: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.',
                  ),
                  !this.enableRotate
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.',
                ),
                  (this.enableRotate = !e);
              },
            },
            noPan: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.',
                  ),
                  !this.enablePan
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.',
                ),
                  (this.enablePan = !e);
              },
            },
            noKeys: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.',
                  ),
                  !this.enableKeys
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.',
                ),
                  (this.enableKeys = !e);
              },
            },
            staticMoving: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.',
                  ),
                  !this.enableDamping
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.',
                ),
                  (this.enableDamping = !e);
              },
            },
            dynamicDampingFactor: {
              get: function () {
                return (
                  console.warn(
                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.',
                  ),
                  this.dampingFactor
                );
              },
              set: function (e) {
                console.warn(
                  'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.',
                ),
                  (this.dampingFactor = e);
              },
            },
          });
        var Gm = Xm;
        function Wm(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Qm(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function qm(e) {
          return (qm = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Zm(e, t) {
          return (Zm =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Km = (function (e) {
          function t(e, n) {
            var i;
            return (
              (function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t),
              ((i = Qm(this, qm(t).call(this, e))).args = n),
              (i.customUniforms = n.uniforms),
              i
            );
          }
          var n, i, r;
          return (
            (function (e, t) {
              if ('function' != typeof t && null !== t)
                throw new TypeError(
                  'Super expression must either be null or a function',
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: { value: e, writable: !0, configurable: !0 },
              })),
                t && Zm(e, t);
            })(t, $e['MeshStandardMaterial']),
            (n = t),
            (i = [
              {
                key: 'onBeforeCompile',
                value: function (e) {
                  this.updateUniforms(e),
                    this.args.fragmentShader &&
                      (e.fragmentShader = this.insertAfter(
                        e.fragmentShader,
                        'map_fragment',
                        this.args.fragmentShader,
                      )),
                    this.args.vertexShader &&
                      (e.vertexShader = this.insertAfter(
                        e.vertexShader,
                        'clipping_planes_vertex',
                        this.args.vertexShader,
                      ));
                },
              },
              {
                key: 'updateUniforms',
                value: function (e) {
                  var t = '';
                  Object.entries(this.customUniforms).forEach(function (n) {
                    (e.uniforms[n[0]] = n[1]),
                      (t +=
                        (n[1].varType || 'uniform ') +
                        ''.concat(n[1].type, ' ').concat(n[0], ';\n'));
                  }),
                    (e.fragmentShader = t + e.fragmentShader),
                    (e.vertexShader = t + e.vertexShader);
                },
              },
              {
                key: 'insertAfter',
                value: function (e, t, n) {
                  return e.replace(
                    '#include <'.concat(t, '>'),
                    '#include <'.concat(t, '>\n').concat(n),
                  );
                },
              },
              {
                key: 'replaceChunk',
                value: function (e, t, n) {
                  return e.replace('#include <'.concat(t, '>'), n);
                },
              },
            ]) && Wm(n.prototype, i),
            r && Wm(n, r),
            t
          );
        })();
        function $m(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Jm(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function eg(e) {
          return (eg = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function tg(e, t) {
          return (tg =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var ng = (function (e) {
            function t(e, n) {
              var i;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                ((i = Jm(this, eg(t).call(this, e))).args = n),
                (i.customUniforms = n.uniforms),
                i
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && tg(e, t);
              })(t, $e['MeshBasicMaterial']),
              (n = t),
              (i = [
                {
                  key: 'onBeforeCompile',
                  value: function (e) {
                    this.updateUniforms(e),
                      this.args.fragmentShader &&
                        (e.fragmentShader = this.insertAfter(
                          e.fragmentShader,
                          'map_fragment',
                          this.args.fragmentShader,
                        )),
                      this.args.vertexShader &&
                        (e.vertexShader = this.insertAfter(
                          e.vertexShader,
                          'clipping_planes_vertex',
                          this.args.vertexShader,
                        ));
                  },
                },
                {
                  key: 'updateUniforms',
                  value: function (e) {
                    var t = '';
                    Object.entries(this.customUniforms).forEach(function (n) {
                      (e.uniforms[n[0]] = n[1]),
                        (t +=
                          (n[1].varType || 'uniform ') +
                          ''.concat(n[1].type, ' ').concat(n[0], ';\n'));
                    }),
                      (e.fragmentShader = t + e.fragmentShader),
                      (e.vertexShader = t + e.vertexShader);
                  },
                },
                {
                  key: 'insertAfter',
                  value: function (e, t, n) {
                    return e.replace(
                      '#include <'.concat(t, '>'),
                      '#include <'.concat(t, '>\n').concat(n),
                    );
                  },
                },
                {
                  key: 'replaceChunk',
                  value: function (e, t, n) {
                    return e.replace('#include <'.concat(t, '>'), n);
                  },
                },
              ]) && $m(n.prototype, i),
              r && $m(n, r),
              t
            );
          })(),
          ig =
            '#define GLSLIFY 1\nattribute vec3 mcol0;\nattribute vec3 mcol1;\nattribute vec3 mcol2;\nattribute vec3 mcol3;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n    vUv = uv;\n\n    mat4 matrix = mat4(\n        vec4( mcol0, 0 ),\n        vec4( mcol1, 0 ),\n        vec4( mcol2, 0 ),\n        vec4( mcol3, 1 )\n    );\n\n    vec3 positionEye = ( modelViewMatrix * matrix * vec4( position, 1.0 ) ).xyz;\n    gl_Position = projectionMatrix * vec4( positionEye, 1.0 );\n}\n',
          rg =
            '#define GLSLIFY 1\nvoid main() {\n\tgl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n}\n';
        function og(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function ag(e) {
          return (ag = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function sg(e, t) {
          return (sg =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var ug = (function (e) {
          function t() {
            var e,
              n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
            return (
              (function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t),
              ((e = og(this, ag(t).call(this, n))).type =
                'ParticlesBasicMaterial'),
              (e.vertexShader = ig),
              (e.fragmentShader = rg),
              e
            );
          }
          return (
            (function (e, t) {
              if ('function' != typeof t && null !== t)
                throw new TypeError(
                  'Super expression must either be null or a function',
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: { value: e, writable: !0, configurable: !0 },
              })),
                t && sg(e, t);
            })(t, $e['ShaderMaterial']),
            t
          );
        })();
        function lg(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        var cg = {
            amount: 30,
            geometry: new $e.PlaneBufferGeometry(1, 1),
            material: new ug(),
            useNormals: !1,
            useUvs: !0,
            frustumCulled: !0,
          },
          pg = (function () {
            function e() {
              var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, e),
                (this.options = s.a.defaults(t, cg)),
                this.options.geometry instanceof $e.BufferGeometry ||
                  (this.options.geometry = new $e.BufferGeometry().fromGeometry(
                    this.options.geometry,
                  )),
                (this.geometryInstanced = this.createInstancedGeometry()),
                (this.mesh = new $e.Mesh(
                  this.geometryInstanced,
                  this.options.material,
                )),
                (this.mesh.frustumCulled = this.options.frustumCulled),
                this.createInstanceControllers(this.mesh),
                (this.mesh.instances = this.instances),
                s.a.invoke(this.instances, 'updateInstance');
            }
            var t, n, i;
            return (
              (t = e),
              (n = [
                {
                  key: 'createInstanceControllers',
                  value: function () {
                    var e = this;
                    (this.instances = []),
                      s.a.times(this.options.amount, function (t) {
                        (e.instances[t] = new $e.Object3D()),
                          (e.instances[t].updateInstance = function () {
                            return e.updateInstanceAt(t);
                          }),
                          (e.instances[t].setMatrix = function (n) {
                            return e.setMatrixAt(t, n);
                          });
                      });
                  },
                },
                {
                  key: 'createInstancedGeometry',
                  value: function () {
                    var e = this.options,
                      t = new $e.InstancedBufferGeometry();
                    t.maxInstancedCount = e.amount;
                    var n = this.options.geometry.index.array;
                    t.setIndex(new $e.BufferAttribute(n, 1));
                    var i = this.options.geometry.attributes.position.clone();
                    if ((t.addAttribute('position', i), e.useNormals)) {
                      var r = this.options.geometry.attributes.normal.clone();
                      t.addAttribute('normal', r);
                    }
                    if (e.useUvs && this.options.geometry.attributes.uv) {
                      var o = this.options.geometry.attributes.uv.clone();
                      t.addAttribute('uv', o);
                    }
                    var a = new $e.InstancedBufferAttribute(
                      new Float32Array(e.amount),
                      1,
                    );
                    s.a.times(e.amount, function (e) {
                      a.setXYZ(e, e, e, e);
                    }),
                      t.addAttribute('id', a);
                    var u = new $e.InstancedBufferAttribute(
                      new Float32Array(e.amount),
                      1,
                    );
                    s.a.times(e.amount, function (t) {
                      u.setX(t, 1 - t / e.amount);
                    }),
                      t.addAttribute('opacity', u);
                    var l = (this._mcol0 = new $e.InstancedBufferAttribute(
                      new Float32Array(3 * e.amount),
                      3,
                    ));
                    t.addAttribute('mcol0', l);
                    var c = (this._mcol1 = new $e.InstancedBufferAttribute(
                      new Float32Array(3 * e.amount),
                      3,
                    ));
                    t.addAttribute('mcol1', c);
                    var p = (this._mcol2 = new $e.InstancedBufferAttribute(
                      new Float32Array(3 * e.amount),
                      3,
                    ));
                    t.addAttribute('mcol2', p);
                    var h = (this._mcol3 = new $e.InstancedBufferAttribute(
                      new Float32Array(3 * e.amount),
                      3,
                    ));
                    return t.addAttribute('mcol3', h), t;
                  },
                },
                {
                  key: 'updateInstanceAt',
                  value: function (e) {
                    var t = this.instances[e];
                    t.updateMatrix(), t.updateMatrixWorld();
                    var n = t.matrix.elements;
                    this._mcol0.setXYZ(e, n[0], n[1], n[2]),
                      this._mcol1.setXYZ(e, n[4], n[5], n[6]),
                      this._mcol2.setXYZ(e, n[8], n[9], n[10]),
                      this._mcol3.setXYZ(e, n[12], n[13], n[14]),
                      (this._mcol0.needsUpdate = !0),
                      (this._mcol1.needsUpdate = !0),
                      (this._mcol2.needsUpdate = !0),
                      (this._mcol3.needsUpdate = !0);
                  },
                },
                {
                  key: 'setMatrixAt',
                  value: function (e, t) {
                    var n = t.elements;
                    this._mcol0.setXYZ(e, n[0], n[1], n[2]),
                      this._mcol1.setXYZ(e, n[4], n[5], n[6]),
                      this._mcol2.setXYZ(e, n[8], n[9], n[10]),
                      this._mcol3.setXYZ(e, n[12], n[13], n[14]),
                      (this._mcol0.needsUpdate = !0),
                      (this._mcol1.needsUpdate = !0),
                      (this._mcol2.needsUpdate = !0),
                      (this._mcol3.needsUpdate = !0);
                  },
                },
              ]) && lg(t.prototype, n),
              i && lg(t, i),
              e
            );
          })();
        function hg(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function fg(e) {
          return (fg = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function dg(e, t) {
          return (dg =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        pg.ParticlesBasicMaterial = ug;
        var vg =
            '\nattribute float id;\nattribute vec3 mcol0;\nattribute vec3 mcol1;\nattribute vec3 mcol2;\nattribute vec3 mcol3;\n\nvarying vec2 vUv;\nvarying float vId;\n\nvoid main() {\n    float inImg = mod(id, 8.0);\n    float inRow = floor(inImg / 4.0);\n\n    float startUvX = (1.0 / 4.0) * (inImg - inRow*4.0);\n    float startUvY = inRow * 0.5;\n    vec2 curUv = vec2(startUvX + uv.x * 0.25, startUvY + uv.y * 0.5);\n    vUv = curUv;\n    vId = id;\n\n    mat4 matrix = mat4(\n        vec4( mcol0, 0 ),\n        vec4( mcol1, 0 ),\n        vec4( mcol2, 0 ),\n        vec4( mcol3, 1 )\n    );\n\n    vec3 positionEye = ( modelViewMatrix * matrix * vec4( position, 1.0 ) ).xyz;\n    gl_Position = projectionMatrix * vec4( positionEye, 1.0 );\n}\n',
          mg =
            '\nuniform sampler2D map;\nuniform float rainAmount;\nuniform float deathAmount;\nuniform float diseaseAmount;\nuniform float soilAmount;\nvarying vec2 vUv;\nvarying float vId;\n\n\nvec3 greyscale(vec3 col){\n    float intense = (col.r + col.g + col.b) * 0.333;\n    return vec3(intense, intense, intense);\n}\n\nvoid main() {\n    vec4 col = texture2D(map, vUv);\n    if(col.w < 0.1){\n        discard;\n    }\n\n    col.rgb = mix(col.rgb, col.rgb * (vec3(76.0 / 255.0, 94.0 / 255.0, 72.0 / 255.0) + vec3(0.00, 0.00, 0.17)), rainAmount);\n    col.rgb = mix(col.rgb, greyscale(col.rgb) * 4.0 * vec3(117.0 / 255.0, 113.0 / 255.0, 88.0 / 255.0), deathAmount);\n    col.rgb = mix(col.rgb, col.rgb * vec3(102.0 / 255.0, 94.0 / 255.0, 64.0 / 255.0), diseaseAmount);\n    col.rgb = mix(col.rgb, col.rgb * vec3(157.0 / 255.0, 142.0 / 255.0, 83.0 / 255.0), soilAmount);\n    gl_FragColor = col;\n\n    // gl_FragColor = vec4(vec3(vId/ 80.0), 1.0);\n}\n',
          gg = (function (e) {
            function t(e) {
              var n,
                i = e.map;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t),
                ((n = hg(
                  this,
                  fg(t).call(this, {
                    uniforms: {
                      map: { value: i },
                      rainAmount: { value: 0 },
                      diseaseAmount: { value: 0 },
                      soilAmount: { value: 0 },
                      deathAmount: { value: 0 },
                    },
                    transparent: !0,
                  }),
                )).type = 'ParticlesUnlitTextureMaterial'),
                (n.vertexShader = vg),
                (n.fragmentShader = mg),
                n
              );
            }
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && dg(e, t);
              })(t, $e['ShaderMaterial']),
              t
            );
          })();
        $e.FXAAShader = {
          uniforms: {
            tDiffuse: { value: null },
            resolution: { value: new $e.Vector2(1 / 1024, 1 / 512) },
          },
          vertexShader: [
            'varying vec2 vUv;',
            'void main() {',
            'vUv = uv;',
            'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',
            '}',
          ].join('\n'),
          fragmentShader: [
            'precision highp float;',
            '',
            'uniform sampler2D tDiffuse;',
            '',
            'uniform vec2 resolution;',
            '',
            'varying vec2 vUv;',
            '',
            '// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)',
            '',
            '//----------------------------------------------------------------------------------',
            '// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag',
            '// SDK Version: v3.00',
            '// Email:       gameworks@nvidia.com',
            '// Site:        http://developer.nvidia.com/',
            '//',
            '// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.',
            '//',
            '// Redistribution and use in source and binary forms, with or without',
            '// modification, are permitted provided that the following conditions',
            '// are met:',
            '//  * Redistributions of source code must retain the above copyright',
            '//    notice, this list of conditions and the following disclaimer.',
            '//  * Redistributions in binary form must reproduce the above copyright',
            '//    notice, this list of conditions and the following disclaimer in the',
            '//    documentation and/or other materials provided with the distribution.',
            '//  * Neither the name of NVIDIA CORPORATION nor the names of its',
            '//    contributors may be used to endorse or promote products derived',
            '//    from this software without specific prior written permission.',
            '//',
            "// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY",
            '// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE',
            '// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR',
            '// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR',
            '// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,',
            '// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,',
            '// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR',
            '// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY',
            '// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT',
            '// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE',
            '// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.',
            '//',
            '//----------------------------------------------------------------------------------',
            '',
            '#define FXAA_PC 1',
            '#define FXAA_GLSL_100 1',
            '#define FXAA_QUALITY_PRESET 12',
            '',
            '#define FXAA_GREEN_AS_LUMA 1',
            '',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_PC_CONSOLE',
            '    //',
            '    // The console algorithm for PC is included',
            '    // for developers targeting really low spec machines.',
            '    // Likely better to just run FXAA_PC, and use a really low preset.',
            '    //',
            '    #define FXAA_PC_CONSOLE 0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_GLSL_120',
            '    #define FXAA_GLSL_120 0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_GLSL_130',
            '    #define FXAA_GLSL_130 0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_HLSL_3',
            '    #define FXAA_HLSL_3 0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_HLSL_4',
            '    #define FXAA_HLSL_4 0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_HLSL_5',
            '    #define FXAA_HLSL_5 0',
            '#endif',
            '/*==========================================================================*/',
            '#ifndef FXAA_GREEN_AS_LUMA',
            '    //',
            '    // For those using non-linear color,',
            '    // and either not able to get luma in alpha, or not wanting to,',
            '    // this enables FXAA to run using green as a proxy for luma.',
            '    // So with this enabled, no need to pack luma in alpha.',
            '    //',
            '    // This will turn off AA on anything which lacks some amount of green.',
            '    // Pure red and blue or combination of only R and B, will get no AA.',
            '    //',
            '    // Might want to lower the settings for both,',
            '    //    fxaaConsoleEdgeThresholdMin',
            '    //    fxaaQualityEdgeThresholdMin',
            '    // In order to insure AA does not get turned off on colors',
            '    // which contain a minor amount of green.',
            '    //',
            '    // 1 = On.',
            '    // 0 = Off.',
            '    //',
            '    #define FXAA_GREEN_AS_LUMA 0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_EARLY_EXIT',
            '    //',
            "    // Controls algorithm's early exit path.",
            '    // On PS3 turning this ON adds 2 cycles to the shader.',
            '    // On 360 turning this OFF adds 10ths of a millisecond to the shader.',
            '    // Turning this off on console will result in a more blurry image.',
            '    // So this defaults to on.',
            '    //',
            '    // 1 = On.',
            '    // 0 = Off.',
            '    //',
            '    #define FXAA_EARLY_EXIT 1',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_DISCARD',
            '    //',
            '    // Only valid for PC OpenGL currently.',
            '    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.',
            '    //',
            "    // 1 = Use discard on pixels which don't need AA.",
            '    //     For APIs which enable concurrent TEX+ROP from same surface.',
            "    // 0 = Return unchanged color on pixels which don't need AA.",
            '    //',
            '    #define FXAA_DISCARD 0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_FAST_PIXEL_OFFSET',
            '    //',
            '    // Used for GLSL 120 only.',
            '    //',
            '    // 1 = GL API supports fast pixel offsets',
            '    // 0 = do not use fast pixel offsets',
            '    //',
            '    #ifdef GL_EXT_gpu_shader4',
            '        #define FXAA_FAST_PIXEL_OFFSET 1',
            '    #endif',
            '    #ifdef GL_NV_gpu_shader5',
            '        #define FXAA_FAST_PIXEL_OFFSET 1',
            '    #endif',
            '    #ifdef GL_ARB_gpu_shader5',
            '        #define FXAA_FAST_PIXEL_OFFSET 1',
            '    #endif',
            '    #ifndef FXAA_FAST_PIXEL_OFFSET',
            '        #define FXAA_FAST_PIXEL_OFFSET 0',
            '    #endif',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#ifndef FXAA_GATHER4_ALPHA',
            '    //',
            '    // 1 = API supports gather4 on alpha channel.',
            '    // 0 = API does not support gather4 on alpha channel.',
            '    //',
            '    #if (FXAA_HLSL_5 == 1)',
            '        #define FXAA_GATHER4_ALPHA 1',
            '    #endif',
            '    #ifdef GL_ARB_gpu_shader5',
            '        #define FXAA_GATHER4_ALPHA 1',
            '    #endif',
            '    #ifdef GL_NV_gpu_shader5',
            '        #define FXAA_GATHER4_ALPHA 1',
            '    #endif',
            '    #ifndef FXAA_GATHER4_ALPHA',
            '        #define FXAA_GATHER4_ALPHA 0',
            '    #endif',
            '#endif',
            '',
            '',
            '/*============================================================================',
            '                        FXAA QUALITY - TUNING KNOBS',
            '------------------------------------------------------------------------------',
            'NOTE the other tuning knobs are now in the shader function inputs!',
            '============================================================================*/',
            '#ifndef FXAA_QUALITY_PRESET',
            '    //',
            '    // Choose the quality preset.',
            '    // This needs to be compiled into the shader as it effects code.',
            '    // Best option to include multiple presets is to',
            '    // in each shader define the preset, then include this file.',
            '    //',
            '    // OPTIONS',
            '    // -----------------------------------------------------------------------',
            '    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)',
            '    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)',
            '    // 39       - no dither, very expensive',
            '    //',
            '    // NOTES',
            '    // -----------------------------------------------------------------------',
            '    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)',
            '    // 13 = about same speed as FXAA 3.9 and better than 12',
            '    // 23 = closest to FXAA 3.9 visually and performance wise',
            '    //  _ = the lowest digit is directly related to performance',
            '    // _  = the highest digit is directly related to style',
            '    //',
            '    #define FXAA_QUALITY_PRESET 12',
            '#endif',
            '',
            '',
            '/*============================================================================',
            '',
            '                           FXAA QUALITY - PRESETS',
            '',
            '============================================================================*/',
            '',
            '/*============================================================================',
            '                     FXAA QUALITY - MEDIUM DITHER PRESETS',
            '============================================================================*/',
            '#if (FXAA_QUALITY_PRESET == 10)',
            '    #define FXAA_QUALITY_PS 3',
            '    #define FXAA_QUALITY_P0 1.5',
            '    #define FXAA_QUALITY_P1 3.0',
            '    #define FXAA_QUALITY_P2 12.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 11)',
            '    #define FXAA_QUALITY_PS 4',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 3.0',
            '    #define FXAA_QUALITY_P3 12.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 12)',
            '    #define FXAA_QUALITY_PS 5',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 4.0',
            '    #define FXAA_QUALITY_P4 12.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 13)',
            '    #define FXAA_QUALITY_PS 6',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 4.0',
            '    #define FXAA_QUALITY_P5 12.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 14)',
            '    #define FXAA_QUALITY_PS 7',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 2.0',
            '    #define FXAA_QUALITY_P5 4.0',
            '    #define FXAA_QUALITY_P6 12.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 15)',
            '    #define FXAA_QUALITY_PS 8',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 2.0',
            '    #define FXAA_QUALITY_P5 2.0',
            '    #define FXAA_QUALITY_P6 4.0',
            '    #define FXAA_QUALITY_P7 12.0',
            '#endif',
            '',
            '/*============================================================================',
            '                     FXAA QUALITY - LOW DITHER PRESETS',
            '============================================================================*/',
            '#if (FXAA_QUALITY_PRESET == 20)',
            '    #define FXAA_QUALITY_PS 3',
            '    #define FXAA_QUALITY_P0 1.5',
            '    #define FXAA_QUALITY_P1 2.0',
            '    #define FXAA_QUALITY_P2 8.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 21)',
            '    #define FXAA_QUALITY_PS 4',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 8.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 22)',
            '    #define FXAA_QUALITY_PS 5',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 8.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 23)',
            '    #define FXAA_QUALITY_PS 6',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 2.0',
            '    #define FXAA_QUALITY_P5 8.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 24)',
            '    #define FXAA_QUALITY_PS 7',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 2.0',
            '    #define FXAA_QUALITY_P5 3.0',
            '    #define FXAA_QUALITY_P6 8.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 25)',
            '    #define FXAA_QUALITY_PS 8',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 2.0',
            '    #define FXAA_QUALITY_P5 2.0',
            '    #define FXAA_QUALITY_P6 4.0',
            '    #define FXAA_QUALITY_P7 8.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 26)',
            '    #define FXAA_QUALITY_PS 9',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 2.0',
            '    #define FXAA_QUALITY_P5 2.0',
            '    #define FXAA_QUALITY_P6 2.0',
            '    #define FXAA_QUALITY_P7 4.0',
            '    #define FXAA_QUALITY_P8 8.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 27)',
            '    #define FXAA_QUALITY_PS 10',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 2.0',
            '    #define FXAA_QUALITY_P5 2.0',
            '    #define FXAA_QUALITY_P6 2.0',
            '    #define FXAA_QUALITY_P7 2.0',
            '    #define FXAA_QUALITY_P8 4.0',
            '    #define FXAA_QUALITY_P9 8.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 28)',
            '    #define FXAA_QUALITY_PS 11',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 2.0',
            '    #define FXAA_QUALITY_P5 2.0',
            '    #define FXAA_QUALITY_P6 2.0',
            '    #define FXAA_QUALITY_P7 2.0',
            '    #define FXAA_QUALITY_P8 2.0',
            '    #define FXAA_QUALITY_P9 4.0',
            '    #define FXAA_QUALITY_P10 8.0',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_QUALITY_PRESET == 29)',
            '    #define FXAA_QUALITY_PS 12',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.5',
            '    #define FXAA_QUALITY_P2 2.0',
            '    #define FXAA_QUALITY_P3 2.0',
            '    #define FXAA_QUALITY_P4 2.0',
            '    #define FXAA_QUALITY_P5 2.0',
            '    #define FXAA_QUALITY_P6 2.0',
            '    #define FXAA_QUALITY_P7 2.0',
            '    #define FXAA_QUALITY_P8 2.0',
            '    #define FXAA_QUALITY_P9 2.0',
            '    #define FXAA_QUALITY_P10 4.0',
            '    #define FXAA_QUALITY_P11 8.0',
            '#endif',
            '',
            '/*============================================================================',
            '                     FXAA QUALITY - EXTREME QUALITY',
            '============================================================================*/',
            '#if (FXAA_QUALITY_PRESET == 39)',
            '    #define FXAA_QUALITY_PS 12',
            '    #define FXAA_QUALITY_P0 1.0',
            '    #define FXAA_QUALITY_P1 1.0',
            '    #define FXAA_QUALITY_P2 1.0',
            '    #define FXAA_QUALITY_P3 1.0',
            '    #define FXAA_QUALITY_P4 1.0',
            '    #define FXAA_QUALITY_P5 1.5',
            '    #define FXAA_QUALITY_P6 2.0',
            '    #define FXAA_QUALITY_P7 2.0',
            '    #define FXAA_QUALITY_P8 2.0',
            '    #define FXAA_QUALITY_P9 2.0',
            '    #define FXAA_QUALITY_P10 4.0',
            '    #define FXAA_QUALITY_P11 8.0',
            '#endif',
            '',
            '',
            '',
            '/*============================================================================',
            '',
            '                                API PORTING',
            '',
            '============================================================================*/',
            '#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)',
            '    #define FxaaBool bool',
            '    #define FxaaDiscard discard',
            '    #define FxaaFloat float',
            '    #define FxaaFloat2 vec2',
            '    #define FxaaFloat3 vec3',
            '    #define FxaaFloat4 vec4',
            '    #define FxaaHalf float',
            '    #define FxaaHalf2 vec2',
            '    #define FxaaHalf3 vec3',
            '    #define FxaaHalf4 vec4',
            '    #define FxaaInt2 ivec2',
            '    #define FxaaSat(x) clamp(x, 0.0, 1.0)',
            '    #define FxaaTex sampler2D',
            '#else',
            '    #define FxaaBool bool',
            '    #define FxaaDiscard clip(-1)',
            '    #define FxaaFloat float',
            '    #define FxaaFloat2 float2',
            '    #define FxaaFloat3 float3',
            '    #define FxaaFloat4 float4',
            '    #define FxaaHalf half',
            '    #define FxaaHalf2 half2',
            '    #define FxaaHalf3 half3',
            '    #define FxaaHalf4 half4',
            '    #define FxaaSat(x) saturate(x)',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_GLSL_100 == 1)',
            '  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)',
            '  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_GLSL_120 == 1)',
            '    // Requires,',
            '    //  #version 120',
            '    // And at least,',
            '    //  #extension GL_EXT_gpu_shader4 : enable',
            '    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)',
            '    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)',
            '    #if (FXAA_FAST_PIXEL_OFFSET == 1)',
            '        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)',
            '    #else',
            '        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)',
            '    #endif',
            '    #if (FXAA_GATHER4_ALPHA == 1)',
            '        // use #extension GL_ARB_gpu_shader5 : enable',
            '        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)',
            '        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)',
            '        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)',
            '        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)',
            '    #endif',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_GLSL_130 == 1)',
            '    // Requires "#version 130" or better',
            '    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)',
            '    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)',
            '    #if (FXAA_GATHER4_ALPHA == 1)',
            '        // use #extension GL_ARB_gpu_shader5 : enable',
            '        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)',
            '        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)',
            '        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)',
            '        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)',
            '    #endif',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_HLSL_3 == 1)',
            '    #define FxaaInt2 float2',
            '    #define FxaaTex sampler2D',
            '    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))',
            '    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_HLSL_4 == 1)',
            '    #define FxaaInt2 int2',
            '    struct FxaaTex { SamplerState smpl; Texture2D tex; };',
            '    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)',
            '    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)',
            '#endif',
            '/*--------------------------------------------------------------------------*/',
            '#if (FXAA_HLSL_5 == 1)',
            '    #define FxaaInt2 int2',
            '    struct FxaaTex { SamplerState smpl; Texture2D tex; };',
            '    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)',
            '    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)',
            '    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)',
            '    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)',
            '    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)',
            '    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)',
            '#endif',
            '',
            '',
            '/*============================================================================',
            '                   GREEN AS LUMA OPTION SUPPORT FUNCTION',
            '============================================================================*/',
            '#if (FXAA_GREEN_AS_LUMA == 0)',
            '    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }',
            '#else',
            '    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }',
            '#endif',
            '',
            '',
            '',
            '',
            '/*============================================================================',
            '',
            '                             FXAA3 QUALITY - PC',
            '',
            '============================================================================*/',
            '#if (FXAA_PC == 1)',
            '/*--------------------------------------------------------------------------*/',
            'FxaaFloat4 FxaaPixelShader(',
            '    //',
            '    // Use noperspective interpolation here (turn off perspective interpolation).',
            '    // {xy} = center of pixel',
            '    FxaaFloat2 pos,',
            '    //',
            '    // Used only for FXAA Console, and not used on the 360 version.',
            '    // Use noperspective interpolation here (turn off perspective interpolation).',
            '    // {xy_} = upper left of pixel',
            '    // {_zw} = lower right of pixel',
            '    FxaaFloat4 fxaaConsolePosPos,',
            '    //',
            '    // Input color texture.',
            '    // {rgb_} = color in linear or perceptual color space',
            '    // if (FXAA_GREEN_AS_LUMA == 0)',
            '    //     {__a} = luma in perceptual color space (not linear)',
            '    FxaaTex tex,',
            '    //',
            '    // Only used on the optimized 360 version of FXAA Console.',
            '    // For everything but 360, just use the same input here as for "tex".',
            '    // For 360, same texture, just alias with a 2nd sampler.',
            '    // This sampler needs to have an exponent bias of -1.',
            '    FxaaTex fxaaConsole360TexExpBiasNegOne,',
            '    //',
            '    // Only used on the optimized 360 version of FXAA Console.',
            '    // For everything but 360, just use the same input here as for "tex".',
            '    // For 360, same texture, just alias with a 3nd sampler.',
            '    // This sampler needs to have an exponent bias of -2.',
            '    FxaaTex fxaaConsole360TexExpBiasNegTwo,',
            '    //',
            '    // Only used on FXAA Quality.',
            '    // This must be from a constant/uniform.',
            '    // {x_} = 1.0/screenWidthInPixels',
            '    // {_y} = 1.0/screenHeightInPixels',
            '    FxaaFloat2 fxaaQualityRcpFrame,',
            '    //',
            '    // Only used on FXAA Console.',
            '    // This must be from a constant/uniform.',
            '    // This effects sub-pixel AA quality and inversely sharpness.',
            '    //   Where N ranges between,',
            '    //     N = 0.50 (default)',
            '    //     N = 0.33 (sharper)',
            '    // {x__} = -N/screenWidthInPixels',
            '    // {_y_} = -N/screenHeightInPixels',
            '    // {_z_} =  N/screenWidthInPixels',
            '    // {__w} =  N/screenHeightInPixels',
            '    FxaaFloat4 fxaaConsoleRcpFrameOpt,',
            '    //',
            '    // Only used on FXAA Console.',
            '    // Not used on 360, but used on PS3 and PC.',
            '    // This must be from a constant/uniform.',
            '    // {x__} = -2.0/screenWidthInPixels',
            '    // {_y_} = -2.0/screenHeightInPixels',
            '    // {_z_} =  2.0/screenWidthInPixels',
            '    // {__w} =  2.0/screenHeightInPixels',
            '    FxaaFloat4 fxaaConsoleRcpFrameOpt2,',
            '    //',
            '    // Only used on FXAA Console.',
            '    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.',
            '    // This must be from a constant/uniform.',
            '    // {x__} =  8.0/screenWidthInPixels',
            '    // {_y_} =  8.0/screenHeightInPixels',
            '    // {_z_} = -4.0/screenWidthInPixels',
            '    // {__w} = -4.0/screenHeightInPixels',
            '    FxaaFloat4 fxaaConsole360RcpFrameOpt2,',
            '    //',
            '    // Only used on FXAA Quality.',
            '    // This used to be the FXAA_QUALITY_SUBPIX define.',
            '    // It is here now to allow easier tuning.',
            '    // Choose the amount of sub-pixel aliasing removal.',
            '    // This can effect sharpness.',
            '    //   1.00 - upper limit (softer)',
            '    //   0.75 - default amount of filtering',
            '    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)',
            '    //   0.25 - almost off',
            '    //   0.00 - completely off',
            '    FxaaFloat fxaaQualitySubpix,',
            '    //',
            '    // Only used on FXAA Quality.',
            '    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.',
            '    // It is here now to allow easier tuning.',
            '    // The minimum amount of local contrast required to apply algorithm.',
            '    //   0.333 - too little (faster)',
            '    //   0.250 - low quality',
            '    //   0.166 - default',
            '    //   0.125 - high quality',
            '    //   0.063 - overkill (slower)',
            '    FxaaFloat fxaaQualityEdgeThreshold,',
            '    //',
            '    // Only used on FXAA Quality.',
            '    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.',
            '    // It is here now to allow easier tuning.',
            '    // Trims the algorithm from processing darks.',
            '    //   0.0833 - upper limit (default, the start of visible unfiltered edges)',
            '    //   0.0625 - high quality (faster)',
            '    //   0.0312 - visible limit (slower)',
            '    // Special notes when using FXAA_GREEN_AS_LUMA,',
            '    //   Likely want to set this to zero.',
            '    //   As colors that are mostly not-green',
            '    //   will appear very dark in the green channel!',
            '    //   Tune by looking at mostly non-green content,',
            '    //   then start at zero and increase until aliasing is a problem.',
            '    FxaaFloat fxaaQualityEdgeThresholdMin,',
            '    //',
            '    // Only used on FXAA Console.',
            '    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.',
            '    // It is here now to allow easier tuning.',
            '    // This does not effect PS3, as this needs to be compiled in.',
            '    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.',
            '    //   Due to the PS3 being ALU bound,',
            '    //   there are only three safe values here: 2 and 4 and 8.',
            '    //   These options use the shaders ability to a free *|/ by 2|4|8.',
            '    // For all other platforms can be a non-power of two.',
            '    //   8.0 is sharper (default!!!)',
            '    //   4.0 is softer',
            '    //   2.0 is really soft (good only for vector graphics inputs)',
            '    FxaaFloat fxaaConsoleEdgeSharpness,',
            '    //',
            '    // Only used on FXAA Console.',
            '    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.',
            '    // It is here now to allow easier tuning.',
            '    // This does not effect PS3, as this needs to be compiled in.',
            '    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.',
            '    //   Due to the PS3 being ALU bound,',
            '    //   there are only two safe values here: 1/4 and 1/8.',
            '    //   These options use the shaders ability to a free *|/ by 2|4|8.',
            '    // The console setting has a different mapping than the quality setting.',
            '    // Other platforms can use other values.',
            '    //   0.125 leaves less aliasing, but is softer (default!!!)',
            '    //   0.25 leaves more aliasing, and is sharper',
            '    FxaaFloat fxaaConsoleEdgeThreshold,',
            '    //',
            '    // Only used on FXAA Console.',
            '    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.',
            '    // It is here now to allow easier tuning.',
            '    // Trims the algorithm from processing darks.',
            '    // The console setting has a different mapping than the quality setting.',
            '    // This only applies when FXAA_EARLY_EXIT is 1.',
            '    // This does not apply to PS3,',
            '    // PS3 was simplified to avoid more shader instructions.',
            '    //   0.06 - faster but more aliasing in darks',
            '    //   0.05 - default',
            '    //   0.04 - slower and less aliasing in darks',
            '    // Special notes when using FXAA_GREEN_AS_LUMA,',
            '    //   Likely want to set this to zero.',
            '    //   As colors that are mostly not-green',
            '    //   will appear very dark in the green channel!',
            '    //   Tune by looking at mostly non-green content,',
            '    //   then start at zero and increase until aliasing is a problem.',
            '    FxaaFloat fxaaConsoleEdgeThresholdMin,',
            '    //',
            '    // Extra constants for 360 FXAA Console only.',
            '    // Use zeros or anything else for other platforms.',
            '    // These must be in physical constant registers and NOT immediates.',
            '    // Immediates will result in compiler un-optimizing.',
            '    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)',
            '    FxaaFloat4 fxaaConsole360ConstDir',
            ') {',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat2 posM;',
            '    posM.x = pos.x;',
            '    posM.y = pos.y;',
            '    #if (FXAA_GATHER4_ALPHA == 1)',
            '        #if (FXAA_DISCARD == 0)',
            '            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);',
            '            #if (FXAA_GREEN_AS_LUMA == 0)',
            '                #define lumaM rgbyM.w',
            '            #else',
            '                #define lumaM rgbyM.y',
            '            #endif',
            '        #endif',
            '        #if (FXAA_GREEN_AS_LUMA == 0)',
            '            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);',
            '            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));',
            '        #else',
            '            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);',
            '            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));',
            '        #endif',
            '        #if (FXAA_DISCARD == 1)',
            '            #define lumaM luma4A.w',
            '        #endif',
            '        #define lumaE luma4A.z',
            '        #define lumaS luma4A.x',
            '        #define lumaSE luma4A.y',
            '        #define lumaNW luma4B.w',
            '        #define lumaN luma4B.z',
            '        #define lumaW luma4B.x',
            '    #else',
            '        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);',
            '        #if (FXAA_GREEN_AS_LUMA == 0)',
            '            #define lumaM rgbyM.w',
            '        #else',
            '            #define lumaM rgbyM.y',
            '        #endif',
            '        #if (FXAA_GLSL_100 == 1)',
            '          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));',
            '        #else',
            '          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));',
            '        #endif',
            '    #endif',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat maxSM = max(lumaS, lumaM);',
            '    FxaaFloat minSM = min(lumaS, lumaM);',
            '    FxaaFloat maxESM = max(lumaE, maxSM);',
            '    FxaaFloat minESM = min(lumaE, minSM);',
            '    FxaaFloat maxWN = max(lumaN, lumaW);',
            '    FxaaFloat minWN = min(lumaN, lumaW);',
            '    FxaaFloat rangeMax = max(maxWN, maxESM);',
            '    FxaaFloat rangeMin = min(minWN, minESM);',
            '    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;',
            '    FxaaFloat range = rangeMax - rangeMin;',
            '    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);',
            '    FxaaBool earlyExit = range < rangeMaxClamped;',
            '/*--------------------------------------------------------------------------*/',
            '    if(earlyExit)',
            '        #if (FXAA_DISCARD == 1)',
            '            FxaaDiscard;',
            '        #else',
            '            return rgbyM;',
            '        #endif',
            '/*--------------------------------------------------------------------------*/',
            '    #if (FXAA_GATHER4_ALPHA == 0)',
            '        #if (FXAA_GLSL_100 == 1)',
            '          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));',
            '        #else',
            '          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));',
            '          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));',
            '        #endif',
            '    #else',
            '        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));',
            '        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));',
            '    #endif',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat lumaNS = lumaN + lumaS;',
            '    FxaaFloat lumaWE = lumaW + lumaE;',
            '    FxaaFloat subpixRcpRange = 1.0/range;',
            '    FxaaFloat subpixNSWE = lumaNS + lumaWE;',
            '    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;',
            '    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat lumaNESE = lumaNE + lumaSE;',
            '    FxaaFloat lumaNWNE = lumaNW + lumaNE;',
            '    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;',
            '    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat lumaNWSW = lumaNW + lumaSW;',
            '    FxaaFloat lumaSWSE = lumaSW + lumaSE;',
            '    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);',
            '    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);',
            '    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;',
            '    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;',
            '    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;',
            '    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;',
            '    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;',
            '    FxaaBool horzSpan = edgeHorz >= edgeVert;',
            '    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;',
            '/*--------------------------------------------------------------------------*/',
            '    if(!horzSpan) lumaN = lumaW;',
            '    if(!horzSpan) lumaS = lumaE;',
            '    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;',
            '    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat gradientN = lumaN - lumaM;',
            '    FxaaFloat gradientS = lumaS - lumaM;',
            '    FxaaFloat lumaNN = lumaN + lumaM;',
            '    FxaaFloat lumaSS = lumaS + lumaM;',
            '    FxaaBool pairN = abs(gradientN) >= abs(gradientS);',
            '    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));',
            '    if(pairN) lengthSign = -lengthSign;',
            '    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat2 posB;',
            '    posB.x = posM.x;',
            '    posB.y = posM.y;',
            '    FxaaFloat2 offNP;',
            '    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;',
            '    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;',
            '    if(!horzSpan) posB.x += lengthSign * 0.5;',
            '    if( horzSpan) posB.y += lengthSign * 0.5;',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat2 posN;',
            '    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;',
            '    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;',
            '    FxaaFloat2 posP;',
            '    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;',
            '    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;',
            '    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;',
            '    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));',
            '    FxaaFloat subpixE = subpixC * subpixC;',
            '    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));',
            '/*--------------------------------------------------------------------------*/',
            '    if(!pairN) lumaNN = lumaSS;',
            '    FxaaFloat gradientScaled = gradient * 1.0/4.0;',
            '    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;',
            '    FxaaFloat subpixF = subpixD * subpixE;',
            '    FxaaBool lumaMLTZero = lumaMM < 0.0;',
            '/*--------------------------------------------------------------------------*/',
            '    lumaEndN -= lumaNN * 0.5;',
            '    lumaEndP -= lumaNN * 0.5;',
            '    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;',
            '    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;',
            '    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;',
            '    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;',
            '    FxaaBool doneNP = (!doneN) || (!doneP);',
            '    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;',
            '    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;',
            '/*--------------------------------------------------------------------------*/',
            '    if(doneNP) {',
            '        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '        doneN = abs(lumaEndN) >= gradientScaled;',
            '        doneP = abs(lumaEndP) >= gradientScaled;',
            '        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;',
            '        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;',
            '        doneNP = (!doneN) || (!doneP);',
            '        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;',
            '        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;',
            '/*--------------------------------------------------------------------------*/',
            '        #if (FXAA_QUALITY_PS > 3)',
            '        if(doneNP) {',
            '            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '            doneN = abs(lumaEndN) >= gradientScaled;',
            '            doneP = abs(lumaEndP) >= gradientScaled;',
            '            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;',
            '            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;',
            '            doneNP = (!doneN) || (!doneP);',
            '            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;',
            '            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;',
            '/*--------------------------------------------------------------------------*/',
            '            #if (FXAA_QUALITY_PS > 4)',
            '            if(doneNP) {',
            '                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '                doneN = abs(lumaEndN) >= gradientScaled;',
            '                doneP = abs(lumaEndP) >= gradientScaled;',
            '                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;',
            '                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;',
            '                doneNP = (!doneN) || (!doneP);',
            '                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;',
            '                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;',
            '/*--------------------------------------------------------------------------*/',
            '                #if (FXAA_QUALITY_PS > 5)',
            '                if(doneNP) {',
            '                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '                    doneN = abs(lumaEndN) >= gradientScaled;',
            '                    doneP = abs(lumaEndP) >= gradientScaled;',
            '                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;',
            '                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;',
            '                    doneNP = (!doneN) || (!doneP);',
            '                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;',
            '                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;',
            '/*--------------------------------------------------------------------------*/',
            '                    #if (FXAA_QUALITY_PS > 6)',
            '                    if(doneNP) {',
            '                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '                        doneN = abs(lumaEndN) >= gradientScaled;',
            '                        doneP = abs(lumaEndP) >= gradientScaled;',
            '                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;',
            '                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;',
            '                        doneNP = (!doneN) || (!doneP);',
            '                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;',
            '                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;',
            '/*--------------------------------------------------------------------------*/',
            '                        #if (FXAA_QUALITY_PS > 7)',
            '                        if(doneNP) {',
            '                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '                            doneN = abs(lumaEndN) >= gradientScaled;',
            '                            doneP = abs(lumaEndP) >= gradientScaled;',
            '                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;',
            '                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;',
            '                            doneNP = (!doneN) || (!doneP);',
            '                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;',
            '                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;',
            '/*--------------------------------------------------------------------------*/',
            '    #if (FXAA_QUALITY_PS > 8)',
            '    if(doneNP) {',
            '        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '        doneN = abs(lumaEndN) >= gradientScaled;',
            '        doneP = abs(lumaEndP) >= gradientScaled;',
            '        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;',
            '        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;',
            '        doneNP = (!doneN) || (!doneP);',
            '        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;',
            '        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;',
            '/*--------------------------------------------------------------------------*/',
            '        #if (FXAA_QUALITY_PS > 9)',
            '        if(doneNP) {',
            '            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '            doneN = abs(lumaEndN) >= gradientScaled;',
            '            doneP = abs(lumaEndP) >= gradientScaled;',
            '            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;',
            '            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;',
            '            doneNP = (!doneN) || (!doneP);',
            '            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;',
            '            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;',
            '/*--------------------------------------------------------------------------*/',
            '            #if (FXAA_QUALITY_PS > 10)',
            '            if(doneNP) {',
            '                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '                doneN = abs(lumaEndN) >= gradientScaled;',
            '                doneP = abs(lumaEndP) >= gradientScaled;',
            '                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;',
            '                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;',
            '                doneNP = (!doneN) || (!doneP);',
            '                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;',
            '                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;',
            '/*--------------------------------------------------------------------------*/',
            '                #if (FXAA_QUALITY_PS > 11)',
            '                if(doneNP) {',
            '                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '                    doneN = abs(lumaEndN) >= gradientScaled;',
            '                    doneP = abs(lumaEndP) >= gradientScaled;',
            '                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;',
            '                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;',
            '                    doneNP = (!doneN) || (!doneP);',
            '                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;',
            '                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;',
            '/*--------------------------------------------------------------------------*/',
            '                    #if (FXAA_QUALITY_PS > 12)',
            '                    if(doneNP) {',
            '                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',
            '                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',
            '                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',
            '                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',
            '                        doneN = abs(lumaEndN) >= gradientScaled;',
            '                        doneP = abs(lumaEndP) >= gradientScaled;',
            '                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;',
            '                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;',
            '                        doneNP = (!doneN) || (!doneP);',
            '                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;',
            '                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;',
            '/*--------------------------------------------------------------------------*/',
            '                    }',
            '                    #endif',
            '/*--------------------------------------------------------------------------*/',
            '                }',
            '                #endif',
            '/*--------------------------------------------------------------------------*/',
            '            }',
            '            #endif',
            '/*--------------------------------------------------------------------------*/',
            '        }',
            '        #endif',
            '/*--------------------------------------------------------------------------*/',
            '    }',
            '    #endif',
            '/*--------------------------------------------------------------------------*/',
            '                        }',
            '                        #endif',
            '/*--------------------------------------------------------------------------*/',
            '                    }',
            '                    #endif',
            '/*--------------------------------------------------------------------------*/',
            '                }',
            '                #endif',
            '/*--------------------------------------------------------------------------*/',
            '            }',
            '            #endif',
            '/*--------------------------------------------------------------------------*/',
            '        }',
            '        #endif',
            '/*--------------------------------------------------------------------------*/',
            '    }',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat dstN = posM.x - posN.x;',
            '    FxaaFloat dstP = posP.x - posM.x;',
            '    if(!horzSpan) dstN = posM.y - posN.y;',
            '    if(!horzSpan) dstP = posP.y - posM.y;',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;',
            '    FxaaFloat spanLength = (dstP + dstN);',
            '    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;',
            '    FxaaFloat spanLengthRcp = 1.0/spanLength;',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaBool directionN = dstN < dstP;',
            '    FxaaFloat dst = min(dstN, dstP);',
            '    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;',
            '    FxaaFloat subpixG = subpixF * subpixF;',
            '    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;',
            '    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;',
            '/*--------------------------------------------------------------------------*/',
            '    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;',
            '    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);',
            '    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;',
            '    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;',
            '    #if (FXAA_DISCARD == 1)',
            '        return FxaaTexTop(tex, posM);',
            '    #else',
            '        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);',
            '    #endif',
            '}',
            '/*==========================================================================*/',
            '#endif',
            '',
            'void main() {',
            '  gl_FragColor = FxaaPixelShader(',
            '    vUv,',
            '    vec4(0.0),',
            '    tDiffuse,',
            '    tDiffuse,',
            '    tDiffuse,',
            '    resolution,',
            '    vec4(0.0),',
            '    vec4(0.0),',
            '    vec4(0.0),',
            '    0.75,',
            '    0.166,',
            '    0.0833,',
            '    0.0,',
            '    0.0,',
            '    0.0,',
            '    vec4(0.0)',
            '  );',
            '',
            '  // TODO avoid querying texture twice for same texel',
            '  gl_FragColor.a = texture2D(tDiffuse, vUv).a;',
            '}',
          ].join('\n'),
        };
        var bg = n(377),
          yg = n.n(bg);
        n(122);
        function wg() {
          var e = Hg([
            '\n    #include <packing>\n\n    uniform vec2 center;\n    uniform float radius;\n    uniform float focusPoint;\n    uniform float iTime;\n    uniform vec2 iResolution;\n    uniform sampler2D depthTexture;\n    uniform float minBlur;\n    varying vec2 vUv;\n\n    const int NUM_SAMPLES = 8;\n\n    const float THRESHOLD = 0.0;\n    const float MULT = 1.0;\n\n    vec3 srgb2lin(vec3 c) { return c*c; }\n    vec3 lin2srgb(vec3 c) { return sqrt(c); }\n\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDepth;\n    uniform float cameraNear;\n    uniform float cameraFar;\n\n    float readDepth( sampler2D depthSampler, vec2 coord ) {\n        float fragCoordZ = texture2D( depthSampler, coord ).x;\n        float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n        return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n    }\n\n    float hash12n(vec2 p)\n    {\n        p  = fract(p * vec2(5.3987, 5.4421));\n        p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n        return fract(p.x * p.y * 95.4307);\n    }\n\n    void main( )\n    {\n        vec2 uv = vUv;\n        vec2 crop = vec2(0.05, 0.05);\n        uv = crop + uv * (vec2(1.0, 1.0) - crop * 2.0);\n        float blur_r = radius;\n        float depth =  abs(focusPoint - readDepth( tDepth, vUv ));\n        blur_r = minBlur +blur_r * depth;\n        blur_r *= 2.0; //empiric constant...\n\n        float da = 6.283 / float(NUM_SAMPLES);\n        float a = da * hash12n(uv+fract(iTime) + 4.2);\n\n        vec3 sumcol = vec3(0.0);\n        for (int i=0;i<NUM_SAMPLES;++i)\n        {\n            vec2 ofs = vec2( cos(a), sin(a) ) / iResolution.xy * blur_r ;\n            vec2 p = uv + ofs;\n            p = max(vec2(0.0,0.0), min(vec2(1.0, 1.0), p));\n            \n            sumcol += srgb2lin(texture2D(tDiffuse, p, -0.0).rgb);\n            a += da;\n        }\n        sumcol /= float(NUM_SAMPLES);\n        sumcol = max( sumcol, 0.0 );\n\n        gl_FragColor = vec4( lin2srgb( sumcol ), 1.0 );\n    }\n',
          ]);
          return (
            (wg = function () {
              return e;
            }),
            e
          );
        }
        function xg() {
          var e = Hg([
            '\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n',
          ]);
          return (
            (xg = function () {
              return e;
            }),
            e
          );
        }
        function Pg() {
          var e = Hg([
            '\n    #include <packing>\n\n    uniform vec2 center;\n    uniform float radius;\n    uniform float focusPoint;\n    uniform float iTime;\n    uniform vec2 iResolution;\n    uniform float minBlur;\n    uniform sampler2D depthTexture;\n    varying vec2 vUv;\n\n    const int NUM_SAMPLES = 8;\n\n    const float THRESHOLD = 0.0;\n    const float MULT = 1.0;\n\n    vec3 srgb2lin(vec3 c) { return c*c; }\n    vec3 lin2srgb(vec3 c) { return sqrt(c); }\n\n    //note: uniform pdf rand [0;1[\n    float hash12n(vec2 p)\n    {\n        p  = fract(p * vec2(5.3987, 5.4421));\n        p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n        return fract(p.x * p.y * 95.4307);\n    }\n\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDepth;\n    uniform float cameraNear;\n    uniform float cameraFar;\n\n    float readDepth( sampler2D depthSampler, vec2 coord ) {\n        float fragCoordZ = texture2D( depthSampler, coord ).x;\n        float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n        return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n    }\n\n    void main( )\n    {\n        vec2 uv = vUv;\n\n        float blur_r = radius;\n        float depth = abs(focusPoint - readDepth( tDepth, vUv ));\n        float blurdist = minBlur + blur_r* depth;\n        blur_r = blurdist * sqrt(2.0); //empiric constant...\n\n        float da = 6.283 / float(NUM_SAMPLES);\n        float a = da * hash12n(uv+fract(iTime)+1.337);\n\n        vec3 sumcol = vec3(0.0);\n        for (int i=0;i<NUM_SAMPLES;++i)\n        {\n            vec2 ofs = vec2( cos(a), sin(a) ) / iResolution.xy * blur_r ;\n            vec2 p = uv + ofs;\n            p = max(vec2(0.0,0.0), min(vec2(1.0, 1.0), p));\n            \n            sumcol += srgb2lin(texture2D(tDiffuse, p, 0.0).rgb);\n            a += da;\n        }\n        sumcol /= float(NUM_SAMPLES);\n        sumcol = max( sumcol, 0.0 );\n\n        gl_FragColor = vec4( lin2srgb( sumcol ), 1.0 );\n    }\n',
          ]);
          return (
            (Pg = function () {
              return e;
            }),
            e
          );
        }
        function _g() {
          var e = Hg([
            '\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n',
          ]);
          return (
            (_g = function () {
              return e;
            }),
            e
          );
        }
        function kg() {
          var e = Hg([
            '\n    #include <packing>\n\n    uniform vec2 center;\n    uniform float radius;\n    uniform float focusPoint;\n    uniform float iTime;\n    uniform float minBlur;\n    uniform vec2 iResolution;\n    uniform sampler2D depthTexture;\n    varying vec2 vUv;\n\n    const int NUM_SAMPLES = 8;\n\n    const float THRESHOLD = 0.0;\n    const float MULT = 1.0;\n\n    vec3 srgb2lin(vec3 c) { return c*c; }\n    vec3 lin2srgb(vec3 c) { return sqrt(c); }\n\n    //note: uniform pdf rand [0;1[\n    float hash12n(vec2 p)\n    {\n        p  = fract(p * vec2(5.3987, 5.4421));\n        p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n        return fract(p.x * p.y * 95.4307);\n    }\n\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDepth;\n    uniform float cameraNear;\n    uniform float cameraFar;\n\n    float readDepth( sampler2D depthSampler, vec2 coord ) {\n        float fragCoordZ = texture2D( depthSampler, coord ).x;\n        float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n        return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n    }\n\n    void main()\n    {\n\n        vec2 suv = vUv.xy;\n        vec2 uv = vUv.xy;\n        float depth =  abs(focusPoint - readDepth( tDepth, vUv ));\n\n        float blurdist = minBlur +radius* depth;\n\n        float da = 6.283 / float(NUM_SAMPLES);\n        float a = da * hash12n(uv+fract(iTime));\n\n        vec3 sumcol = vec3(0.0);\n        for (int i=0;i<NUM_SAMPLES;++i)\n        {\n            vec2 ofs = vec2( cos(a), sin(a) ) / iResolution.xy * blurdist ;\n            vec2 p = uv + ofs;\n            \n            p = max(vec2(0.0,0.0), min(vec2(1.0, 1.0), p));\n            \n            vec3 sampleTex = srgb2lin( texture2D( tDiffuse, p, 0.0 ).rgb );\n            vec3 smpl = (sampleTex - THRESHOLD) / (1.0-THRESHOLD);\n            sumcol +=  smpl;\n\n           a += da;\n        }\n        sumcol /= float(NUM_SAMPLES);\n        sumcol = max( sumcol, 0.0 );\n\n        gl_FragColor = vec4( lin2srgb( sumcol * MULT ), 1.0 );\n    }\n',
          ]);
          return (
            (kg = function () {
              return e;
            }),
            e
          );
        }
        function Og() {
          var e = Hg([
            '\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n',
          ]);
          return (
            (Og = function () {
              return e;
            }),
            e
          );
        }
        function Sg() {
          var e = Hg([
            '\n\n    vec4 frag = texture2D( foregroundTexture, vUv ) ;\n    frag.xyz *= 1.0 + lightning * 0.1;\n\n    vec4 fragShadow = texture2D( foregroundShadowTexture, vUv );\n    vec4 fragScreen = texture2D( foregroundScreenTexture, vUv );\n\n\n\n    vec3 fragEnergy = texture2D( energyMask, vUv ).rgb;\n\n    float glowMul = 200.0;\n    float glowPow = max(0.0, sin(iTime*0.01 + vertPos.z * 2.0) -0.98) * glowMul * 1.2 * fragEnergy.r;\n    glowPow += max(0.0, (sin(iTime*0.007 + vertPos.z * 1.3) -0.95)) * glowMul * 1.2 * fragEnergy.r;\n    glowPow += max(0.0, (sin(iTime*0.006 + vertPos.z * 1.6) -0.95)) * glowMul * 1.2 * fragEnergy.r;\n    glowPow += max(0.0, (sin(iTime*0.009 + vertPos.z * 1.7) -0.97)) * glowMul * 1.2 * fragEnergy.g;\n    glowPow += max(0.0, (sin(iTime*0.010 + vertPos.z * 1.2) -0.97)) * glowMul *1.2 * fragEnergy.g;\n    glowPow += max(0.0, (sin(iTime*0.010 + vertPos.z * 1.8) -0.98)) * glowMul * 1.2 * fragEnergy.b;\n    glowPow += max(0.0, (sin(iTime*0.007 + vertPos.z * 1.8) -0.98)) * glowMul * 1.2 * fragEnergy.b;\n\n    frag.r *= 1.0 + (144.0  / 255.0) * glowPow * energyAmount;\n    frag.g *= 1.0 + (255.0 / 255.0) * glowPow * energyAmount;\n    frag.b *= 1.0 + (180.0 / 255.0) * glowPow * energyAmount;\n    diffuseColor = frag;\n    float screenAdded = (fragScreen.r + fragScreen.g + fragScreen.b) * 0.2;\n    screenAdded = screenAdded + smoothstep(0.2, 0.9, screenAdded);\n    vec3 rainShine = vec3(screenAdded,screenAdded,screenAdded) * 1.0 * min((1.0 - sunAmount), 1.0);\n    diffuseColor.rgb += mix(rainShine, fragScreen.rgb, sunAmount*0.4);\n\n    float switchTimeMul = max(0.0,(30.0-abs(((sqrt(vertPos.y*vertPos.y + vertPos.x*vertPos.x)) - switchTime * 7.0)+30.0))) / 30.0;\n    diffuseColor.rgb += vec3(120.0  / 255.0, 160.0 / 255.0, 120.0 / 255.0 ) * switchTimeMul * 1.0;\n\n    diffuseColor.rgb *= 0.9 + (sin((1000.0+mod(iTime, 5000.0)) * vUv.x*50.0 * vUv.y*50.0)+1.0) * 0.1;\n    // diffuseColor.rgb *= 0.5 + smoothstep(1.0, 0.0, (vertPos.z-10.0)*0.08)*0.5;\n    diffuseColor.rgb = mix(diffuseColor.rgb, diffuseColor.rgb * fragShadow.rgb, sunAmount * 0.5);\n    float diffuseFlat = (diffuseColor.r + diffuseColor.g + diffuseColor.b)* 0.33333;\n    vec3 rainDiffuse = vec3(diffuseFlat) * vec3(0.5, 0.5, 0.7);\n    diffuseColor.rgb = mix(rainDiffuse, diffuseColor.rgb, 0.5 + sunAmount * 0.5);\n    diffuseColor.rgb *= (0.4 + sunAmount*0.8 );\n    \n    float flashAdded = fragShadow.r + fragShadow.g + fragShadow.b;\n    diffuseColor.rgb = mix(diffuseColor.rgb, diffuseColor.rgb * vec3(flashAdded,flashAdded,flashAdded), min(lightning, 1.0));\n\n',
          ]);
          return (
            (Sg = function () {
              return e;
            }),
            e
          );
        }
        function Tg() {
          var e = Hg(['\n    vUv = uv;\n    vertPos = position;\n']);
          return (
            (Tg = function () {
              return e;
            }),
            e
          );
        }
        function Ag() {
          var e = Hg([
            '\n    #include <packing>\n\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n    uniform sampler2D noise;\n    \n    uniform float iTime;\n\n    uniform sampler2D tDepth;\n    uniform float flashAmount;\n\n\n    void main() {\n        vec4 diffuse1 = texture2D( tDiffuse, vUv );\n        float noiseSample = texture2D( noise, vUv*6.0 + vec2(sin(iTime* 0.02) * 100.0, cos(iTime* 0.02) * 100.0)).r;\n\n        gl_FragColor = diffuse1;\n        gl_FragColor.r = 1.0;\n        gl_FragColor.rgb += (noiseSample-0.75) * 0.9;\n        gl_FragColor.rgb *= 1.0 + flashAmount;\n    }\n',
          ]);
          return (
            (Ag = function () {
              return e;
            }),
            e
          );
        }
        function Mg() {
          var e = Hg([
            '\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n',
          ]);
          return (
            (Mg = function () {
              return e;
            }),
            e
          );
        }
        function jg() {
          var e = Hg([
            '\n   #include <packing>\n\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n    uniform float cameraNear;\n    uniform float cameraFar;\n    uniform sampler2D rainTex;\n    uniform sampler2D sunTex;\n\n    uniform sampler2D depth;\n    uniform float iTime;\n\n    uniform float rainAmount;\n    uniform float droughtAmount;\n    uniform float soilAmount;\n    uniform float lightning;\n    uniform float sundepth;\n    uniform float diseaseAmount;\n\n    uniform sampler2D tDepth;\n\n    float readDepth( sampler2D depthSampler, vec2 coord ) {\n        float fragCoordZ = texture2D( depthSampler, coord ).x;\n        float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n        return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n    }\n    float map(float value, float min1, float max1, float min2, float max2) {\n      return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n    }\n    \n    vec2 repeatUV(vec2 uv, vec2 offset){\n        vec2 nuv = uv + offset;\n        nuv = mod(nuv, vec2(1.0,1.0));\n\n        return nuv;\n    }\n\n    vec3 rainPost(vec3 diffuse, float amount) {\n        \n        float depth =  readDepth( tDepth, vUv );\n        depth = map(depth, 0.0, 0.1, 0.0, 1.0);\n        vec2 rainUv = vUv*2.0;\n        rainUv.y += iTime*.006;\n        rainUv.x -= iTime*.003 + cos(rainUv.y*2.0 + iTime*0.0025)*0.3;\n\n        vec2 rainUv2 = vUv* 4.5;\n        rainUv2.y += iTime*.006;\n        rainUv2.x -= iTime*.003 + sin(rainUv2.y*2.0 + iTime*0.005)*0.2;\n        float rain = texture2D( rainTex,rainUv2 ).r;\n        rain += texture2D( rainTex, rainUv).r;\n        diffuse += (vec3(1.0, 1.0, 1.0)-diffuse) * rain * max(0.0, depth) * 0.4 * amount * (1.0 + min(2.0, lightning));\n        diffuse += (vec3(0.6, 0.6, 0.6)-diffuse) * max(0.0, depth) * 0.1* amount;\n      \n        float OuterVig = 1.0;\n        float InnerVig = 0.5;\n        vec2 center = vec2(0.5,0.5);\n        float dist  = distance(center,vUv )*1.414213;\n        float vig = clamp((OuterVig-dist) / (OuterVig-InnerVig),0.8,1.0);\n        diffuse *= vig;\n        return diffuse;\n    }\n\n    vec3 droughtPost(vec3 diffuse, float amount) {\n        float depth =  readDepth( tDepth, vUv );\n        depth = max(0.0, depth-0.0)*5.0;\n        vec2 depthUv = vUv;\n        //depthUv.x += sin(depthUv.y * 50.0 - iTime*0.01) * (0.001+(depth * 0.0005)) * (0.5-max(0.0, (0.5 -vUv.y))) * 20.0 * amount;\n        // vec3 diffuse = texture2D( tDiffuse, depthUv ).rgb;\n        diffuse += texture2D( sunTex, vUv - vec2(-0.5, 0.5) ).rgb * 2.0 * (sin(iTime*0.01)*0.03+1.0) * amount * (1.0 + sundepth*0.25);\n        diffuse *= 1.0 + amount*0.5;\n        return diffuse;\n    }\n\n    vec3 soilPost(vec3 diffuse, float amount){\n        // float depth =  readDepth( tDepth, vUv );\n        // depth = max(0.0, depth-0.0)*5.0;\n        // vec2 depthUv = vUv;\n        // vec3 diffuse = texture2D( tDiffuse, depthUv ).rgb;\n        return diffuse;\n    }\n\n    vec3 diseasePost(vec3 diffuse, float amount) {\n        float depth =  readDepth( tDepth, vUv );\n        depth = max(0.0, depth-0.02)*10.0;\n        diffuse += (vec3(0.16, 0.17, 0.14)-diffuse) *  (depth) * 0.5 * amount;\n        return diffuse;\n    }\n\n    void main() {\n        vec3 diffuse = texture2D( tDiffuse, vUv ).rgb;\n        diffuse = rainPost(diffuse, rainAmount);\n        diffuse = droughtPost(diffuse, droughtAmount);\n        diffuse = diseasePost(diffuse, diseaseAmount);\n        gl_FragColor = vec4(diffuse, 1.0);\n    }\n',
          ]);
          return (
            (jg = function () {
              return e;
            }),
            e
          );
        }
        function Fg() {
          var e = Hg([
            '\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n',
          ]);
          return (
            (Fg = function () {
              return e;
            }),
            e
          );
        }
        function Rg() {
          var e = Hg(['']);
          return (
            (Rg = function () {
              return e;
            }),
            e
          );
        }
        function Cg() {
          var e = Hg(['']);
          return (
            (Cg = function () {
              return e;
            }),
            e
          );
        }
        function Eg() {
          var e = Hg([
            '\n    #include <packing>\n\n    varying vec2 vUv;\n    varying vec3 pos;\n    uniform sampler2D revealMap;\n    uniform sampler2D map;\n    uniform sampler2D map1;\n    uniform sampler2D map2;\n    uniform sampler2D map3;\n    uniform sampler2D plantShadow;\n    uniform float inmap;\n    uniform float soilAnim;\n    uniform float mouseY;\n    uniform float sunAmount;\n    uniform float intensity;\n    uniform float puddleAmount;\n    uniform float lightning;\n    uniform float iTime;\n    uniform float windSpeed;\n    uniform float deathAmount;\n    uniform vec2 plantPos;\n\n\n    vec2 repeatUV(vec2 uv, float scale, vec2 offset){\n        vec2 nuv = (uv * scale) + offset;\n        nuv = mod(nuv, vec2(1.0,1.0));\n\n        return nuv;\n    }\n\n    void main() {\n        vec2 uv =vUv*10.0;\n      \n        vec4 tex0 = texture2D( map, uv );\n        vec4 tex1 = texture2D( map1, uv );\n        vec4 tex2 = texture2D( map2, uv );\n        vec4 tex3 = texture2D( map3, uv );\n\n        float revealPix = texture2D( revealMap, uv*0.5).x;\n        float shadowMap = texture2D( revealMap, uv*0.5).x;\n        float in1 = (min(1.0, inmap)) * soilAnim;\n        float in2 = max(0.0, min(1.0, inmap-1.0))* soilAnim;\n        float in3 = max(0.0, min(1.0, inmap-2.0))* soilAnim;\n        float in4 = max(0.0, min(1.0, inmap-3.0))* soilAnim;\n        in1 = smoothstep(0.0,1.0, (revealPix - in1) *10.0);\n        in2 = smoothstep(0.0,1.0, (revealPix - in2) *10.0);\n        in3 = smoothstep(0.0,1.0, (revealPix - in3) *10.0);\n        in4 = smoothstep(0.0,1.0, (revealPix - in4) *10.0);\n\n        float waterPix = texture2D( revealMap, uv).x;\n        float inWater = smoothstep(0.0,1.0, (waterPix - (1.0-puddleAmount)) *10.0);\n\n        vec4 diffuseColor = mix(tex0, tex1, 1.0 - in1);\n        diffuseColor = mix(diffuseColor, tex2, 1.0 - in2);\n        diffuseColor = mix(diffuseColor, tex3, 1.0 - in3);\n        diffuseColor = mix(diffuseColor, tex0, 1.0 - in4);\ndiffuseColor *= 1.0 + soilAnim*0.7;\n        vec3 plantShadowMul = vec3(pow(texture2D( plantShadow, uv*6.0 + vec2(-0.5,0.5)).r, 2.0)) ;\n        float uvxMod = mod(uv.x *6.0, 1.0);\n        vec3 lightningShadowMul = vec3(texture2D( plantShadow, uv*6.0 + vec2(-0.5,0.5)).b);\n        gl_FragColor.rgb =  diffuseColor.rgb*intensity*0.8 * (1.0 + shadowMap) * plantShadowMul;\n\n        float wave = sin(-iTime*0.018 + uv.x * 100.0) *0.5;\n        wave += cos(-iTime*0.02 + uv.y * 100.0+ uv.x * 100.0) ;\n        // wave += cos(-iTime*0.015 + uv.y * 80.0) ;\n        wave *= 0.1;\n        gl_FragColor.rgb = mix( gl_FragColor.rgb, vec3(67.0/255.0, 65.0/255.0, 50.0/255.0), 1.0 - smoothstep(0.6, 0.3, vUv.y));\n         gl_FragColor.rgb +=  ((vec3(200.0 / 255.0, 215.0/255.0, 230.0 / 255.0)*(1.0+wave))-gl_FragColor.rgb) * inWater *0.2* (1.0+lightning*0.2);\n        // gl_FragColor.rgb = mix( gl_FragColor.rgb, vec3(55.0/255.0, 68.0/255.0, 37.0/255.0), 1.0 - smoothstep(0.6, 0.3, vUv.y));\n        // gl_FragColor.rgb = mix( gl_FragColor.rgb, vec3(35.0/255.0, 32.0/255.0, 15.0/255.0), 1.0 - smoothstep(0.6, 0.3, vUv.y));\n        gl_FragColor.rgb *=  1.0 + lightningShadowMul * lightning;\n        gl_FragColor.rgb *= sunAmount*1.0 + smoothstep(0.6, 0.3, vUv.y)*0.8;\n     \n        float sunShadow = 0.35 + smoothstep(0.5, 0.3, texture2D( revealMap, vUv*10.0 + vec2(sin(uv.x*10.0 + uv.y*10.0) * cos(uv.x*5.0 + uv.y*10.0) * deathAmount + sin(iTime*0.01*sin(uv.x*10.0) + uv.x*100.0) *  0.0025 * windSpeed, 0.0 - sin(iTime*0.01 + uv.y*70.0) * -0.0025* windSpeed)).x)*0.7;\n        sunShadow *= 0.35 + smoothstep(0.5, 0.3, texture2D( revealMap, vUv*10.0 + vec2(sin(uv.x*10.0 + uv.y*10.0) * cos(uv.x*5.0 + uv.y*10.0) * -deathAmount + sin(iTime*0.01*sin(uv.x*10.0)  + uv.y*100.0) * -0.0025 * windSpeed, 0.5 + sin(iTime*0.01 + uv.y*90.0) * -0.0025* windSpeed)).x)*0.7;\n        gl_FragColor.rgb *= 1.0 - (1.0 - sunShadow) * (sunAmount);\n        gl_FragColor.a = 1.0;\n    }\n',
          ]);
          return (
            (Eg = function () {
              return e;
            }),
            e
          );
        }
        function Lg() {
          var e = Hg([
            '\n    varying vec2 vUv;\n    varying vec3 pos;\n    uniform sampler2D revealMap;\n\n    void main() {\n        vUv = uv;\n        float shadowMap = texture2D( revealMap, vUv *5.0 ).x;\n        vec3 pos = vec3(position.x, position.y , position.z+ shadowMap*10.0 - 5.0);\n\n        gl_Position = projectionMatrix * modelViewMatrix * (vec4(pos, 1.0));\n        pos = gl_Position.xyz;\n    }\n',
          ]);
          return (
            (Lg = function () {
              return e;
            }),
            e
          );
        }
        function Ig() {
          var e = Hg(['']);
          return (
            (Ig = function () {
              return e;
            }),
            e
          );
        }
        function Dg() {
          var e = Hg(['']);
          return (
            (Dg = function () {
              return e;
            }),
            e
          );
        }
        function Ug() {
          var e = Hg([
            '\n    float reveal = texture2D( revealMap, vUv ).x;\n    vec4 deathTexture = texture2D( deathMap, vUv );\n\n    float revealMapped = 1.0 - min(1.0, max(0.0, reveal-deathAmount) * 50.0);\n\n    float yOffset = (vPositionLocal.y * .001);\n    float softness = 50.0;\n    float mappedReveal = 1.0 - min(1.0, max(0.0, ( (reveal+ yOffset) * softness - (diseaseAmount*softness)) )) * 1.0;\n\n    diffuseColor += (deathTexture - diffuseColor) * (revealMapped + mappedReveal);\n    \n    \n    //float glowLength = max(0.0,100.0 - vPosition.y) / 100.0;\n    //diffuseColor.xyz += (0.5 + sin(vPosition.y*0.5 - iTime*0.01 * )*0.5) * glowLength * 0.5;\n\n    diffuseColor.xyz *= 1.0 - mappedReveal;\n\n    float switchTimeMul = max(0.0,(60.0-abs(((sqrt(vPosition.z*vPosition.z + vPosition.x*vPosition.x)) - (switchTime+30.0) * 7.0)+3.0))) / 60.0;\n    // float switchTimeMul = max(0.0,10.0 -(switchTime))*0.1;\n    diffuseColor.rgb += vec3(120.0  / 255.0, 160.0 / 255.0, 120.0 / 255.0 ) * switchTimeMul * 1.0;\n\n    //diffuseColor.a *=(1.0-(reveal*0.1));\n',
          ]);
          return (
            (Ug = function () {
              return e;
            }),
            e
          );
        }
        function zg() {
          var e = Hg([
            '\n    vPosition = projectionMatrix * modelViewMatrix * vec4(position, 1.0);;\n    vPositionLocal = position;\n\n',
          ]);
          return (
            (zg = function () {
              return e;
            }),
            e
          );
        }
        function Ng() {
          var e = Hg([
            '\n    #include <packing>\n\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n\n    void main() {\n        gl_FragColor = texture2D( tDiffuse, vUv );\n    }\n',
          ]);
          return (
            (Ng = function () {
              return e;
            }),
            e
          );
        }
        function Bg() {
          var e = Hg([
            '\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n',
          ]);
          return (
            (Bg = function () {
              return e;
            }),
            e
          );
        }
        function Vg() {
          var e = Hg([
            '\n    #include <packing>\n\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDepth;\n    uniform float cameraNear;\n    uniform float cameraFar;\n\n\n    float readDepth( sampler2D depthSampler, vec2 coord ) {\n        float fragCoordZ = texture2D( depthSampler, coord ).x;\n        float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n        return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n    }\n\n    void main() {\n        //vec3 diffuse = texture2D( tDiffuse, vUv ).rgb;\n        float depth = readDepth( tDepth, vUv );\n\n        gl_FragColor.rgb = 1.0 - vec3( depth );\n        gl_FragColor.a = 1.0;\n    }\n',
          ]);
          return (
            (Vg = function () {
              return e;
            }),
            e
          );
        }
        function Yg() {
          var e = Hg([
            '\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n',
          ]);
          return (
            (Yg = function () {
              return e;
            }),
            e
          );
        }
        function Hg(e, t) {
          return (
            t || (t = e.slice(0)),
            Object.freeze(
              Object.defineProperties(e, { raw: { value: Object.freeze(t) } }),
            )
          );
        }
        Mt(Yg()), Mt(Vg());
        var Xg = Mt(Bg()),
          Gg = Mt(Ng()),
          Wg = Mt(zg()),
          Qg = Mt(Ug()),
          qg = (Mt(Dg()), Mt(Ig()), Mt(Lg())),
          Zg = Mt(Eg()),
          Kg = (Mt(Cg()), Mt(Rg()), Mt(Fg())),
          $g = Mt(jg()),
          Jg = Mt(Mg()),
          eb = Mt(Ag()),
          tb = Mt(Tg()),
          nb = Mt(Sg()),
          ib = Mt(Og()),
          rb = Mt(kg()),
          ob = Mt(_g()),
          ab = Mt(Pg()),
          sb = Mt(xg()),
          ub = Mt(wg());
        function lb(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function cb(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function pb(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function hb(e) {
          return (hb = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function fb(e, t) {
          return (fb =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var db,
          vb,
          mb = new $c.a(),
          gb = function (e) {
            return new Promise(function (t, n) {
              mb.load(
                e,
                function (e) {
                  return t(e);
                },
                null,
                n,
              );
            });
          },
          bb = (function (e) {
            function t() {
              var e, n;
              !(function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              })(this, t);
              for (var i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                r[o] = arguments[o];
              return (
                ((n = pb(
                  this,
                  (e = hb(t)).call.apply(e, [this].concat(r)),
                )).props = {}),
                n
              );
            }
            var n, i, r;
            return (
              (function (e, t) {
                if ('function' != typeof t && null !== t)
                  throw new TypeError(
                    'Super expression must either be null or a function',
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && fb(e, t);
              })(t, le['a']),
              (n = t),
              (i = [
                {
                  key: 'onSetup',
                  value: (function () {
                    var e,
                      t =
                        ((e = regeneratorRuntime.mark(function e() {
                          var t, n, i, r, o, a, s, u, l, p, h, f, d, v;
                          return regeneratorRuntime.wrap(
                            function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    for (
                                      this.masterDPI = 1,
                                        this.cameraZoomMultiplier = 1,
                                        this.fpsCap = 60,
                                        this.qualityTier = 1,
                                        this.blurMultiplier = 1,
                                        c.a.isMobile && (this.qualityTier = 2),
                                        1 == this.qualityTier
                                          ? ((this.gltfFilename =
                                              'SingleStalk12_db.gltf'),
                                            (this.plantGridAmount = [9, 11, 11]),
                                            (this.plantGridAmount = [7, 9]),
                                            (this.addNormal = !0),
                                            (this.offsetPlantLayers = !1),
                                            (this.masterDPI = 0.75),
                                            (this.bgPlantsAmount = [
                                              15,
                                              15,
                                              13,
                                              13,
                                              9,
                                              9,
                                              5,
                                              5,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                              3,
                                            ]),
                                            (this.maxDPI = Math.min(
                                              1.5,
                                              window.devicePixelRatio || 1,
                                            )))
                                          : 2 == this.qualityTier &&
                                            ((this.gltfFilename =
                                              'SingleStalk12_db.gltf'),
                                            (this.plantGridAmount = [5, 5]),
                                            (this.offsetPlantLayers = !1),
                                            (this.addNormal = !0),
                                            (this.blurMultiplier = 0.4),
                                            (this.masterDPI = Math.min(
                                              1,
                                              window.devicePixelRatio || 1,
                                            )),
                                            (this.maxDPI = Math.min(
                                              1.5,
                                              window.devicePixelRatio || 1,
                                            )),
                                            (this.bgPlantsAmount = [
                                              9,
                                              9,
                                              7,
                                              7,
                                              5,
                                              5,
                                              3,
                                              3,
                                            ])),
                                        this.windHistoryLength = 10,
                                        this.sceneProps = [
                                          {
                                            id: 'normal',
                                            doBlurPasses: !0,
                                            sunHeight: 3.6,
                                            sunAngle: 2.8,
                                            sunBrightness: 0,
                                            windPower: 0.1,
                                            sunColor: new $e.Color(16760943),
                                            showLightning: !0,
                                            ambientIntensity: 0.5,
                                            minBlur: 10,
                                            blurRadius: 60,
                                            cameraRot: 0,
                                            cameraZoomMultiplier: 1,
                                            ambientIntensity: 0.5,
                                            sunHeight: 3.6,
                                            plantSpacing: 50,
                                            sunBrightness: 4.6,
                                          },
                                          {
                                            id: 'storm',
                                            doBlurPasses: !0,
                                            sunHeight: 3.6,
                                            sunAngle: 2.8,
                                            sunBrightness: 1,
                                            windPower: 3,
                                            sunColor: new $e.Color(13750499),
                                            plantRoughness: 0.2,
                                            showLightning: !0,
                                            ambientIntensity: 0.5,
                                            minBlur: 6,
                                            cameraRot: 0,
                                            cameraZoomMultiplier: 1,
                                            blurRadius: 60,
                                            plantSpacing: 50,
                                          },
                                          {
                                            id: 'drought',
                                            doBlurPasses: !0,
                                            sunHeight: 3.6,
                                            sunAngle: 2.8,
                                            sunBrightness: 6.6,
                                            plantRoughness: 1,
                                            windPower: 0.06,
                                            sunColor: new $e.Color(16760943),
                                            cameraRot: 0,
                                            plantSpacing: 50,
                                            blurRadius: 60,
                                            minBlur: 6,
                                            cameraZoomMultiplier: 1,
                                            ambientIntensity: 0.5,
                                          },
                                          {
                                            id: 'disease',
                                            doBlurPasses: !0,
                                            sunHeight: 3.6,
                                            sunAngle: 2.8,
                                            sunBrightness: 3.6,
                                            windPower: 0.04,
                                            sunColor: new $e.Color(16760943),
                                            plantRoughness: 1,
                                            blurRadius: 50,
                                            minBlur: 6,
                                            ambientIntensity: 0.5,
                                            plantSpacing: 50,
                                            cameraRot: 0,
                                            cameraZoomMultiplier: 1,
                                          },
                                          {
                                            id: 'soil',
                                            doBlurPasses: !0,
                                            sunHeight: 13,
                                            sunAngle: 2.8,
                                            windPower: 0.1,
                                            sunColor: new $e.Color(16760943),
                                            plantRoughness: 1,
                                            blurRadius: 50,
                                            minBlur: 6,
                                            plantSpacing: 50,
                                            cameraRot: -0,
                                            camYOffset: 50,
                                            ambientIntensity: 0.5,
                                            sunHeight: 3.6,
                                            cameraZoomMultiplier: 1,
                                            sunAngle: 2.8,
                                            sunBrightness: 4.6,
                                          },
                                          {
                                            id: 'density',
                                            doBlurPasses: !0,
                                            windPower: 0.06,
                                            sunColor: new $e.Color(16760943),
                                            plantRoughness: 1,
                                            blurRadius: 60,
                                            minBlur: 6,
                                            plantSpacing: 30,
                                            camYOffset: 0,
                                            cameraRot: 0,
                                            cameraZoomMultiplier: 0.8,
                                            ambientIntensity: 0.5,
                                            sunHeight: 3.6,
                                            sunAngle: 2.8,
                                            sunBrightness: 5.6,
                                          },
                                        ],
                                        this.cameraZoomMultiplier = 1,
                                        this.sceneAmounts = [1, 0, 0, 0, 0, 0],
                                        this.currentScene = 'storm',
                                        this.setSceneProps(this.currentScene, !1),
                                        this.forceHideBlur = !1,
                                        this.lastFrameTime = 0,
                                        this.useOrbitControls = !1,
                                        this.drag = [0.05, 0.05],
                                        this.elastic = [0.5, 0.5],
                                        this.mouseControlMovementX = c.a.isMobile
                                          ? 0
                                          : 50,
                                        this.mouseControlMovementY = c.a.isMobile
                                          ? 0
                                          : 25,
                                        this.leafRandomScale = 0.6,
                                        this.sunAngle = Math.PI,
                                        this.focusPoint = 0.02,
                                        this.windPower = 2,
                                        this.blurRadius = 3.8,
                                        this.minBlur = 1.2,
                                        this.windTurbulence = 1,
                                        this.plantSpacing = 100,
                                        this.ambientIntensity = 0.3,
                                        this.inSoil = 0,
                                        this.cameraBaseY = 0,
                                        this.dpr = Math.min(
                                          window.devicePixelRatio || 1,
                                          2,
                                        ),
                                        this.dprOR = window.devicePixelRatio || 1,
                                        this.dpr = this.masterDPI,
                                        this.sunBrightness = 3,
                                        this.sunHeight = 20,
                                        this.deathAmount = 0,
                                        this.wetAmount = 0,
                                        this.sunAmount = 0,
                                        this.sickAmount = 0,
                                        this.camYOffset = 0,
                                        this.cubemapSize = 2900,
                                        this.doBlurPasses = !1,
                                        this.windDirection = [],
                                        this.showSkeletonHelpers = !1,
                                        this.mouseY = this.mouseX = 0,
                                        this.preMouseX = this.preMouseY = 0,
                                        this.motion = { x: 0, y: 0, z: 0 },
                                        this.fallAmount = 0,
                                        t = 0;
                                      t < 5;
                                      t++
                                    )
                                      this.windDirection.push(new $e.Vector3());
                                    return (
                                      (this.windDirectionHistory = []),
                                      (this.ticker = 0),
                                      (this.renderer = Rn().renderer),
                                      (this.renderer.antialias = !0),
                                      (this.renderTarget = new $e.WebGLRenderTarget(
                                        window.innerWidth,
                                        window.innerHeight,
                                      )),
                                      (this.renderTarget.texture.format =
                                        $e.RGBAFormat),
                                      (this.renderTarget.texture.generateMipmaps = !1),
                                      (this.renderTarget.stencilBuffer = !1),
                                      (this.renderTarget.depthBuffer = !0),
                                      (this.renderTarget.depthTexture = new $e.DepthTexture(
                                        10,
                                        10,
                                      )),
                                      (this.renderTarget.depthTexture.type =
                                        $e.UnsignedShortType),
                                      (this.renderTarget2 = new $e.WebGLRenderTarget(
                                        window.innerWidth,
                                        window.innerHeight,
                                      )),
                                      (this.renderTarget3 = new $e.WebGLRenderTarget(
                                        window.innerWidth,
                                        window.innerHeight,
                                      )),
                                      (this.renderTarget4 = new $e.WebGLRenderTarget(
                                        window.innerWidth * this.dprOR,
                                        window.innerHeight * this.dprOR,
                                      )),
                                      (this.renderTarget2.texture.generateMipmaps = !1),
                                      (this.renderTarget3.texture.generateMipmaps = !1),
                                      (this.renderTarget4.texture.generateMipmaps = !1),
                                      (this.renderTarget.texture.generateMipmaps = !1),
                                      (this.scene = new $e.Scene()),
                                      (this.camera = new $e.PerspectiveCamera(
                                        30 / this.cameraZoomMultiplier,
                                        1,
                                        1,
                                        1e4,
                                      )),
                                      (this.camera.position.z = 300),
                                      c.a.isMobile &&
                                        (this.camera.position.z = 200),
                                      (this.camera.aspect =
                                        window.innerWidth / window.innerHeight),
                                      this.camera.setFocalLength(45),
                                      this.camera.updateProjectionMatrix(),
                                      (this.camera.position.y = 150),
                                      (this.cameraOffsetY = 0),
                                      (this.groundGeometry = new $e.PlaneGeometry(
                                        3e3,
                                        3e3,
                                        20,
                                        20,
                                      )),
                                      (this.groundMaterial = new $e.MeshStandardMaterial(
                                        { color: 16777215, side: $e.DoubleSide },
                                      )),
                                      10,
                                      (e.next = 82),
                                      Gn('stalk-soil-default')
                                    );
                                  case 82:
                                    return (
                                      (this.groundTexture = e.sent),
                                      (this.groundTexture.wrapS =
                                        $e.RepeatWrapping),
                                      (this.groundTexture.wrapT =
                                        $e.RepeatWrapping),
                                      (this.groundTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.groundTexture.needsUpdate = !0),
                                      (e.next = 89),
                                      Gn('post-noise')
                                    );
                                  case 89:
                                    return (
                                      (this.postNoiseTexture = e.sent),
                                      (this.postNoiseTexture.wrapS =
                                        $e.RepeatWrapping),
                                      (this.postNoiseTexture.wrapT =
                                        $e.RepeatWrapping),
                                      (this.postNoiseTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.postNoiseTexture.needsUpdate = !0),
                                      (this.groundMaterial.map = this.groundTexture),
                                      (e.next = 97),
                                      Gn('stalk-soil-normal')
                                    );
                                  case 97:
                                    return (
                                      (this.groundNormal = e.sent),
                                      (this.groundNormal.wrapS =
                                        $e.RepeatWrapping),
                                      (this.groundNormal.wrapT =
                                        $e.RepeatWrapping),
                                      (this.groundNormal.minFilter =
                                        $e.LinearFilter),
                                      (this.groundNormal.needsUpdate = !0),
                                      (this.groundMaterial.normalMap = this.groundNormal),
                                      (e.next = 105),
                                      Gn('stalk-soil-displacement')
                                    );
                                  case 105:
                                    return (
                                      (this.groundDisplacement = e.sent),
                                      (this.groundDisplacement.wrapS =
                                        $e.RepeatWrapping),
                                      (this.groundDisplacement.wrapT =
                                        $e.RepeatWrapping),
                                      (this.groundDisplacement.minFilter =
                                        $e.LinearFilter),
                                      (this.groundDisplacement.needsUpdate = !0),
                                      (this.groundMaterial.displacementMap = this.groundDisplacement),
                                      (e.next = 113),
                                      Gn('stalk-soil-nutrients-clay')
                                    );
                                  case 113:
                                    return (
                                      (this.groundTexture2 = e.sent),
                                      (this.groundTexture2.wrapS =
                                        $e.RepeatWrapping),
                                      (this.groundTexture2.wrapT =
                                        $e.RepeatWrapping),
                                      (this.groundTexture2.minFilter =
                                        $e.LinearFilter),
                                      (this.groundTexture2.needsUpdate = !0),
                                      (e.next = 120),
                                      Gn('stalk-soil-nutrients-loam')
                                    );
                                  case 120:
                                    return (
                                      (this.groundTexture3 = e.sent),
                                      (this.groundTexture3.wrapS =
                                        $e.RepeatWrapping),
                                      (this.groundTexture3.wrapT =
                                        $e.RepeatWrapping),
                                      (this.groundTexture3.minFilter =
                                        $e.LinearFilter),
                                      (this.groundTexture3.needsUpdate = !0),
                                      (e.next = 127),
                                      Gn('stalk-soil-nutrients-sand')
                                    );
                                  case 127:
                                    return (
                                      (this.groundTexture4 = e.sent),
                                      (this.groundTexture4.wrapS =
                                        $e.RepeatWrapping),
                                      (this.groundTexture4.wrapT =
                                        $e.RepeatWrapping),
                                      (this.groundTexture4.minFilter =
                                        $e.LinearFilter),
                                      (this.groundTexture4.needsUpdate = !0),
                                      (e.next = 134),
                                      Gn('stalk-plant-shadow')
                                    );
                                  case 134:
                                    return (
                                      (this.plantShadowTexture = e.sent),
                                      (this.plantShadowTexture.wrapS =
                                        $e.RepeatWrapping),
                                      (this.plantShadowTexture.wrapT =
                                        $e.RepeatWrapping),
                                      (this.plantShadowTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.plantShadowTexture.needsUpdate = !0),
                                      (e.next = 141),
                                      Gn('stalk-reveal-map')
                                    );
                                  case 141:
                                    return (
                                      (this.groundRevealTexture = e.sent),
                                      (this.groundRevealTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.groundRevealTexture.wrapS =
                                        $e.RepeatWrapping),
                                      (this.groundRevealTexture.wrapT =
                                        $e.RepeatWrapping),
                                      (this.groundRevealTexture.needsUpdate = !0),
                                      (this.defines = {}),
                                      (this.floorMaterial = new $e.ShaderMaterial(
                                        {
                                          defines: this.defines,
                                          vertexShader: qg,
                                          fragmentShader: Zg,
                                          uniforms: {
                                            inmap: { type: 'float', value: 0 },
                                            soilAnim: { type: 'float', value: 0 },
                                            iTime: { type: 'float', value: 0 },
                                            intensity: {
                                              type: 'float',
                                              value: 1,
                                            },
                                            lightning: {
                                              type: 'float',
                                              value: 0,
                                            },
                                            windSpeed: {
                                              type: 'float',
                                              value: 0,
                                            },
                                            sunAmount: {
                                              type: 'float',
                                              value: 0,
                                            },
                                            deathAmount: {
                                              type: 'float',
                                              value: 0,
                                            },
                                            mouseY: { type: 'float', value: 0 },
                                            puddleAmount: {
                                              type: 'float',
                                              value: 0,
                                            },
                                            revealMap: {
                                              type: 'sampler2D',
                                              value: this.bgPlantRevealTexture,
                                            },
                                            map: {
                                              type: 'sampler2D',
                                              value: this.groundTexture,
                                            },
                                            map1: {
                                              type: 'sampler2D',
                                              value: this.groundTexture2,
                                            },
                                            map2: {
                                              type: 'sampler2D',
                                              value: this.groundTexture3,
                                            },
                                            map3: {
                                              type: 'sampler2D',
                                              value: this.groundTexture4,
                                            },
                                            plantShadow: {
                                              type: 'sampler2D',
                                              value: this.bgPlantRevealTexture,
                                            },
                                            plantPos: {
                                              type: 'vec2',
                                              value: new $e.Vector2(0.5, 0.5),
                                            },
                                          },
                                        },
                                      )),
                                      (this.floorMaterial.roughness = 0.91),
                                      (this.floorMaterial.displacementScale = 200),
                                      (this.floorMaterial.uniforms.map1.value = this.groundTexture2),
                                      (this.floorMaterial.uniforms.map2.value = this.groundTexture3),
                                      (this.floorMaterial.uniforms.map3.value = this.groundTexture4),
                                      (this.floorMaterial.uniforms.plantShadow.value = this.plantShadowTexture),
                                      (this.floorMaterial.uniforms.revealMap.value = this.groundRevealTexture),
                                      (this.groundPlane = new $e.Mesh(
                                        this.groundGeometry,
                                        this.floorMaterial,
                                      )),
                                      (this.groundPlane.rotation.x =
                                        -0.5 * Math.PI),
                                      (this.groundPlane.position.y = -20),
                                      (this.groundPlane.position.z = -200),
                                      this.scene.add(this.groundPlane),
                                      (this.bgGeometry = new $e.PlaneGeometry(
                                        1080,
                                        1920,
                                        10,
                                        10,
                                      )),
                                      (e.next = 163),
                                      Gn('stalk-bg')
                                    );
                                  case 163:
                                    return (
                                      (this.bgTexture = e.sent),
                                      (this.bgTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.bgMaterial = new $e.MeshBasicMaterial(
                                        {
                                          color: 16777215,
                                          side: $e.DoubleSide,
                                          map: this.bgTexture,
                                        },
                                      )),
                                      (this.bgPlane = new $e.Mesh(
                                        this.bgGeometry,
                                        this.bgMaterial,
                                      )),
                                      (this.bgPlane.position.z = -1550),
                                      (this.bgPlane.position.y = 600),
                                      this.bgPlane.scale.set(3.5, 1.5, 1),
                                      this.scene.add(this.bgPlane),
                                      (this.bgMaterial.color = new $e.Color(
                                        0.5 + this.sunBrightness / 4,
                                        0.5 + this.sunBrightness / 4,
                                        0.5 + this.sunBrightness / 4,
                                      )),
                                      (n =
                                        (this.plantGridAmount.length -
                                          1 +
                                          this.bgPlantsAmount.length) *
                                        -this.plantSpacing),
                                      (this.farPlants = []),
                                      (this.farPlantsGeom = new $e.PlaneBufferGeometry(
                                        180,
                                        360,
                                        1,
                                        1,
                                      )),
                                      this.addNormal ? this.normalMap : null,
                                      (e.next = 178),
                                      Gn('stalk-bg-corn')
                                    );
                                  case 178:
                                    for (
                                      this.farPlantsTexture = e.sent,
                                        this.farPlantsTexture.minFilter =
                                          $e.LinearFilter,
                                        this.farPlantsMaterial = new gg({
                                          map: this.farPlantsTexture,
                                          transparent: !0,
                                          writeDepth: !1,
                                          alphaTest: 0.1,
                                        }),
                                        i = 0,
                                        r = 0;
                                      r < this.bgPlantsAmount.length;
                                      r++
                                    )
                                      i += this.bgPlantsAmount[r];
                                    for (
                                      (o = new $e.Matrix4()).makeTranslation(
                                        0,
                                        180,
                                        0,
                                      ),
                                        this.farPlantsGeom.applyMatrix(o),
                                        this.instances = new pg({
                                          amount: i,
                                          geometry: this.farPlantsGeom,
                                          material: this.farPlantsMaterial,
                                        }),
                                        this.scene.add(this.instances.mesh),
                                        this.instances.mesh.position.y = -30,
                                        i = 0,
                                        r = 0;
                                      r < this.bgPlantsAmount.length;
                                      r++
                                    ) {
                                      for (
                                        a = this.bgPlantsAmount[r], s = 0;
                                        s < a;
                                        s++
                                      )
                                        (u = this.instances.instances[i + s]),
                                          (l = this.plantSpacing / 2),
                                          (u.position.x = (s - 0.5 * a) * l),
                                          (n =
                                            this.plantGridAmount.length *
                                            -this.plantSpacing *
                                            0.5),
                                          (u.position.z =
                                            n +
                                            -r * this.plantSpacing * 1 +
                                            (s % 2) * l * 0.15),
                                          (p = {
                                            mesh: u,
                                            index: {
                                              x: s,
                                              z: 10 * Math.random(),
                                            },
                                            rotation: new $e.Vector3(),
                                            rotationTarget: new $e.Vector3(),
                                            rotationSpeed: new $e.Vector3(
                                              0,
                                              0,
                                              0,
                                            ),
                                          }),
                                          u.updateInstance(),
                                          this.farPlants.push(p);
                                      i += a;
                                    }
                                    return (
                                      this.useOrbitControls &&
                                        (this.orbitControls = new Gm(
                                          this.camera,
                                          this.renderer.domElement,
                                        )),
                                      (this.leafClones = []),
                                      (this.plants = []),
                                      (this.leafMaterials = []),
                                      (this.sunLight = new $e.DirectionalLight(
                                        this.sunColor,
                                        2,
                                      )),
                                      (this.sunLight.intensity =
                                        this.sunBrightness / 40),
                                      this.updateSunPosistion(),
                                      (e.next = 200),
                                      Gn('stalk-bg-plant')
                                    );
                                  case 200:
                                    return (
                                      (this.bgPlantTexture = e.sent),
                                      (this.bgPlantTexture.minFilter =
                                        $e.LinearFilter),
                                      (e.next = 204),
                                      Gn('stalk-bg-plant-reveal')
                                    );
                                  case 204:
                                    return (
                                      (this.bgPlantRevealTexture = e.sent),
                                      (this.bgPlantRevealTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.bgPlantRevealTexture.needsUpdate = !0),
                                      (e.next = 209),
                                      Gn('stalk-bg-plant-death')
                                    );
                                  case 209:
                                    return (
                                      (this.bgPlantDeathTexture = e.sent),
                                      (this.bgPlantDeathTexture.minFilter =
                                        $e.LinearFilter),
                                      (e.next = 213),
                                      Gn('stalk-bg-plant-death')
                                    );
                                  case 213:
                                    return (
                                      (this.bgPlantNormal = e.sent),
                                      (this.bgPlantNormal.minFilter =
                                        $e.LinearFilter),
                                      (this.bgPlantMaterial = new Km(
                                        {
                                          map: this.bgPlantTexture,
                                          normalMap: this.groundNormal,
                                          skinning: !0,
                                          side: $e.FrontSide,
                                        },
                                        {
                                          uniforms: {
                                            deathAmount: {
                                              type: 'float',
                                              value: 0,
                                            },
                                            iTime: { type: 'float', value: 0 },
                                            switchTime: {
                                              type: 'float',
                                              value: 0,
                                            },
                                            diseaseAmount: {
                                              type: 'float',
                                              value: 0,
                                            },
                                            vPosition: {
                                              type: 'vec4',
                                              value: new $e.Vector3(),
                                              varType: 'varying ',
                                            },
                                            vPositionLocal: {
                                              type: 'vec3',
                                              value: new $e.Vector3(),
                                              varType: 'varying ',
                                            },
                                            revealMap: {
                                              type: 'sampler2D',
                                              value: this.bgPlantRevealTexture,
                                            },
                                            deathMap: {
                                              type: 'sampler2D',
                                              value: this.bgPlantDeathTexture,
                                            },
                                          },
                                          vertexShader: Wg,
                                          fragmentShader: Qg,
                                        },
                                      )),
                                      (e.next = 218),
                                      Gn('stalk-energy')
                                    );
                                  case 218:
                                    return (
                                      (this.foregroundPlantEnergyTexture =
                                        e.sent),
                                      (e.next = 221),
                                      Gn('stalk-diffuse-flat')
                                    );
                                  case 221:
                                    return (
                                      (this.foregroundPlantTexture = e.sent),
                                      (e.next = 224),
                                      Gn('stalk-diffuse-shadow')
                                    );
                                  case 224:
                                    return (
                                      (this.foregroundShadowPlantTexture =
                                        e.sent),
                                      (e.next = 227),
                                      Gn('stalk-screen')
                                    );
                                  case 227:
                                    return (
                                      (this.foregroundScreenPlantTexture =
                                        e.sent),
                                      (this.foregroundPlantTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.foregroundPlantEnergyTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.foregroundShadowPlantTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.foregroundScreenPlantTexture.minFilter =
                                        $e.LinearFilter),
                                      (this.foregroundScreenPlantTexture.flipY = !1),
                                      (this.foregroundPlantTexture.flipY = !1),
                                      (this.foregroundShadowPlantTexture.flipY = !1),
                                      (this.foregroundScene = new $e.Scene()),
                                      (this.lightningLight = new $e.DirectionalLight()),
                                      (this.lightningLight.intensity = 0),
                                      (this.lightningLight.position.y = 10),
                                      (this.lightningLight.position.x = 10),
                                      this.scene.add(this.lightningLight),
                                      (this.bounceLight = new $e.DirectionalLight()),
                                      (this.bounceLight.position.y = -10),
                                      this.setBounceLightColor(0),
                                      this.scene.add(this.bounceLight),
                                      (this.ambientLight = new $e.AmbientLight(
                                        new $e.Color(
                                          0.6 * this.ambientIntensity,
                                          0.6 * this.ambientIntensity,
                                          0.6 * this.ambientIntensity,
                                        ),
                                      )),
                                      this.scene.add(this.ambientLight),
                                      this.scene.add(this.sunLight),
                                      (this.leafMaterial = new $e.MeshStandardMaterial()),
                                      (this.leafMaterial.color = new $e.Color(
                                        'white',
                                      )),
                                      (e.next = 252),
                                      Gn('stalk-rain-texture')
                                    );
                                  case 252:
                                    return (
                                      ((h = e.sent).minFilter = $e.LinearFilter),
                                      (h.wrapS = $e.RepeatWrapping),
                                      (h.wrapT = $e.RepeatWrapping),
                                      (h.needsUpdate = !0),
                                      (e.next = 259),
                                      Gn('stalk-lens-flare')
                                    );
                                  case 259:
                                    return (
                                      ((f = e.sent).minFilter = $e.LinearFilter),
                                      (this.postMaterial = new $e.ShaderMaterial({
                                        defines: this.defines,
                                        vertexShader: Kg,
                                        fragmentShader: $g,
                                        uniforms: {
                                          tDiffuse: {
                                            value: this.renderTarget.texture,
                                          },
                                          rainTex: { value: h },
                                          sunTex: { value: f },
                                          cameraNear: { value: this.camera.near },
                                          cameraFar: { value: this.camera.far },
                                          tDepth: {
                                            value: this.renderTarget.depthTexture,
                                          },
                                          iResolution: {
                                            value: new $e.Vector2(256, 256),
                                          },
                                          center: {
                                            value: new $e.Vector2(0.5, 0.5),
                                          },
                                          iTime: { value: 1 },
                                          rainAmount: { value: 0 },
                                          lightning: { value: 0 },
                                          sunAmount: { value: 0 },
                                          sundepth: { value: 0 },
                                          droughtAmount: { value: 0 },
                                          soilAmount: { value: 0 },
                                          diseaseAmount: { value: 0 },
                                        },
                                      })),
                                      (this.postMaterial2 = new $e.ShaderMaterial(
                                        {
                                          defines: this.defines,
                                          vertexShader: Kg,
                                          fragmentShader: $g,
                                          uniforms: {
                                            tDiffuse: {
                                              value: this.renderTarget4.texture,
                                            },
                                            rainTex: { value: h },
                                            sunTex: { value: f },
                                            cameraNear: {
                                              value: this.camera.near,
                                            },
                                            cameraFar: { value: this.camera.far },
                                            tDepth: {
                                              value: this.renderTarget
                                                .depthTexture,
                                            },
                                            iResolution: {
                                              value: new $e.Vector2(256, 256),
                                            },
                                            center: {
                                              value: new $e.Vector2(0.5, 0.5),
                                            },
                                            iTime: { value: 1 },
                                            rainAmount: { value: 0 },
                                            sunAmount: { value: 0 },
                                            droughtAmount: { value: 0 },
                                            soilAmount: { value: 0 },
                                            diseaseAmount: { value: 0 },
                                          },
                                        },
                                      )),
                                      this.setupPost(),
                                      this.setSceneProps(this.currentScene, !0),
                                      (this.resize = this.resize.bind(this)),
                                      window.addEventListener(
                                        'resize',
                                        this.resize.bind(this),
                                      ),
                                      window.addEventListener(
                                        'mousemove',
                                        this.onMouseMove.bind(this),
                                      ),
                                      this.resize(),
                                      (e.next = 271),
                                      gb(
                                        c.a.CDN +
                                          'images/stalk/' +
                                          this.gltfFilename,
                                      )
                                    );
                                  case 271:
                                    return (
                                      (d = e.sent),
                                      this.onPlantLoaded(d),
                                      (e.next = 275),
                                      gb(
                                        c.a.CDN +
                                          'images/stalk/stalk_rigged3.gltf',
                                      )
                                    );
                                  case 275:
                                    (v = e.sent), this.onForegroundPlantLoaded(v);
                                  case 277:
                                  case 'end':
                                    return e.stop();
                                }
                            },
                            e,
                            this,
                          );
                        })),
                        function () {
                          var t = this,
                            n = arguments;
                          return new Promise(function (i, r) {
                            var o = e.apply(t, n);
                            function a(e) {
                              lb(o, i, r, a, s, 'next', e);
                            }
                            function s(e) {
                              lb(o, i, r, a, s, 'throw', e);
                            }
                            a(void 0);
                          });
                        });
                    return function () {
                      return t.apply(this, arguments);
                    };
                  })(),
                },
                {
                  key: 'setBounceLightColor',
                  value: function (e) {
                    var t = {
                        r: [58 / 255, 135 / 255, 69 / 255, 147 / 255],
                        g: [42 / 255, 54 / 255, 55 / 255, 119 / 255],
                        b: [20 / 255, 23 / 255, 37 / 255, 80 / 255],
                      },
                      n = Math.floor(e),
                      i = e - n,
                      r = t.r[n % 4],
                      o = t.g[n % 4],
                      a = t.b[n % 4],
                      s = t.r[(n + 1) % 4] - t.r[n % 4],
                      u = t.g[(n + 1) % 4] - t.g[n % 4],
                      l = t.b[(n + 1) % 4] - t.b[n % 4],
                      c = t.r[0],
                      p = t.g[0],
                      h = t.b[0],
                      f = this.sceneAmounts[4],
                      d = c + (r + s * i - c) * f,
                      v = p + (o + u * i - p) * f,
                      m = h + (a + l * i - h) * f;
                    this.bounceLight.color = new $e.Color(d, v, m);
                  },
                },
                {
                  key: 'setSceneProps',
                  value: function (e, t) {
                    for (var n = 0; n < this.sceneProps.length; n++)
                      if ('defaults' == this.sceneProps[n].id)
                        for (var i in this.sceneProps[n])
                          this[i] = this.sceneProps[n][i];
                    for (n = 0; n < this.sceneProps.length; n++)
                      if (this.sceneProps[n].id == e)
                        for (var i in this.sceneProps[n])
                          this[i] = this.sceneProps[n][i];
                  },
                },
                {
                  key: 'setCurrentBounceColor',
                  value: function () {
                    this.setBounceLightColor(
                      this.floorMaterial.uniforms.inmap.value,
                    );
                  },
                },
                {
                  key: 'updatePlantPosistion',
                  value: function () {
                    for (var e = 0, t = 0; t < this.plantGridAmount.length; t++) {
                      for (var n = this.plantGridAmount[t], i = 0; i < n; i++) {
                        var r = this.plants[i + e],
                          o = (i - 0.5 * (n - 1)) * this.plantSpacing,
                          a = t * -this.plantSpacing;
                        (r.container.position.x +=
                          0.1 * (o - r.container.position.x)),
                          (r.container.position.z +=
                            0.1 * (a - r.container.position.z));
                      }
                      e += n;
                    }
                    e = 0;
                    for (var s = 0; s < this.bgPlantsAmount.length; s++) {
                      for (var u = this.bgPlantsAmount[s], l = 0; l < u; l++) {
                        var c = this.instances.instances[e + l],
                          p = this.plantSpacing;
                        c.position.x = p * l - 0.5 * (u - 1) * p;
                        var h = this.plantGridAmount.length * -this.plantSpacing;
                        (c.position.z = h + -s * this.plantSpacing * 1 + (l % 2)),
                          c.updateInstance();
                      }
                      e += u;
                    }
                  },
                },
                {
                  key: 'updateSunPosistion',
                  value: function () {
                    (this.sunLight.position.z = 5 * Math.cos(this.sunAngle)),
                      (this.sunLight.position.x = 5 * Math.sin(this.sunAngle)),
                      (this.sunLight.position.y = this.sunHeight);
                  },
                },
                {
                  key: 'setupPost',
                  value: function () {
                    var e = window.innerWidth,
                      t = window.innerHeight;
                    this.postCamera = new $e.OrthographicCamera(
                      -1,
                      1,
                      1,
                      -1,
                      0,
                      1,
                    );
                    var n = $e.FXAAShader.uniforms;
                    (n.tDiffuse.value = this.renderTarget.texture),
                      (n.resolution.value.x =
                        1 / (window.innerWidth * this.masterDPI)),
                      (n.resolution.value.y =
                        1 / (window.innerHeight * this.masterDPI)),
                      (this.fxaaMaterial = new $e.ShaderMaterial({
                        defines: this.defines,
                        vertexShader: $e.FXAAShader.vertexShader,
                        fragmentShader: $e.FXAAShader.fragmentShader,
                        uniforms: n,
                      })),
                      (this.blurPass1Material = new $e.ShaderMaterial({
                        defines: this.defines,
                        vertexShader: ib,
                        fragmentShader: rb,
                        uniforms: {
                          cameraNear: { value: this.camera.near },
                          cameraFar: { value: this.camera.far },
                          tDiffuse: { value: this.renderTarget2.texture },
                          tDepth: { value: this.renderTarget.depthTexture },
                          depthTexture: { value: null },
                          iResolution: { value: new $e.Vector2(e, t) },
                          center: { value: new $e.Vector2(0.5, 0.5) },
                          radius: { value: this.blurRadius },
                          minBlur: { value: 0 },
                          focusPoint: { value: 0 },
                          iTime: { value: 1 },
                        },
                      })),
                      (this.blurPass2Material = new $e.ShaderMaterial({
                        defines: this.defines,
                        vertexShader: ob,
                        fragmentShader: ab,
                        uniforms: {
                          cameraNear: { value: this.camera.near },
                          cameraFar: { value: this.camera.far },
                          tDiffuse: { value: this.renderTarget3.texture },
                          tDepth: { value: this.renderTarget.depthTexture },
                          depthTexture: { value: null },
                          iResolution: { value: new $e.Vector2(e, t) },
                          center: { value: new $e.Vector2(0.5, 0.5) },
                          radius: { value: this.blurRadius },
                          minBlur: { value: 0 },
                          focusPoint: { value: 0 },
                          iTime: { value: 1 },
                        },
                      })),
                      (this.blurPass3Material = new $e.ShaderMaterial({
                        defines: this.defines,
                        vertexShader: sb,
                        fragmentShader: ub,
                        uniforms: {
                          cameraNear: { value: this.camera.near },
                          cameraFar: { value: this.camera.far },
                          tDiffuse: { value: this.renderTarget2.texture },
                          tDepth: { value: this.renderTarget.depthTexture },
                          depthTexture: { value: null },
                          iResolution: { value: new $e.Vector2(e, t) },
                          center: { value: new $e.Vector2(0.5, 0.5) },
                          radius: { value: this.blurRadius },
                          minBlur: { value: 0 },
                          focusPoint: { value: 0 },
                          iTime: { value: 1 },
                        },
                      })),
                      (this.blurPass4Material = new $e.ShaderMaterial({
                        defines: this.defines,
                        vertexShader: ib,
                        fragmentShader: rb,
                        uniforms: {
                          cameraNear: { value: this.camera.near },
                          cameraFar: { value: this.camera.far },
                          tDiffuse: { value: this.renderTarget2.texture },
                          tDepth: { value: this.renderTarget.depthTexture },
                          depthTexture: { value: null },
                          iResolution: { value: new $e.Vector2(e, t) },
                          center: { value: new $e.Vector2(0.5, 0.5) },
                          radius: { value: 0 },
                          minBlur: { value: this.minBlur },
                          focusPoint: { value: 0 },
                          iTime: { value: 1 },
                        },
                      })),
                      (this.blurPass5Material = new $e.ShaderMaterial({
                        defines: this.defines,
                        vertexShader: ob,
                        fragmentShader: ab,
                        uniforms: {
                          cameraNear: { value: this.camera.near },
                          cameraFar: { value: this.camera.far },
                          tDiffuse: { value: this.renderTarget3.texture },
                          tDepth: { value: this.renderTarget.depthTexture },
                          depthTexture: { value: null },
                          iResolution: { value: new $e.Vector2(e, t) },
                          center: { value: new $e.Vector2(0.5, 0.5) },
                          radius: { value: 0 },
                          minBlur: { value: this.minBlur },
                          focusPoint: { value: 0 },
                          iTime: { value: 1 },
                        },
                      })),
                      (this.blurPass6Material = new $e.ShaderMaterial({
                        defines: this.defines,
                        vertexShader: sb,
                        fragmentShader: ub,
                        uniforms: {
                          cameraNear: { value: this.camera.near },
                          cameraFar: { value: this.camera.far },
                          tDiffuse: { value: this.renderTarget2.texture },
                          tDepth: { value: this.renderTarget.depthTexture },
                          depthTexture: { value: null },
                          iResolution: { value: new $e.Vector2(e, t) },
                          center: { value: new $e.Vector2(0.5, 0.5) },
                          radius: { value: 0 },
                          minBlur: { value: this.minBlur },
                          focusPoint: { value: 0 },
                          iTime: { value: 1 },
                        },
                      })),
                      (this.foregroundPost = new $e.ShaderMaterial({
                        defines: this.defines,
                        vertexShader: Jg,
                        fragmentShader: eb,
                        uniforms: {
                          tDiffuse1: { value: this.renderTarget3.texture },
                          tDiffuse2: { value: this.renderTarget4.texture },
                          noise: { value: this.postNoiseTexture },
                          iResolution: { value: new $e.Vector2(256, 256) },
                          center: { value: new $e.Vector2(0.5, 0.5) },
                          iTime: { value: 1 },
                        },
                      })),
                      (this.copyMaterial = new $e.ShaderMaterial({
                        vertexShader: Xg,
                        fragmentShader: Gg,
                        uniforms: {
                          tDiffuse: { value: this.renderTarget3.texture },
                        },
                      }));
                    var i = new $e.PlaneBufferGeometry(2, 2),
                      r = new $e.Mesh(i, this.blurPass1Material),
                      o = new $e.Mesh(i, this.blurPass2Material),
                      a = new $e.Mesh(i, this.blurPass3Material),
                      s = new $e.Mesh(i, this.copyMaterial),
                      u = new $e.Mesh(i, this.fxaaMaterial);
                    (this.fxaaScene = new $e.Scene()),
                      this.fxaaScene.add(u),
                      (this.copyScene = new $e.Scene()),
                      this.copyScene.add(s),
                      (this.postScene = new $e.Scene()),
                      this.postScene.add(r),
                      (this.postScene2 = new $e.Scene()),
                      this.postScene2.add(o),
                      (this.postScene3 = new $e.Scene()),
                      this.postScene3.add(a),
                      (this.sceneEffectMesh = new $e.Mesh(i, this.postMaterial)),
                      (this.postSceneEffect = new $e.Scene()),
                      this.postSceneEffect.add(this.sceneEffectMesh);
                    var l = new $e.Mesh(i, this.blurPass4Material),
                      c = new $e.Mesh(i, this.blurPass5Material),
                      p = new $e.Mesh(i, this.blurPass6Material);
                    (this.postScene4 = new $e.Scene()),
                      this.postScene4.add(l),
                      (this.postScene5 = new $e.Scene()),
                      this.postScene5.add(c),
                      (this.postScene6 = new $e.Scene()),
                      this.postScene6.add(p);
                    var h = new $e.Mesh(i, this.foregroundPost);
                    (this.postScene7 = new $e.Scene()), this.postScene7.add(h);
                  },
                },
                {
                  key: 'onMouseMove',
                  value: function (e) {
                    (this.mouseX = e.pageX / window.innerWidth - 0.5),
                      (this.mouseY = e.pageY / window.innerHeight - 0.5);
                  },
                },
                { key: 'onKeyDown', value: function (e) {} },
                {
                  key: 'onPlantLoaded',
                  value: function (e) {
                    (this.object = e.scene.children[0]),
                      (this.mesh = this.object.children[1]);
                    for (var t = 0; t < this.plantGridAmount.length; t++)
                      for (var n = this.plantGridAmount[t], i = 0; i < n; i++) {
                        var r = this.setupPlant(this.object);
                        (r.container.position.x =
                          (i - 0.5 * (n - 1)) * this.plantSpacing),
                          this.offsetPlantLayers &&
                            (r.container.position.x +=
                              (n % 2) * this.plantSpacing * 0.5),
                          (r.container.position.z = t * -this.plantSpacing),
                          (r.index = { x: i, z: t });
                      }
                    this.setCurrentSceneProps(0);
                  },
                },
                {
                  key: 'onForegroundPlantLoaded',
                  value: function (e) {
                    (this.foregroundObject = e.scene.children[0]),
                      (this.skinnedMesh = this.foregroundObject.children[1]),
                      (this.skinnedMesh2 = this.foregroundObject.children[2]),
                      (this.skinnedMesh3 = this.foregroundObject.children[3]),
                      (this.skinnedMesh4 = this.foregroundObject.children[4]),
                      this.foregroundObject.scale.set(0.9, 0.9, 0.9),
                      (this.foregroundObject.position.y = -40),
                      (this.foregroundObject.position.z = 100),
                      (this.foregroundObject.rotation.y = 0.5 * Math.PI),
                      (this.foregroundPlantMaterial = new ng(
                        {
                          map: this.foregroundPlantTexture,
                          skinning: !0,
                          transparent: !0,
                          premultipliedAlpha: !0,
                          alphaTest: 0.02,
                          side: $e.DoubleSide,
                        },
                        {
                          uniforms: {
                            foregroundTexture: {
                              type: 'sampler2D',
                              value: this.foregroundPlantTexture,
                            },
                            foregroundShadowTexture: {
                              type: 'sampler2D',
                              value: this.foregroundShadowPlantTexture,
                            },
                            foregroundScreenTexture: {
                              type: 'sampler2D',
                              value: this.foregroundScreenPlantTexture,
                            },
                            energyMask: {
                              type: 'sampler2D',
                              value: this.foregroundPlantEnergyTexture,
                            },
                            iResolution: {
                              type: 'vec2',
                              value: new $e.Vector2(256, 256),
                            },
                            center: {
                              type: 'float',
                              value: new $e.Vector2(0.5, 0.5),
                            },
                            iTime: { type: 'float', value: 1 },
                            lightning: { type: 'float', value: 0 },
                            switchTime: { type: 'float', value: 0 },
                            sunAmount: { type: 'float', value: 1 },
                            energyAmount: { type: 'float', value: 0 },
                            vertPos: {
                              type: 'vec3',
                              value: new $e.Vector3(),
                              varType: 'varying ',
                            },
                            deathAmount: { type: 'float', value: 0 },
                          },
                          vertexShader: tb,
                          fragmentShader: nb,
                        },
                      )),
                      (this.skinnedMesh.material = this.foregroundPlantMaterial),
                      (this.skinnedMesh2.material = this.foregroundPlantMaterial),
                      (this.skinnedMesh3.material = this.foregroundPlantMaterial),
                      (this.skinnedMesh4.material = this.foregroundPlantMaterial),
                      (this.foregroundPlantMaterial.skinning = !0),
                      (this.foregroundPlant = {
                        stem: [],
                        leafs: [],
                        container: this.skinnedMesh,
                      }),
                      this.traverseBones(
                        this.foregroundObject.children[0],
                        null,
                        this.foregroundPlant.stem,
                        this.foregroundPlant.leafs,
                      ),
                      this.foregroundScene.add(this.foregroundObject);
                  },
                },
                {
                  key: 'createNewLeafData',
                  value: function (e, t, n) {
                    var i = new $e.Quaternion();
                    t.getWorldQuaternion(i);
                    var r = {
                      bone: t,
                      rotation: t.rotation.toVector3(),
                      baseWorldQuat: i,
                      baseWorldEuler: new $e.Euler().setFromQuaternion(i),
                      rotationTarget: t.rotation.toVector3(),
                      fallRotation: new $e.Vector3(),
                      parent: n,
                      isFalling: !1,
                      rotationSpeed: new $e.Vector3(0, 0, 0),
                    };
                    e.push(r);
                  },
                },
                {
                  key: 'traverseBones',
                  value: function (e, t, n, i) {
                    t || this.createNewLeafData(n, e);
                    for (var r = 0; r < e.children.length; r++) {
                      var o = e.children[r];
                      if ('stem' == o.name.substring(0, 4).toLowerCase())
                        this.createNewLeafData(n, o, e);
                      else if (
                        'stem' == o.parent.name.substring(0, 4).toLowerCase()
                      ) {
                        var a = { leafElements: [] };
                        i.push(a), this.createNewLeafData(a.leafElements, o, e);
                      } else
                        this.createNewLeafData(
                          i[i.length - 1].leafElements,
                          o,
                          e,
                        );
                      this.traverseBones(o, e, n, i);
                    }
                  },
                },
                {
                  key: 'setupPlant',
                  value: function (e) {
                    var t = new $e.Object3D();
                    t.position.y = -20;
                    var n = { container: t, leafs: [], stem: [] };
                    this.plants.push(n), this.scene.add(t);
                    var i = (function (e) {
                      var t = e.clone(!0),
                        n = {};
                      e.traverse(function (e) {
                        e.isSkinnedMesh && (n[e.name] = e);
                      });
                      var i = {},
                        r = {};
                      for (var o in (t.traverse(function (e) {
                        e.isBone && (i[e.name] = e),
                          e.isSkinnedMesh && (r[e.name] = e);
                      }),
                      n)) {
                        for (
                          var a = n[o].skeleton, s = r[o], u = [], l = 0;
                          l < a.bones.length;
                          ++l
                        ) {
                          var c = i[a.bones[l].name];
                          u.push(c);
                        }
                        s.bind(
                          new THREE.Skeleton(u, a.boneInverses),
                          s.matrixWorld,
                        );
                      }
                      return t;
                    })(this.object);
                    if (
                      ((i.children[0].rotation.y = this.plants.length),
                      (i.children[1].material = this.bgPlantMaterial),
                      this.leafMaterials.push(i.children[1].material),
                      this.showSkeletonHelpers)
                    ) {
                      var r = new $e.SkeletonHelper(i);
                      (r.material.linewidth = 3), this.scene.add(r);
                    }
                    return (
                      this.traverseBones(i.children[0], null, n.stem, n.leafs),
                      t.add(i),
                      n
                    );
                  },
                },
                {
                  key: 'setBlurShaderUniforms',
                  value: function (e, t, n) {
                    (0 != n && null != n) ||
                      ((this.blurPass1Material.uniforms[e].value = t),
                      (this.blurPass2Material.uniforms[e].value = t),
                      (this.blurPass3Material.uniforms[e].value = t)),
                      (1 != n && null != n) ||
                        ((this.blurPass4Material.uniforms[e].value = t),
                        (this.blurPass5Material.uniforms[e].value = t),
                        (this.blurPass6Material.uniforms[e].value = t));
                  },
                },
                {
                  key: 'getWindPower',
                  value: function (e, t) {
                    var n = this.windDirectionHistory.length - 1,
                      i =
                        (((n - Math.floor(n * (0.01 * e) * (0.05 * t))) % n) +
                          n) %
                        n;
                    return this.windDirectionHistory[i];
                  },
                },
                { key: 'animatePlantPart', value: function (e) {} },
                {
                  key: 'setAllSceneProps',
                  value: function (e) {
                    var t = 0;
                    (this.windPower = 0),
                      (this.sunAngle = 0),
                      (this.sunBrightness = 0),
                      (this.sunHeight = 0),
                      (this.ambientIntensity = 0),
                      (this.plantSpacing = 0),
                      (this.cameraZoomMultiplier = 0),
                      (this.cameraRot = 0),
                      (this.sunColor = new $e.Color(16777215));
                    for (var n = 0; n < e.length; n++)
                      (this.sceneAmounts[n] = e[n].value),
                        (t += this.sceneProps[n].minBlur * this.sceneAmounts[n]),
                        (this.windPower +=
                          this.sceneProps[n].windPower * this.sceneAmounts[n]),
                        (this.sunAngle +=
                          this.sceneProps[n].sunAngle * this.sceneAmounts[n]),
                        (this.sunBrightness +=
                          this.sceneProps[n].sunBrightness *
                          this.sceneAmounts[n]),
                        (this.sunHeight +=
                          this.sceneProps[n].sunHeight * this.sceneAmounts[n]),
                        (this.ambientIntensity +=
                          this.sceneProps[n].ambientIntensity *
                          this.sceneAmounts[n]),
                        (this.plantSpacing +=
                          this.sceneProps[n].plantSpacing * this.sceneAmounts[n]),
                        (this.cameraZoomMultiplier +=
                          this.sceneProps[n].cameraZoomMultiplier *
                          this.sceneAmounts[n]),
                        (this.cameraRot +=
                          this.sceneProps[n].cameraRot * this.sceneAmounts[n]),
                        this.sunColor.lerp(
                          this.sceneProps[n].sunColor,
                          this.sceneAmounts[n],
                        );
                    this.setBlurShaderUniforms(
                      'minBlur',
                      t * this.blurMultiplier,
                      1,
                    ),
                      (this.sunLight.color = this.sunColor),
                      (this.bgMaterial.color = new $e.Color(
                        0.5 + this.sunBrightness / 4,
                        0.5 + this.sunBrightness / 4,
                        0.5 + this.sunBrightness / 4,
                      )),
                      (this.sunLight.intensity = this.sunBrightness),
                      (this.floorMaterial.uniforms.intensity.value =
                        0.5 + this.sunBrightness / 4),
                      (this.ambientLight.color = new $e.Color(
                        this.ambientIntensity,
                        this.ambientIntensity,
                        this.ambientIntensity,
                      )),
                      this.updateSunPosistion(),
                      (this.camera.rotation.x = this.cameraRot),
                      this.camera.setFocalLength(45 / this.cameraZoomMultiplier),
                      this.camera.updateProjectionMatrix();
                  },
                },
                {
                  key: 'setCurrentSceneProps',
                  value: function (e) {
                    this.inSceneNum = e;
                    var t = Math.floor(e),
                      n = e - t;
                    this.currentSceneFract = n;
                    var i = this.sceneProps[t],
                      r = this.sceneProps[
                        Math.min(this.sceneProps.length - 1, t + 1)
                      ];
                    for (var o in i) {
                      var a = i[o],
                        s = r[o];
                      'number' == typeof a
                        ? (this[o] = a + (s - a) * n)
                        : 'string' == typeof a
                        ? (this[o] = a)
                        : a instanceof $e.Color && (this[o] = a.lerp(s, n));
                    }
                    (this.currentScene = i.id),
                      (this.sunLight.intensity = this.sunBrightness / 40),
                      (this.floorMaterial.uniforms.intensity.value =
                        0.5 + this.sunBrightness / 4),
                      (this.ambientLight.color = new $e.Color(
                        this.ambientIntensity,
                        this.ambientIntensity,
                        this.ambientIntensity,
                      )),
                      this.setBlurShaderUniforms(
                        'minBlur',
                        this.minBlur * this.blurMultiplier,
                        1,
                      ),
                      this.updateSunPosistion();
                  },
                },
                {
                  key: 'preCompile',
                  value: function () {
                    this.renderer.compile(this.scene, this.camera),
                      this.renderer.compile(this.fxaaScene, this.postCamera),
                      this.renderer.compile(this.postScene, this.postCamera),
                      this.renderer.compile(this.postScene2, this.postCamera),
                      this.renderer.compile(this.postScene3, this.postCamera),
                      (this.sceneEffectMesh.material = this.postMaterial),
                      this.renderer.compile(
                        this.sceneEffectMesh,
                        this.postCamera,
                      ),
                      this.renderer.compile(this.postScene4, this.postCamera),
                      this.renderer.compile(this.postScene5, this.postCamera),
                      this.renderer.compile(this.postScene6, this.postCamera),
                      this.renderer.compile(this.foregroundScene, this.camera),
                      this.renderer.compile(this.postScene7, this.postCamera);
                  },
                },
                {
                  key: 'getSceneDistance',
                  value: function (e) {
                    return (
                      0.5 *
                      (Math.sin(
                        Math.max(0, 1 - Math.abs(this.inSceneNum - e)) * Math.PI -
                          0.5 * Math.PI,
                      ) +
                        1)
                    );
                  },
                },
                {
                  key: 'tweenProp',
                  value: function (e, t) {
                    return (e += Math.max(
                      -0.002,
                      Math.min(0.002, 0.1 * (t - e)),
                    ));
                  },
                },
                {
                  key: 'onSwitchScene',
                  value: function () {
                    (this.foregroundPlantMaterial.customUniforms.switchTime.value = 0),
                      (this.bgPlantMaterial.customUniforms.switchTime.value = 0);
                    for (
                      var e = this.foregroundPlant.stem,
                        t =
                          (this.foregroundPlant.leaf,
                          Math.max(-1, Math.min(1, 1e3 * (Math.random() - 0.5)))),
                        n = 0;
                      n < e.length;
                      n++
                    ) {
                      var i = e[n];
                      (i.rotationSpeed.z += 0.8 * n * 1e-4 * t),
                        (i.rotationSpeed.x += 0.8 * n * 1e-4 * t),
                        (i.rotationSpeed.y += 4e-4 * n * t);
                    }
                    for (
                      var r = this.foregroundPlant, o = (r.leafs[o], 0);
                      o < this.foregroundPlant.leafs.length;
                      o++
                    ) {
                      var a = r.leafs[o].leafElements;
                      for (n = 0; n < a.length; n++) {
                        a[n].rotationSpeed.y -= 0.01;
                      }
                    }
                  },
                },
                {
                  key: 'update',
                  value: function (e, t) {
                    if (0 != this.plants.length) {
                      this.stats && this.stats.end(),
                        this.stats && this.stats.begin();
                      var n = performance.now();
                      this.ticker++,
                        this.setBlurShaderUniforms('iTime', n),
                        (this.postMaterial.uniforms.iTime.value = n),
                        (this.bgPlantMaterial.customUniforms.iTime.value = n),
                        (this.foregroundPlantMaterial.customUniforms.iTime.value = n),
                        (this.floorMaterial.uniforms.mouseY.value =
                          10 * this.mouseY),
                        (this.floorMaterial.uniforms.iTime.value = n),
                        (this.foregroundPost.uniforms.iTime.value = n);
                      var i = Math.max(0, 20 - (this.ticker % 1e3));
                      (this.postMaterial.uniforms.rainAmount.value = this.sceneAmounts[1]),
                        (this.postMaterial.uniforms.droughtAmount.value = this.sceneAmounts[2]),
                        (this.postMaterial.uniforms.diseaseAmount.value = this.sceneAmounts[3]),
                        (this.farPlantsMaterial.uniforms.rainAmount.value = this.sceneAmounts[1]),
                        (this.farPlantsMaterial.uniforms.diseaseAmount.value = this.sceneAmounts[3]),
                        (this.foregroundPlantMaterial.customUniforms.energyAmount.value = this.sceneAmounts[4]),
                        (this.wetAmountTo = this.sceneAmounts[1]),
                        (this.sickAmountTo = 0.3 + 0.3 * this.sceneAmounts[3]),
                        (this.deathAmountTo =
                          this.sceneAmounts[2] +
                          0.3 * this.sceneAmounts[3] +
                          0.3 * this.sceneAmounts[5]),
                        (this.sunAmountTo = 1 - this.sceneAmounts[1]),
                        (this.wetAmount = this.tweenProp(
                          this.wetAmount,
                          this.wetAmountTo,
                        )),
                        (this.sickAmount = this.tweenProp(
                          this.sickAmount,
                          this.sickAmountTo,
                        )),
                        (this.deathAmount = this.tweenProp(
                          this.deathAmount,
                          this.deathAmountTo,
                        )),
                        (this.sunAmount = this.tweenProp(
                          this.sunAmount,
                          this.sunAmountTo,
                        )),
                        (this.lightningLight.intensity =
                          i * Math.random() * this.sceneAmounts[1]),
                        (this.floorMaterial.uniforms.lightning.value = this.lightningLight.intensity),
                        (this.camYOffset = Math.max(
                          Math.min(this.camYOffset, 1),
                          0,
                        )),
                        (this.bgPlantMaterial.roughness =
                          0.2 - 0.05 * this.wetAmount),
                        (this.bgPlantMaterial.customUniforms.deathAmount.value =
                          this.deathAmount + 0.4 * this.sickAmount),
                        (this.bgPlantMaterial.customUniforms.diseaseAmount.value = this.sickAmount),
                        (this.floorMaterial.uniforms.puddleAmount.value =
                          0.4 * this.wetAmount),
                        (this.inSoil += 0.01),
                        (this.inSoil = this.inSoil % 4),
                        (this.floorMaterial.uniforms.inmap.value = this.inSoil),
                        (this.floorMaterial.uniforms.soilAnim.value = this.sceneAmounts[4]),
                        (this.floorMaterial.uniforms.sunAmount.value =
                          this.sunBrightness / 6),
                        (this.floorMaterial.uniforms.deathAmount.value =
                          this.deathAmount / 6),
                        (this.floorMaterial.uniforms.windSpeed.value =
                          1 + this.windPower),
                        (this.postMaterial.uniforms.lightning.value = i),
                        (this.farPlantsMaterial.uniforms.deathAmount.value = this.deathAmount),
                        (this.foregroundPlantMaterial.customUniforms.sunAmount.value =
                          this.sunBrightness / 6),
                        (this.foregroundPlantMaterial.customUniforms.lightning.value = this.lightningLight.intensity),
                        this.foregroundPlantMaterial.customUniforms.switchTime
                          .value++,
                        this.bgPlantMaterial.customUniforms.switchTime.value++,
                        (this.bounceLight.intensity = this.sunBrightness / 10),
                        (this.ambientLight.color = new $e.Color(
                          this.ambientIntensity,
                          this.ambientIntensity,
                          this.ambientIntensity,
                        )),
                        (this.bgMaterial.color = new $e.Color(
                          0.5 + this.sunBrightness / 4,
                          0.5 + this.sunBrightness / 4,
                          0.5 + this.sunBrightness / 4,
                        )),
                        this.updateSunPosistion(),
                        this.updatePlantPosistion(),
                        this.setCurrentBounceColor();
                      var r = (Math.random() - 0.3) * -this.windPower * 3e-6;
                      this.windDirection[0].set(0, 0.4 * r, r);
                      for (var o = 1; o < this.windDirection.length; o++) {
                        var a = this.windDirection[o],
                          s = this.windDirection[o - 1];
                        a.addScaledVector(s, 0.8), a.multiplyScalar(0.95);
                      }
                      var u = this.windDirection[
                        Math.floor(
                          (this.windDirection.length - 1) * this.windTurbulence,
                        )
                      ];
                      for (
                        this.windDirectionHistory.push(u.clone());
                        this.windDirectionHistory.length < 2;
  
                      )
                        this.windDirectionHistory.push(u.clone());
                      for (
                        ;
                        this.windDirectionHistory.length >
                          this.windHistoryLength &&
                        this.windDirectionHistory.length > 2;
  
                      )
                        this.windDirectionHistory.shift();
                      (this.camera.position.x +=
                        0.02 *
                        ((store.state.pointer.positionNorm[0] - 0.5) *
                          this.mouseControlMovementX -
                          this.camera.position.x)),
                        (this.foregroundObject.rotation.z =
                          1.5 * this.getWindPower(1, 0).z),
                        (this.foregroundObject.rotation.y =
                          0.5 * Math.PI + 1 * this.getWindPower(1, 0).z),
                        (this.cameraBaseY = 340 - 350 * t),
                        (this.cameraOffsetY +=
                          0.02 *
                          ((0.5 - store.state.pointer.positionNorm[1]) *
                            this.mouseControlMovementY -
                            this.cameraOffsetY)),
                        (this.camera.position.y =
                          this.cameraBaseY + this.cameraOffsetY),
                        (this.camera.rotation.y = Math.max(
                          100,
                          0.001 * this.camera.position.x,
                        )),
                        (this.camera.rotation.x =
                          -5e-4 * (330 - this.camera.position.y)),
                        (this.postMaterial.uniforms.sundepth.value =
                          0.15 * Math.sin(this.camera.position.y / 5) +
                          0.15 * Math.sin(this.camera.position.y / 2) +
                          0.15 * Math.cos(this.camera.position.y / 4)),
                        (this.camera.rotation.y = 0.005 * this.camera.position.x);
                      for (var l = 0; l < this.farPlants.length; l++) {
                        var c = this.farPlants[l],
                          p = c.mesh,
                          h = (c.index, 1),
                          f = 1,
                          d = (v = (x = this.getWindPower(
                            0.1 * c.index.x,
                            0.1 * c.index.z,
                          )).clone()).length();
                        (v.z =
                          0.2 *
                          (Math.sin(
                            0.01 *
                              n *
                              (1 + 0.035 * d + 0.1 * c.index.x + 0.1 * c.index.z),
                          ) +
                            1) *
                          v.z),
                          (c.rotationSpeed.x += 0.1 * v.z),
                          (c.rotationSpeed.y += 0.6 * v.y),
                          (c.rotationSpeed.z += 0.6 * v.z),
                          (c.rotationSpeed = c.rotationTarget
                            .clone()
                            .sub(c.rotation)
                            .multiplyScalar(0.5 * this.drag[1])
                            .addScaledVector(
                              c.rotationSpeed,
                              0.95 * this.elastic[1],
                            )),
                          c.rotation.add(c.rotationSpeed);
                        p.rotation.clone();
                        p.lookAt(this.camera.position),
                          (p.rotation.x = c.rotation.x),
                          (p.rotation.z = c.rotation.z),
                          p.updateInstance();
                      }
                      var v = new $e.Vector3(),
                        m = new $e.Vector3(),
                        g = (new $e.Quaternion(), 1);
                      m = (R = this.foregroundPlant.stem)[0].rotation;
                      for (
                        var b = new $e.Vector3(), y = 0;
                        y < this.foregroundPlant.stem.length;
                        y++
                      ) {
                        var w = R[y];
                        y > 0 && (C = R[y - 1]);
                        var x = this.getWindPower(1, 1),
                          P = this.drag[1],
                          _ = this.elastic[1];
                        (w.rotationSpeed.x +=
                          Math.sin(0.3 * w.bone.position.y + 0.2 * this.ticker) *
                          w.bone.position.y *
                          1e-4 *
                          x.z),
                          (w.rotationSpeed.z -=
                            Math.sin(
                              0.3 * w.bone.position.y + 0.2 * this.ticker,
                            ) *
                            w.bone.position.y *
                            1e-4 *
                            x.z),
                          (w.rotationSpeed.y +=
                            Math.sin(
                              0.3 * w.bone.position.y + 0.2 * this.ticker,
                            ) *
                            w.bone.position.y *
                            1e-4 *
                            x.z),
                          (w.rotationSpeed = w.rotationTarget
                            .clone()
                            .sub(w.rotation)
                            .multiplyScalar(P)
                            .addScaledVector(w.rotationSpeed, 0.9)),
                          w.rotation.add(w.rotationSpeed),
                          (w.bone.rotation.x = w.rotation.x),
                          (w.bone.rotation.y = w.rotation.y),
                          (w.bone.rotation.z = w.rotation.z);
                      }
                      for (
                        var k = this.foregroundPlant, O = 0;
                        O < this.foregroundPlant.leafs.length;
                        O++
                      ) {
                        F = O / k.leafs.length;
                        var S = k.leafs[O].leafElements;
                        for (y = 0; y < S.length; y++) {
                          var T = S[y];
                          y > 0 && (U = S[y - 1]);
                          var A = y / S.length,
                            M = 1;
                          (T.rotationSpeed.x +=
                            Math.sin(
                              0.3 * T.bone.position.y +
                                0.3 * T.bone.position.x +
                                0.25 * this.ticker,
                            ) *
                            T.bone.position.y *
                            0.001 *
                            x.z),
                            (T.rotationSpeed.z -=
                              Math.sin(
                                0.3 * T.bone.position.y +
                                  0.3 * T.bone.position.x +
                                  0.4 * this.ticker,
                              ) *
                              T.bone.position.y *
                              0.001 *
                              x.z),
                            (T.rotationSpeed.y +=
                              Math.sin(
                                0.3 * T.bone.position.y +
                                  0.3 * T.bone.position.x +
                                  0.4 * this.ticker,
                              ) *
                              T.bone.position.y *
                              0.001 *
                              x.z),
                            U &&
                              T.rotationSpeed.addScaledVector(
                                U.rotationSpeed,
                                0.9,
                              );
                          (P = this.drag[1]), (_ = this.elastic[1]);
                          (T.rotationSpeed = T.rotationTarget
                            .clone()
                            .sub(T.rotation)
                            .multiplyScalar(P)
                            .addScaledVector(T.rotationSpeed, _)),
                            T.rotation.add(T.rotationSpeed),
                            T.bone.rotation.set(
                              T.rotation.x,
                              T.rotation.y,
                              T.rotation.z,
                            );
                        }
                      }
                      for (var j = 0; j < this.plants.length; j++) {
                        var F = 0,
                          R = (k = this.plants[j]).stem;
                        (m = new $e.Vector3()), new $e.Quaternion();
                        m = R[0].rotation;
                        b = new $e.Vector3();
                        this.fallAmount > j / this.plants.length && j % 4 == 0
                          ? (k.isFalling = !0)
                          : (k.isFalling = !1);
                        for (y = 0; y < R.length; y++) {
                          var C;
                          w = R[y];
                          y > 0 && (C = R[y - 1]);
                          A = y / R.length;
                          if (!k.isFalling || 0 != y) {
                            var E = 0;
                            (g = 1), (M = 1);
                            0 == y && (M = -1);
                            this.windDirectionHistory.length,
                              (x = this.getWindPower(k.index.x, k.index.z)),
                              (h = 1),
                              (f = 1);
                            v.copy(x),
                              v.applyAxisAngle(new $e.Vector3(0, 1, 0), -m.y);
                            var L =
                              0.3 * A +
                              0.5 * k.index.x +
                              Math.PI * n * 5e-4 +
                              0.3 * (F + A + 0.5 * k.index.x) +
                              Math.PI * n * 0.001 * 0.5;
                            d = v.length();
                            (v.x =
                              0.2 *
                              (Math.sin(0.01 * n * (1 + 0.0015 * d) + L) + 1) *
                              v.x),
                              (v.y =
                                0.2 *
                                (Math.sin(0.01 * n * (1 + 0.0015 * d) + L) + 1) *
                                v.y),
                              (v.z =
                                0.2 *
                                (Math.sin(0.01 * n * (1 + 0.0015 * d) + L) + 1) *
                                v.z),
                              (w.rotationSpeed.x +=
                                v.x * g * M * 0.5 * (f + (y / R.length) * h)),
                              (w.rotationSpeed.y +=
                                v.y * g * M * 0.5 * (f + (y / R.length) * h)),
                              (w.rotationSpeed.z +=
                                v.z * g * M * 0.25 * (f + (y / R.length) * h)),
                              (w.rotationSpeed.x += this.motion.x),
                              (w.rotationSpeed.y += this.motion.y),
                              (w.rotationSpeed.z += this.motion.z);
                            var I = this.deathAmount,
                              D = 0.06 * Math.sin(1 * y);
                            (b.z = 2 * I * D),
                              (b.x = 2 * I * D),
                              (b.y = 7 * I * D),
                              C &&
                                w.rotationSpeed.addScaledVector(
                                  C.rotationSpeed,
                                  0.6,
                                );
                          }
                          (P = this.drag[1]), (_ = this.elastic[1]);
                          k.isFalling && 0 == y
                            ? ((w.rotationSpeed.x += 5e-4),
                              (w.rotationSpeed.z -= 1e-4),
                              w.rotation.add(w.rotationSpeed),
                              w.rotation.x >= 0.3 * Math.PI &&
                                ((w.rotationSpeed.x *= -0.05),
                                (w.rotationSpeed.z *= -0.05)))
                            : ((w.rotationSpeed = w.rotationTarget
                                .clone()
                                .add(b)
                                .sub(w.rotation)
                                .multiplyScalar(P)
                                .addScaledVector(w.rotationSpeed, _)),
                              w.rotation.add(w.rotationSpeed)),
                            (w.bone.rotation.x = w.rotation.x),
                            (w.bone.rotation.y = w.rotation.y + E),
                            (w.bone.rotation.z = w.rotation.z);
                        }
                        for (O = 0; O < k.leafs.length; O++) {
                          F = O / k.leafs.length;
                          for (
                            S = k.leafs[O].leafElements, y = 0;
                            y < S.length;
                            y++
                          ) {
                            var U;
                            T = S[y];
                            y > 0 && (U = S[y - 1]);
                            (A = y / S.length), (E = 0), (M = 1);
                            0 == y && (M = -1);
                            this.windDirectionHistory.length,
                              (x = this.getWindPower(k.index.x, k.index.z)),
                              (h = 1),
                              (f = 1);
                            v.copy(x),
                              v.applyAxisAngle(new $e.Vector3(0, 1, 0), -m.y);
                            (L =
                              1 * (A + 0.5 * k.index.x) * Math.PI * n * 0.0025 -
                              (Math.sin(0.001 * n) + 1) +
                              1 *
                                (F + A + 0.5 * k.index.x) *
                                Math.PI *
                                n *
                                0.002 *
                                0.5),
                              (d = v.length());
                            (v.x =
                              0.2 *
                              (Math.sin(0.01 * n * (1 + 0.0015 * d) + L) + 1) *
                              v.x),
                              (v.y =
                                0.2 *
                                (Math.sin(0.01 * n * (1 + 0.0015 * d) + L) + 1) *
                                v.y),
                              (v.z =
                                0.2 *
                                (Math.sin(0.01 * n * (1 + 0.0015 * d) + L) + 1) *
                                v.z),
                              (T.rotationSpeed.x -=
                                v.x *
                                g *
                                M *
                                1 *
                                (1 - F) *
                                (f + (y / S.length) * h)),
                              (T.rotationSpeed.y -=
                                v.y *
                                g *
                                M *
                                1 *
                                (1 - F) *
                                (f + (y / S.length) * h)),
                              (T.rotationSpeed.z -=
                                v.z *
                                g *
                                M *
                                1 *
                                (1 - F) *
                                (f + (y / S.length) * h));
                            var z = Math.max(
                                0,
                                Math.min(
                                  1,
                                  2 * (this.deathAmount - ((0.25 * j) % 1)),
                                ),
                              ),
                              N =
                                (Math.floor(10 * z + 0.3 * O + 0.2 * j) / 20 +
                                  0.5 * z) *
                                (0.25 + 0.75 * (1 - A)) *
                                (Math.sin(0.5 * O + 0.4 * j) + 1) *
                                0.5;
                            Math.cos(T.baseWorldEuler.y - m.y),
                              Math.sin(T.baseWorldEuler.y - m.y);
                            b.set(0, 0, 0),
                              0 == O
                                ? (b.y = 0 + 2 * N)
                                : 1 == O
                                ? ((b.x = 0 - 1 * N), (b.y = 0 - 1 * N))
                                : 2 == O
                                ? (b.x = 0 + 2 * N)
                                : 3 == O
                                ? ((b.z = 0 - 1 * N),
                                  (b.x = 0 - 1 * N),
                                  (b.y = 0 + 1 * N))
                                : 4 == O
                                ? ((b.x = 0 + 1 * N), (b.y = 0 - 1 * N))
                                : 5 == O
                                ? ((b.z = 0 + 1 * N),
                                  (b.x = 0 - 1 * N),
                                  (b.y = 0 - 1 * N))
                                : 6 == O
                                ? (b.z = 0 + 2 * N)
                                : 7 == O
                                ? (b.x = 0 - 2 * N)
                                : 8 == O
                                ? (b.y = 0 - 2 * N)
                                : 9 == O &&
                                  ((b.x = 0 + 1 * N), (b.y = 0 + 1 * N)),
                              U &&
                                T.rotationSpeed.addScaledVector(
                                  U.rotationSpeed,
                                  0.9,
                                );
                            (P = this.drag[1]), (_ = this.elastic[1]);
                            (T.rotationSpeed = T.rotationTarget
                              .clone()
                              .add(b)
                              .sub(T.rotation)
                              .multiplyScalar(P)
                              .addScaledVector(T.rotationSpeed, _)),
                              T.rotation.add(T.rotationSpeed),
                              T.bone.rotation.set(
                                T.rotation.x,
                                T.rotation.y + E,
                                T.rotation.z,
                              );
                          }
                        }
                      }
                      this.renderer.setRenderTarget(this.renderTarget),
                        (this.renderTarget.scissorTest = !0),
                        this.renderTarget.scissor
                          .copy(e.scissor)
                          .multiplyScalar(this.renderTarget.height / e.height),
                        this.renderer.clear(),
                        this.renderer.render(this.scene, this.camera),
                        this.renderer.setRenderTarget(this.renderTarget2),
                        (this.renderTarget2.scissorTest = !0),
                        this.renderTarget2.scissor
                          .copy(e.scissor)
                          .multiplyScalar(this.renderTarget2.height / e.height),
                        this.renderer.render(
                          this.postSceneEffect,
                          this.postCamera,
                        ),
                        this.renderer.setRenderTarget(this.renderTarget3),
                        (this.renderTarget3.scissorTest = !0),
                        this.renderTarget3.scissor
                          .copy(e.scissor)
                          .multiplyScalar(this.renderTarget3.height / e.height),
                        this.renderer.render(this.postScene4, this.postCamera),
                        this.renderer.setRenderTarget(this.renderTarget2),
                        this.renderer.render(this.postScene5, this.postCamera),
                        this.renderer.setRenderTarget(this.renderTarget3),
                        this.renderer.render(this.postScene6, this.postCamera),
                        this.renderer.setRenderTarget(e),
                        this.renderer.clearDepth(),
                        this.renderer.render(this.copyScene, this.postCamera),
                        this.renderer.clearDepth(),
                        this.renderer.render(this.foregroundScene, this.camera),
                        (this.lastFrameTime = performance.now()),
                        (this.preMouseX = this.mouseX),
                        (this.preMouseY = this.mouseY);
                    }
                  },
                },
                {
                  key: 'resize',
                  value: function () {
                    var e = window.innerWidth,
                      t = window.innerHeight,
                      n = this.dpr * this.masterDPI;
                    this.dprOR, this.masterDPI;
                    this.renderTarget.setSize(e * n, t * n),
                      this.renderTarget2.setSize(e * n, t * n),
                      this.renderTarget3.setSize(e * n, t * n),
                      this.setBlurShaderUniforms('iResolution', {
                        x: window.innerWidth,
                        y: window.innerHeight,
                      }),
                      (this.camera.aspect = e / t),
                      this.camera.setFocalLength(45 / this.cameraZoomMultiplier),
                      this.camera.updateProjectionMatrix();
                  },
                },
              ]) && cb(n.prototype, i),
              r && cb(n, r),
              t
            );
          })();
        function yb(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function wb(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                yb(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                yb(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function xb(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Pb(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function _b(e) {
          return (_b = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function kb(e, t) {
          return (kb =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Ob(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var Sb,
          Tb = Object(u.a)(),
          Ab = { IN: 'in', LOOP: 'loop' },
          Mb =
            Qe(
              (db =
                Fi()(
                  (db =
                    Object(it.a)(rt)(
                      (Ob(
                        (vb = (function (e) {
                          function t() {
                            var e, n;
                            !(function (e, t) {
                              if (!(e instanceof t))
                                throw new TypeError(
                                  'Cannot call a class as a function',
                                );
                            })(this, t);
                            for (
                              var i = arguments.length, r = new Array(i), o = 0;
                              o < i;
                              o++
                            )
                              r[o] = arguments[o];
                            return (
                              ((n = Pb(
                                this,
                                (e = _b(t)).call.apply(e, [this].concat(r)),
                              )).options = {
                                layer: 1,
                                renderOrder: 0,
                                id: 'disease',
                              }),
                              (n.props = {
                                animState: Ab.IN,
                                size: 100,
                                scale: 1,
                                active: !1,
                                highlight: !1,
                                alpha: 0.2,
                                visible: !1,
                                ringProgress: 0,
                                click: [
                                  Tb,
                                  function (e) {
                                    return e.pointer.click;
                                  },
                                ],
                                pointerPosition: [
                                  Tb,
                                  function (e) {
                                    return e.pointer.position;
                                  },
                                ],
                                rollover: !1,
                                progress: -1,
                              }),
                              n
                            );
                          }
                          var n, i, r;
                          return (
                            (function (e, t) {
                              if ('function' != typeof t && null !== t)
                                throw new TypeError(
                                  'Super expression must either be null or a function',
                                );
                              (e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                  value: e,
                                  writable: !0,
                                  configurable: !0,
                                },
                              })),
                                t && kb(e, t);
                            })(t, le['a']),
                            (n = t),
                            (i = [
                              {
                                key: 'onSetup',
                                value: (function () {
                                  var e = wb(
                                    regeneratorRuntime.mark(function e() {
                                      return regeneratorRuntime.wrap(
                                        function (e) {
                                          for (;;)
                                            switch ((e.prev = e.next)) {
                                              case 0:
                                                return (
                                                  (this.tweens = {
                                                    inProgress: 0,
                                                  }),
                                                  (this.bbox = new $e.Box3()),
                                                  (this.innerObj = new $e.Object3D()),
                                                  this.innerObj.scale.setScalar(
                                                    0.001,
                                                  ),
                                                  this.object.add(this.innerObj),
                                                  (this.hitbox = new $e.Mesh(
                                                    et,
                                                    new $e.MeshBasicMaterial({
                                                      opacity: 0,
                                                      transparent: !0,
                                                    }),
                                                  )),
                                                  (this.hitbox.position.z = -10),
                                                  this.hitbox.layers.set(
                                                    this.options.layer,
                                                  ),
                                                  this.object.add(this.hitbox),
                                                  (this.textures = Ru.spritesheets.map(
                                                    function (e) {
                                                      return Qn(e.id);
                                                    },
                                                  )),
                                                  (this.mesh = new $e.Mesh(
                                                    et,
                                                    new $e.ShaderMaterial({
                                                      uniforms: {
                                                        uAlpha: { value: 0.5 },
                                                        uRotation: { value: 180 },
                                                        uProgress: { value: 0 },
                                                        uStrokeWidth: {
                                                          value:
                                                            2 *
                                                            Tb.state.viewport
                                                              .pixelRatio,
                                                        },
                                                        uSize: {
                                                          value: this.props.size,
                                                        },
                                                        uTextureFrame: {
                                                          type: 'v4',
                                                          value: new $e.Vector4(),
                                                        },
                                                        uTextureIdx: {
                                                          type: 'f',
                                                          value: 0,
                                                        },
                                                        tDiffuses: {
                                                          type: 'tv',
                                                          value: this.textures,
                                                        },
                                                      },
                                                      transparent: !0,
                                                      vertexShader: Je,
                                                      fragmentShader:
                                                        '#define GLSLIFY 1\nuniform float uSize;\nuniform float uStrokeWidth;\nuniform float uRotation;\nuniform float uProgress;\nuniform float uAlpha;\n\nuniform sampler2D tDiffuses[3];\nuniform vec4 uTextureFrame;\nuniform float uTextureIdx;\n\nvarying vec2 vUv;\n\n#define PI 3.141592653589793\nfloat createCircle(vec2 uv, vec2 point, float scale, float smoothing) {\n\tsmoothing = smoothing > 0. ? smoothing : .01;\n    scale = 1.0 / scale;\n    float radius = length(uv + point) * 2.0 * scale;\n    float circle = smoothstep(1.0, 1. - smoothing, radius);\n    \n    return  circle;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s) {\n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(uv - 0.5) * scale;\n    \n    // Calculate edge antialias feather\n    float distance = length(center);\n    float edgeFeather = fwidth(distance) * feather;\n\n    // Calculate fixed stroke width regardless of scale\n    float dx = dFdx(uv.x);\n    strokeWidth = dx * strokeWidth;\n  \n    float innerRadius = radius - strokeWidth;\n    float outerRadius = radius;\n    float value = smoothstep(innerRadius - edgeFeather, innerRadius, distance) * \n                  smoothstep(outerRadius, outerRadius - edgeFeather, distance);\n\n    return value;\n}\n\nfloat createRing(vec2 uv, float strokeWidth, float s, float alignStroke) {\n    // alignStroke values: 0 = innner, 0.5 = center,  1 = outer\n    \n    float scale = 1.0 / s;\n    float radius = 0.5;\n    float feather = 1.5;\n    vec2 center = vec2(0.5);\n\n    vec2 transformedPosition = (uv - center) * scale;\n    float distance = length(transformedPosition);\n    float dDistance = fwidth(distance);\n    float edgeWidth = dDistance * feather;\n    float innerEdge = mix(1.0, 0.0, alignStroke);\n    float outerEdge = mix(0.0, 1.0, alignStroke);\n\n    // Apply stroke width\n    float dx = dFdx(uv.x * 1.0 / scale);\n    float dxStrokeWidth = dx * strokeWidth;\n    float innerRadius = radius - dxStrokeWidth * innerEdge;\n    float outerRadius = radius + dxStrokeWidth * outerEdge;\n    float value = smoothstep(innerRadius - edgeWidth * .5, innerRadius + edgeWidth * .5, distance) * (1. - smoothstep(outerRadius - edgeWidth * .5, outerRadius + edgeWidth * .5, distance));\n\n    return value;\n}\n\nfloat createGradient(vec2 point) {\n    float angleFromPoint = atan(point.x, point.y);\n    return (angleFromPoint + PI) / (PI * 2.0);\n}\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvec2 rotateUV(vec2 uv, float rotation, float mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n      cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat toRadians(float deg) {\n\treturn deg * (3.141592653589793 / 180.0);\n}\n\nvec4 getSampleFromArray(sampler2D textures[3], int ndx, vec2 uv) {\n    vec4 color;\n    if (ndx == 0) {\n        color = texture2D(tDiffuses[0], uv);\n    } else if (ndx == 1) {\n        color = texture2D(tDiffuses[1], uv);\n    } else if (ndx == 2) {\n        color = texture2D(tDiffuses[2], uv);\n    }\n    return color;\n}\n\nvoid main() {\n\tvec2 uv = vUv;\n    vec2 uvMask = vUv;\n    uv = rotateUV(uv, toRadians(uRotation));\n\n    vec4 frame = uTextureFrame / 2048.0;\n\n    vec2 uvSprite = vUv * 2.0;\n    uvSprite -= 0.5;\n    uvSprite.x = frame.x + ( uvSprite.x * frame.z );\n    uvSprite.y = ( 1.0 - frame.w ) - frame.y + ( uvSprite.y * frame.w );\n\n    uvMask -= .5;\n    uvMask *= 2.;\n    uvMask += .5;\n\n    vec4 tColor = getSampleFromArray(tDiffuses, int(uTextureIdx), uvSprite);\n    tColor.a *= step(0.0, uvMask.x) * (1.0 - step(1.0, uvMask.x)) * step(0.0, uvMask.y) * (1.0 - step(1.0, uvMask.y));\n\n    vec2 centerPoint = vec2(-0.5);\n\n    float ring = createRing(vUv, uStrokeWidth, 1.0);\n    float gradient = createGradient(vec2(uv.x - 0.5, uv.y - 0.5));\n\n    // float start = step(uProgressEdges.x * uProgress, gradient);\n    // float end = 1.0 - step(uProgressEdges.y * uProgress, gradient);\n    float progressRing = (1.0 - step(uProgress, gradient)) * ring; // start * end\n    float baseRing = (1.0 - step(uProgress, gradient)) * ring * 0.2;\n\n    float alpha = progressRing; //ring * uAlpha;// baseRing;// + progressRing;\n\n    vec4 finalOutput = tColor + vec4(vec3(1.0), alpha);\n\n    gl_FragColor = finalOutput;\n    gl_FragColor.a *= uAlpha;\n    \n    // gl_FragColor = vec4(uvMask, 0.0, 1.0);\n    // gl_FragColor = vec4(vec3(1.0, 0.0,0.0), 0.5);\n}',
                                                    }),
                                                  )),
                                                  (this.mesh.material.extensions.derivatives = !0),
                                                  this.mesh.layers.set(
                                                    this.options.layer,
                                                  ),
                                                  (this.mesh.renderOrder = this.options.renderOrder),
                                                  this.innerObj.add(this.mesh),
                                                  (e.next = 17),
                                                  this.setupText()
                                                );
                                              case 17:
                                                this.setAnimation();
                                              case 18:
                                              case 'end':
                                                return e.stop();
                                            }
                                        },
                                        e,
                                        this,
                                      );
                                    }),
                                  );
                                  return function () {
                                    return e.apply(this, arguments);
                                  };
                                })(),
                              },
                              {
                                key: 'setupText',
                                value: (function () {
                                  var e = wb(
                                    regeneratorRuntime.mark(function e() {
                                      return regeneratorRuntime.wrap(
                                        function (e) {
                                          for (;;)
                                            switch ((e.prev = e.next)) {
                                              case 0:
                                                return (e.next = 2), new yi();
                                              case 2:
                                                return (
                                                  (this.text = e.sent),
                                                  (e.next = 5),
                                                  this.text.setup({
                                                    options: {
                                                      layer: this.options.layer,
                                                      text: this.options.id,
                                                      align: 'center',
                                                      textTransform: 'uppercase',
                                                    },
                                                    props: {
                                                      alpha: 0,
                                                      fontSize: [
                                                        Tb,
                                                        function (e) {
                                                          return (
                                                            14 * e.viewport.scale
                                                          );
                                                        },
                                                      ],
                                                      width: [
                                                        Tb,
                                                        function (e) {
                                                          return (
                                                            200 * e.viewport.scale
                                                          );
                                                        },
                                                      ],
                                                    },
                                                  })
                                                );
                                              case 5:
                                                this.object.add(this.text.object);
                                              case 6:
                                              case 'end':
                                                return e.stop();
                                            }
                                        },
                                        e,
                                        this,
                                      );
                                    }),
                                  );
                                  return function () {
                                    return e.apply(this, arguments);
                                  };
                                })(),
                              },
                              {
                                key: 'setAnimation',
                                value: function () {
                                  this.spriteAnim = new Fu({
                                    data: Ru,
                                    textures: this.textures,
                                    cbLoop: this.onAnimLoop,
                                    cbEnd: this.onAnimEnd,
                                    cbRenderFrame: this.onFrameRender,
                                  });
                                },
                              },
                              {
                                key: 'playAnimation',
                                value: function (e) {
                                  var t = ''
                                    .concat(this.options.id, '-')
                                    .concat(e);
                                  Ru.sequences.find(function (e) {
                                    return e.name === t;
                                  });
                                  this.spriteAnim.playSequence(t);
                                },
                              },
                              {
                                key: 'onAnimLoop',
                                value: function (e) {
                                  (this.props.animState = Ab.LOOP),
                                    this.playAnimation('loop'),
                                    this.props.highlight
                                      ? this.spriteAnim.start()
                                      : this.spriteAnim.stop();
                                },
                              },
                              { key: 'onAnimEnd', value: function (e) {} },
                              {
                                key: 'onFrameRender',
                                value: function (e) {
                                  var t = e.frameRect,
                                    n = e.frameTextureIndex;
                                  this.mesh.material.uniforms.uTextureFrame.value.set(
                                    t.x,
                                    t.y,
                                    t.width,
                                    t.height,
                                  ),
                                    (this.mesh.material.uniforms.uTextureIdx.value = n);
                                },
                              },
                              {
                                key: 'show',
                                value: function () {
                                  var e = this,
                                    t = (arguments.length > 0 &&
                                    void 0 !== arguments[0]
                                      ? arguments[0]
                                      : {}
                                    ).delay,
                                    n = void 0 === t ? 0 : t;
                                  L.b.killDelayedCallsTo(this.onShowDelay),
                                    L.b.delayedCall(n + 0.8, this.onShowDelay),
                                    L.b.killTweensOf(this.tweens),
                                    L.b.to(this.tweens, 2, {
                                      inProgress: 1,
                                      ease: 'easeInOutQuart',
                                      onUpdate: this.onInOutProgressUpdate,
                                      onStart: function () {
                                        e.props.visible = !0;
                                      },
                                      delay: n,
                                    }),
                                    this.bbox.setFromObject(this.hitbox);
                                },
                              },
                              {
                                key: 'onShowDelay',
                                value: function () {
                                  this.playAnimation('in'),
                                    this.spriteAnim.start();
                                },
                              },
                              {
                                key: 'hide',
                                value: function () {
                                  var e = this,
                                    t = (arguments.length > 0 &&
                                    void 0 !== arguments[0]
                                      ? arguments[0]
                                      : {}
                                    ).delay,
                                    n = void 0 === t ? 0 : t;
                                  (this.props.active = !1),
                                    L.b.killTweensOf(this.tweens),
                                    L.b.to(this.tweens, 1, {
                                      inProgress: 0,
                                      ease: 'easeInOutQuart',
                                      onComplete: function () {
                                        e.props.visible = !1;
                                      },
                                      delay: n,
                                    });
                                  var i = 0.7 * -this.props.size - 20;
                                  L.b.killTweensOf(this.text.props),
                                    L.b.to(this.text.props, 0.8, {
                                      alpha: 0,
                                      pY: i,
                                      ease: 'easeInQuart',
                                      delay: n,
                                    });
                                },
                              },
                              {
                                key: 'onActive',
                                value: function () {
                                  this.props.animState !== Ab.IN &&
                                    (this.spriteAnim.start(),
                                    (this.props.highlight = !0));
                                },
                              },
                              {
                                key: 'offActive',
                                value: function () {
                                  this.spriteAnim.stop(),
                                    (this.props.highlight = !1);
                                },
                              },
                              {
                                key: 'whileVisible',
                                value: function () {
                                  var e = Math.max(0.001, this.tweens.inProgress);
                                  this.innerObj.scale.setScalar(e),
                                    (this.mesh.material.uniforms.uProgress.value = this.tweens.inProgress),
                                    (this.mesh.material.uniforms.uAlpha.value = this.props.alpha);
                                },
                              },
                              {
                                key: 'setClick',
                                value: function () {
                                  this.props.visible &&
                                    (this.bbox.setFromObject(this.hitbox),
                                    Ke(this.bbox) && this.emit('click', this));
                                },
                              },
                              {
                                key: 'setPointerPosition',
                                value: function (e) {
                                  if (this.props.visible) {
                                    var t = Ke(this.bbox);
                                    this.props.rollover = !!t;
                                  }
                                },
                              },
                              {
                                key: 'onRollover',
                                value: function () {
                                  (Tb.state.cursor = 'pointer'),
                                    this.spriteAnim.start(),
                                    (this.props.highlight = !0);
                                },
                              },
                              {
                                key: 'offRollover',
                                value: function () {
                                  (Tb.state.cursor = 'default'),
                                    this.props.active ||
                                      (this.props.highlight = !1);
                                },
                              },
                              {
                                key: 'onHighlight',
                                value: function () {
                                  if (!c.a.isMobile) {
                                    L.b.killTweensOf(this.props, { alpha: !0 }),
                                      L.b.to(this.props, 1, {
                                        alpha: 1,
                                        ease: 'easeOutExpo',
                                      });
                                    var e = 0.7 * -this.props.size;
                                    L.b.killTweensOf(this.text.props),
                                      L.b.to(this.text.props, 2, {
                                        alpha: 1,
                                        pY: e,
                                        ease: 'easeOutExpo',
                                      });
                                  }
                                },
                              },
                              {
                                key: 'offHighlight',
                                value: function () {
                                  if (!c.a.isMobile) {
                                    L.b.killTweensOf(this.props, { alpha: !0 }),
                                      L.b.to(this.props, 0.5, {
                                        alpha: 0.2,
                                        ease: 'easeOutSine',
                                      });
                                    var e = 0.7 * -this.props.size - 20;
                                    L.b.killTweensOf(this.text.props),
                                      L.b.to(this.text.props, 0.5, {
                                        alpha: 0,
                                        pY: e,
                                        ease: 'easeOutSine',
                                      });
                                  }
                                },
                              },
                              { key: 'setProgress', value: function (e) {} },
                              { key: 'setRingProgress', value: function (e) {} },
                              {
                                key: 'setSize',
                                value: function (e) {
                                  (this.mesh.material.uniforms.uSize.value = e),
                                    this.mesh.scale.set(e, e, 1),
                                    this.hitbox.scale.set(e, e, 1),
                                    (this.text.props.pY = 0.7 * -e - 20);
                                },
                              },
                            ]) && xb(n.prototype, i),
                            r && xb(n, r),
                            t
                          );
                        })()).prototype,
                        'onAnimLoop',
                        [X.a],
                        Object.getOwnPropertyDescriptor(
                          vb.prototype,
                          'onAnimLoop',
                        ),
                        vb.prototype,
                      ),
                      Ob(
                        vb.prototype,
                        'onAnimEnd',
                        [X.a],
                        Object.getOwnPropertyDescriptor(
                          vb.prototype,
                          'onAnimEnd',
                        ),
                        vb.prototype,
                      ),
                      Ob(
                        vb.prototype,
                        'onFrameRender',
                        [X.a],
                        Object.getOwnPropertyDescriptor(
                          vb.prototype,
                          'onFrameRender',
                        ),
                        vb.prototype,
                      ),
                      Ob(
                        vb.prototype,
                        'onShowDelay',
                        [X.a],
                        Object.getOwnPropertyDescriptor(
                          vb.prototype,
                          'onShowDelay',
                        ),
                        vb.prototype,
                      ),
                      (db = vb)),
                    ) || db),
                ) || db),
            ) || db;
        function jb(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Fb(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Rb(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Cb(e) {
          return (Cb = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Eb(e, t) {
          return (Eb =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Lb,
          Ib = Object(u.a)(),
          Db =
            Fi()(
              (Sb =
                Object(it.a)(rt)(
                  (Sb = (function (e) {
                    function t() {
                      var e, n;
                      !(function (e, t) {
                        if (!(e instanceof t))
                          throw new TypeError(
                            'Cannot call a class as a function',
                          );
                      })(this, t);
                      for (
                        var i = arguments.length, r = new Array(i), o = 0;
                        o < i;
                        o++
                      )
                        r[o] = arguments[o];
                      return (
                        ((n = Rb(
                          this,
                          (e = Cb(t)).call.apply(e, [this].concat(r)),
                        )).options = { layer: 1, renderOrder: 0 }),
                        (n.props = {
                          v: !1,
                          active: !1,
                          dragPos: 0,
                          vw: [
                            Ib,
                            function (e) {
                              return e.viewport.width;
                            },
                          ],
                        }),
                        n
                      );
                    }
                    var n, i, r;
                    return (
                      (function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function',
                          );
                        (e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && Eb(e, t);
                      })(t, le['a']),
                      (n = t),
                      (i = [
                        {
                          key: 'onSetup',
                          value: (function () {
                            var e,
                              t =
                                ((e = regeneratorRuntime.mark(function e() {
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            (this.tweens = { inProgress: 1 }),
                                              (this.line = this.setupLine());
                                          case 2:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                })),
                                function () {
                                  var t = this,
                                    n = arguments;
                                  return new Promise(function (i, r) {
                                    var o = e.apply(t, n);
                                    function a(e) {
                                      jb(o, i, r, a, s, 'next', e);
                                    }
                                    function s(e) {
                                      jb(o, i, r, a, s, 'throw', e);
                                    }
                                    a(void 0);
                                  });
                                });
                            return function () {
                              return t.apply(this, arguments);
                            };
                          })(),
                        },
                        {
                          key: 'setupLine',
                          value: function () {
                            this.particlesData = [];
                            for (
                              var e = new $e.BufferGeometry(), t = [], n = 0;
                              n < 100;
                              n += 1
                            ) {
                              var i = 10 * n;
                              t.push(i, 0, 0);
                            }
                            e.addAttribute(
                              'position',
                              new $e.Float32BufferAttribute(t, 3),
                            );
                            var r = new $e.ShaderMaterial({
                                uniforms: {
                                  uScale: { value: 4 },
                                  uWidth: { value: 0 },
                                  uTotalWidth: { value: 1e3 },
                                  uDragPos: { value: 0 },
                                },
                                vertexShader:
                                  '#define GLSLIFY 1\nuniform float uScale;\nuniform float uDragPos;\nuniform float uWidth;\nuniform float uTotalWidth;\n\nvarying float vVisible;\n\nvoid main() {\n\tvec3 pos = position;\n\n\tpos.x = mod(pos.x + uDragPos, uTotalWidth);\n\n\tvec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );\n\t\n\tgl_PointSize = uScale;\n\tgl_Position = projectionMatrix * mvPosition;\n\n\tvVisible = pos.x < uWidth ? 1.0 : 0.0;\n}',
                                fragmentShader:
                                  '#define GLSLIFY 1\nvarying float vVisible;\n\nfloat createCircle(vec2 uv, vec2 point, float scale, float smoothing) {\n\tsmoothing = smoothing > 0. ? smoothing : .01;\n    scale = 1.0 / scale;\n    float radius = length(uv + point) * 2.0 * scale;\n    float circle = smoothstep(1.0, 1. - smoothing, radius);\n    \n    return  circle;\n}\n\nvoid main() {\n    float circle = createCircle(gl_PointCoord, vec2(-0.5), 1.0, 0.1);\n    float alpha = circle * vVisible;\n    \n    gl_FragColor = vec4( vec3(1.0), alpha);\n    // gl_FragColor = vec4( vec3(1.0,0.0,0.0), circleMask );\n}',
                                blending: $e.AdditiveBlending,
                                transparent: !0,
                                vertexColors: !0,
                              }),
                              o = new $e.Points(e, r);
                            return (
                              o.layers.set(this.options.layer),
                              (o.renderOrder = this.options.renderOrder),
                              this.object.add(o),
                              o
                            );
                          },
                        },
                        {
                          key: 'show',
                          value: function () {
                            var e = this,
                              t = (arguments.length > 0 && void 0 !== arguments[0]
                                ? arguments[0]
                                : {}
                              ).delay,
                              n = void 0 === t ? 0 : t;
                            (this.props.active = !0),
                              L.b.killTweensOf(this.tweens),
                              L.b.fromTo(
                                this.tweens,
                                2,
                                { inProgress: 1 },
                                {
                                  inProgress: 0,
                                  ease: 'easeInOutQuart',
                                  onStart: function () {
                                    e.props.v = !0;
                                  },
                                  delay: n,
                                },
                              );
                          },
                        },
                        {
                          key: 'hide',
                          value: function () {
                            var e = this,
                              t = (arguments.length > 0 && void 0 !== arguments[0]
                                ? arguments[0]
                                : {}
                              ).delay,
                              n = void 0 === t ? 0 : t;
                            L.b.killTweensOf(this.tweens),
                              L.b.to(this.tweens, 1, {
                                inProgress: -1,
                                ease: 'easeInOutQuart',
                                onComplete: function () {
                                  (e.props.active = !1), (e.props.v = !1);
                                },
                                delay: n,
                              });
                          },
                        },
                        {
                          key: 'setVw',
                          value: function (e) {
                            this.line.material.uniforms.uWidth.value = e;
                          },
                        },
                        {
                          key: 'setDragPos',
                          value: function (e) {
                            this.line.material.uniforms.uDragPos.value = 0.5 * e;
                          },
                        },
                        {
                          key: 'whileActive',
                          value: function () {
                            this.line.position.x =
                              this.tweens.inProgress *
                              Ib.state.viewport.width *
                              1.1;
                          },
                        },
                      ]) && Fb(n.prototype, i),
                      r && Fb(n, r),
                      t
                    );
                  })()),
                ) || Sb),
            ) || Sb;
        function Ub(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function zb(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Nb(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Bb(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Vb(e) {
          return (Vb = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Yb(e, t) {
          return (Yb =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var Hb,
          Xb,
          Gb = Object(u.a)(),
          Wb =
            ((function (e, t, n, i, r) {
              var o = {};
              Object.keys(i).forEach(function (e) {
                o[e] = i[e];
              }),
                (o.enumerable = !!o.enumerable),
                (o.configurable = !!o.configurable),
                ('value' in o || o.initializer) && (o.writable = !0),
                (o = n
                  .slice()
                  .reverse()
                  .reduce(function (n, i) {
                    return i(e, t, n) || n;
                  }, o)),
                r &&
                  void 0 !== o.initializer &&
                  ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                  (o.initializer = void 0)),
                void 0 === o.initializer &&
                  (Object.defineProperty(e, t, o), (o = null));
            })(
              (Lb = (function (e) {
                function t() {
                  var e, n;
                  !(function (e, t) {
                    if (!(e instanceof t))
                      throw new TypeError('Cannot call a class as a function');
                  })(this, t);
                  for (
                    var i = arguments.length, r = new Array(i), o = 0;
                    o < i;
                    o++
                  )
                    r[o] = arguments[o];
                  return (
                    ((n = Bb(
                      this,
                      (e = Vb(t)).call.apply(e, [this].concat(r)),
                    )).options = { numItems: 0, stepFactor: 0.3 }),
                    (n.props = {
                      active: !1,
                      start: !1,
                      currentIndex: 0,
                      progress: 0,
                      pos: 0,
                      pointerPosition: [
                        Gb,
                        function (e) {
                          return e.pointer.position;
                        },
                      ],
                      pointerActive: [
                        Gb,
                        function (e) {
                          return e.pointer.active;
                        },
                      ],
                      resolution: [
                        Gb,
                        function (e) {
                          return s.a.pick(e.viewport, 'width', 'height');
                        },
                      ],
                      posStep: function (e) {
                        return e.resolution.width * n.options.stepFactor;
                      },
                    }),
                    n
                  );
                }
                var n, i, r;
                return (
                  (function (e, t) {
                    if ('function' != typeof t && null !== t)
                      throw new TypeError(
                        'Super expression must either be null or a function',
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: { value: e, writable: !0, configurable: !0 },
                    })),
                      t && Yb(e, t);
                  })(t, le['a']),
                  (n = t),
                  (i = [
                    {
                      key: 'onSetup',
                      value: (function () {
                        var e,
                          t =
                            ((e = regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (this.pCoordsStore = [0, 0]),
                                          (this.pCoordsDelta = [0, 0]),
                                          (this.pos = 0),
                                          (this.posDelta = 0),
                                          (this.posTg = 0),
                                          (this.posVel = 0),
                                          (this.mSpring = 0.02),
                                          (this.mFriction = 0.78),
                                          (this.idxTarget = -1);
                                      case 9:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            })),
                            function () {
                              var t = this,
                                n = arguments;
                              return new Promise(function (i, r) {
                                var o = e.apply(t, n);
                                function a(e) {
                                  zb(o, i, r, a, s, 'next', e);
                                }
                                function s(e) {
                                  zb(o, i, r, a, s, 'throw', e);
                                }
                                a(void 0);
                              });
                            });
                        return function () {
                          return t.apply(this, arguments);
                        };
                      })(),
                    },
                    {
                      key: 'reset',
                      value: function () {
                        (this.pos = 0),
                          (this.posTg = 0),
                          (this.idxTarget = 0),
                          (this.props.currentIndex = 0),
                          (this.props.progress = 0);
                      },
                    },
                    { key: 'onActive', value: function () {} },
                    {
                      key: 'offActive',
                      value: function () {
                        this.reset();
                      },
                    },
                    {
                      key: 'whileActive',
                      value: function () {
                        this.updatePos();
                      },
                    },
                    {
                      key: 'updatePos',
                      value: function () {
                        var e = this.mSpring || 0.68,
                          t = this.mFriction || 0.2,
                          n = this.posTg + this.posDelta,
                          i = -this.props.posStep * (this.options.numItems - 1),
                          r = this.pos >= i && this.pos <= 0;
                        (this.posDelta = this.pCoordsDelta[0] * (r ? 0.5 : 0.1)),
                          (this.posVel += (n - this.pos) * e),
                          (this.posVel *= t),
                          (this.pos += this.posVel);
                        var o = (this.pos / this.props.posStep) * -1;
                        (this.props.progress = o), (this.props.pos = this.pos);
                        var a = Object(A.a)(
                          Math.round(-this.posTg / this.props.posStep),
                          0,
                          this.options.numItems,
                        );
                        a !== this.idxTarget && (this.idxTarget = a),
                          Math.abs(this.posVel) < 8 &&
                            (this.props.currentIndex = this.idxTarget);
                      },
                    },
                    {
                      key: 'goToIndex',
                      value: function (e) {
                        (this.posTg = -this.props.posStep * e),
                          (this.posTg = Object(A.a)(
                            this.posTg,
                            -this.props.posStep * (this.options.numItems - 1),
                            0,
                          ));
                      },
                    },
                    {
                      key: 'onPointerActive',
                      value: function () {
                        this.props.active &&
                          ((this.isPointerDown = !0),
                          (this.mSpring = 0.04),
                          (this.mFriction = 0.52),
                          (this.posTg = this.pos));
                      },
                    },
                    {
                      key: 'offPointerActive',
                      value: function () {
                        if (this.props.active) {
                          (this.isPointerDown = !1),
                            (this.mSpring = 0.05),
                            (this.mFriction = 0.68);
                          var e =
                              t.project(2 * this.posVel, 0.95) /
                              this.props.posStep,
                            n = Math.round(e);
                          (this.posTg =
                            0 === n
                              ? Math.floor(
                                  (this.posTg +
                                    this.posDelta +
                                    0.5 * this.props.posStep) /
                                    this.props.posStep,
                                ) * this.props.posStep
                              : Math.floor(
                                  (this.posTg + 0.5 * this.props.posStep) /
                                    this.props.posStep +
                                    n,
                                ) * this.props.posStep),
                            (this.posTg = Object(A.a)(
                              this.posTg,
                              -this.props.posStep * (this.options.numItems - 1),
                              0,
                            )),
                            (this.pCoordsDelta[0] = 0);
                        }
                      },
                    },
                    {
                      key: 'setPointerPosition',
                      value: function (e) {
                        var t = Ub(e, 2),
                          n = t[0],
                          i = t[1],
                          r = [
                            n - this.pCoordsStore[0],
                            i - this.pCoordsStore[1],
                          ];
                        this.isPointerDown && (this.pCoordsDelta[0] += r[0]),
                          (this.pCoordsStore = Gb.state.pointer.position);
                      },
                    },
                  ]),
                  (r = [
                    {
                      key: 'project',
                      value: function (e, t) {
                        return (e * t) / (1 - t);
                      },
                    },
                  ]),
                  i && Nb(n.prototype, i),
                  r && Nb(n, r),
                  t
                );
              })()).prototype,
              'goToIndex',
              [X.a],
              Object.getOwnPropertyDescriptor(Lb.prototype, 'goToIndex'),
              Lb.prototype,
            ),
            Lb);
        function Qb(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function qb(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Qb(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Qb(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Zb(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function Kb(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function $b(e) {
          return ($b = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Jb(e, t) {
          return (Jb =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function ey(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var ty,
          ny,
          iy = Object(u.a)(),
          ry = {
            DEFAULT: 'mode:default',
            PRE_HOTSPOT: 'mode:pre-hotspot',
            HOTSPOT: 'mode:hotspot',
          },
          oy = [
            {
              id: 'wind',
              title: p['fourth-section-hotspot-sub_one-title'],
              body: p['fourth-section-hotspot-sub_one-body'],
            },
            {
              id: 'drought',
              title: p['fourth-section-hotspot-sub_two-title'],
              body: p['fourth-section-hotspot-sub_two-body'],
            },
            {
              id: 'disease',
              title: p['fourth-section-hotspot-sub_three-title'],
              body: p['fourth-section-hotspot-sub_three-body'],
            },
            {
              id: 'soil',
              title: p['fourth-section-hotspot-sub_four-title'],
              body: p['fourth-section-hotspot-sub_four-body'],
            },
            {
              id: 'field-density',
              title: p['fourth-section-hotspot-sub_five-title'],
              body: p['fourth-section-hotspot-sub_five-body'],
            },
          ],
          ay =
            Qe(
              (Hb =
                Object(it.a)(rt)(
                  (ey(
                    (Xb = (function (e) {
                      function t() {
                        var e, n;
                        !(function (e, t) {
                          if (!(e instanceof t))
                            throw new TypeError(
                              'Cannot call a class as a function',
                            );
                        })(this, t);
                        for (
                          var i = arguments.length, r = new Array(i), o = 0;
                          o < i;
                          o++
                        )
                          r[o] = arguments[o];
                        return (
                          ((n = Kb(
                            this,
                            (e = $b(t)).call.apply(e, [this].concat(r)),
                          )).options = {
                            stepFactor: 0.3,
                            icons: oy.filter(function (e) {
                              return 'default' !== e.id;
                            }),
                          }),
                          (n.props = {
                            active: !1,
                            currentIndex: 0,
                            currentIndexes: [
                              { id: 'default', value: 1 },
                              { id: 'wind', value: 0 },
                              { id: 'drought', value: 0 },
                              { id: 'disease', value: 0 },
                              { id: 'soil', value: 0 },
                              { id: 'density', value: 0 },
                            ],
                            progress: !1,
                            resolution: [
                              iy,
                              function (e) {
                                return s.a.pick(
                                  e.viewport,
                                  'width',
                                  'height',
                                  'scale',
                                );
                              },
                            ],
                            hotspot: [
                              iy,
                              function (e) {
                                return e.navigation.hotspotStalk;
                              },
                            ],
                            mode: ry.DEFAULT,
                            scale: 1,
                            posStep: function (e) {
                              return e.resolution.width * n.options.stepFactor;
                            },
                          }),
                          n
                        );
                      }
                      var n, i, r;
                      return (
                        (function (e, t) {
                          if ('function' != typeof t && null !== t)
                            throw new TypeError(
                              'Super expression must either be null or a function',
                            );
                          (e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                              value: e,
                              writable: !0,
                              configurable: !0,
                            },
                          })),
                            t && Jb(e, t);
                        })(t, le['a']),
                        (n = t),
                        (i = [
                          {
                            key: 'onSetup',
                            value: (function () {
                              var e = qb(
                                regeneratorRuntime.mark(function e() {
                                  var t = this;
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            if (
                                              ((window.stalkUI = this),
                                              (this.camera = this.options.camera),
                                              !c.a.isMobile)
                                            ) {
                                              e.next = 7;
                                              break;
                                            }
                                            return (
                                              (e.next = 5),
                                              new Wb().setup({
                                                options: {
                                                  numItems: this.options.icons
                                                    .length,
                                                },
                                              })
                                            );
                                          case 5:
                                            (this.dragHandler = e.sent),
                                              this.dragHandler.store.compute(
                                                function (e) {
                                                  (e.start ||
                                                    (e.active &&
                                                      e.currentIndex > 0)) &&
                                                    ((t.props.currentIndex =
                                                      e.currentIndex),
                                                    (t.props.mode = ry.HOTSPOT));
                                                },
                                              );
                                          case 7:
                                            return (
                                              (this.tweens = {
                                                fromPreHotspot: 0,
                                              }),
                                              (this.sceneAnimationTime = 2.5),
                                              (e.next = 11),
                                              this.setupMainCopy()
                                            );
                                          case 11:
                                            return (
                                              (e.next = 13),
                                              this.setupSectionContent()
                                            );
                                          case 13:
                                            return (
                                              (e.next = 15),
                                              this.setupHotspotContent()
                                            );
                                          case 15:
                                            return (
                                              (e.next = 17),
                                              this.setupNavigation()
                                            );
                                          case 17:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'setupSectionContent',
                            value: (function () {
                              var e = qb(
                                regeneratorRuntime.mark(function e() {
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (e.next = 2),
                                              new js().setup({
                                                options: {
                                                  text: p['fourth-section-cta'],
                                                  layer: this.options.layer,
                                                },
                                                props: {
                                                  pY: function (e) {
                                                    return (
                                                      e.viewport.height *
                                                      (c.a.isMobile
                                                        ? -0.3
                                                        : -0.32)
                                                    );
                                                  },
                                                },
                                              })
                                            );
                                          case 2:
                                            return (
                                              (this.hotspot = e.sent),
                                              this.hotspot.store.compute(
                                                function (e) {
                                                  e.pX = c.a.isMobile
                                                    ? 0
                                                    : -0.42 * e.viewport.width +
                                                      e.size / 2;
                                                },
                                              ),
                                              this.object.add(
                                                this.hotspot.object,
                                              ),
                                              this.hotspot.on(
                                                'click',
                                                this.onHotspotClick,
                                              ),
                                              (e.next = 8),
                                              new ft().setup({
                                                options: {
                                                  layer: this.options.layer,
                                                },
                                              })
                                            );
                                          case 8:
                                            (this.hotspotCloseBtn = e.sent),
                                              this.hotspotCloseBtn.store.compute(
                                                function (e) {
                                                  (e.pX =
                                                    e.viewport.width *
                                                    (c.a.isMobile ? 0.4 : 0.46)),
                                                    (e.pY =
                                                      0.445 * e.viewport.height +
                                                      (c.a.isMobile
                                                        ? 0
                                                        : -14 *
                                                          e.viewport.scale));
                                                },
                                              ),
                                              this.object.add(
                                                this.hotspotCloseBtn.object,
                                              ),
                                              this.hotspotCloseBtn.on(
                                                'click',
                                                this.onHotspotCloseClick,
                                              );
                                          case 12:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'setupMainCopy',
                            value: (function () {
                              var e = qb(
                                regeneratorRuntime.mark(function e() {
                                  var t = this;
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (e.next = 2),
                                              new yo().setup({
                                                options: {
                                                  layer: this.options.layer,
                                                  position: 'top-left',
                                                  text: p['fourth-section-title'],
                                                  animationDuration: 2,
                                                  animationStagger: 0.05,
                                                },
                                                props: {
                                                  fontSize: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile
                                                          ? 110
                                                          : 100) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                  pX: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        -0.42 * e.viewport.width
                                                      );
                                                    },
                                                  ],
                                                  width: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile
                                                          ? 920
                                                          : 800) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                },
                                              })
                                            );
                                          case 2:
                                            return (
                                              (this.title = e.sent),
                                              this.object.add(this.title.object),
                                              (e.next = 6),
                                              new Ao()
                                            );
                                          case 6:
                                            return (
                                              (this.bodyText = e.sent),
                                              (e.next = 9),
                                              this.bodyText.setup({
                                                options: {
                                                  layer: this.options.layer,
                                                  position: 'top-left',
                                                  text: p['fourth-section-body'],
                                                },
                                                props: {
                                                  fontSize: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile ? 40 : 20) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                  pX: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        -0.42 * e.viewport.width
                                                      );
                                                    },
                                                  ],
                                                  width: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile
                                                          ? 920
                                                          : 700) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                },
                                              })
                                            );
                                          case 9:
                                            this.object.add(this.bodyText.object),
                                              this.title.store.compute(function (
                                                e,
                                              ) {
                                                var n = e.height,
                                                  i = t.bodyText.props.height,
                                                  r =
                                                    iy.state.viewport.scale *
                                                    (c.a.isMobile ? 80 : 50),
                                                  o = n + r + i,
                                                  a =
                                                    o *
                                                    (c.a.isMobile ? 0.8 : 0.6),
                                                  s =
                                                    -n -
                                                    r +
                                                    o *
                                                      (c.a.isMobile ? 0.8 : 0.6);
                                                (t.title.props.pY = a),
                                                  (t.bodyText.props.pY = s);
                                              });
                                          case 11:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'setupHotspotContent',
                            value: (function () {
                              var e = qb(
                                regeneratorRuntime.mark(function e() {
                                  var t,
                                    n,
                                    i = this;
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (
                                              (this.hotspotContent = []),
                                              (e.next = 3),
                                              new yo()
                                            );
                                          case 3:
                                            return (
                                              (this.preHotspotTitle = e.sent),
                                              this.preHotspotTitle.setup({
                                                options: {
                                                  layer: this.options.layer,
                                                  text:
                                                    p[
                                                      'fourth-section-hotspot-title'
                                                    ],
                                                  align: c.a.isMobile
                                                    ? 'center'
                                                    : 'left',
                                                  position: c.a.isMobile
                                                    ? 'center'
                                                    : 'top-left',
                                                },
                                                props: {
                                                  fontSize: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        c.a.isMobile,
                                                        100 * e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                  width: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile
                                                          ? 920
                                                          : 1100) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                  pX: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        e.viewport.width *
                                                        (c.a.isMobile ? 0 : -0.42)
                                                      );
                                                    },
                                                  ],
                                                  pY: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        e.viewport.height *
                                                        (c.a.isMobile
                                                          ? -0.1
                                                          : 0.12)
                                                      );
                                                    },
                                                  ],
                                                },
                                              }),
                                              this.object.add(
                                                this.preHotspotTitle.object,
                                              ),
                                              (e.next = 8),
                                              new Ao()
                                            );
                                          case 8:
                                            (this.preHotspotCta = e.sent),
                                              this.preHotspotCta.setup({
                                                options: {
                                                  layer: this.options.layer,
                                                  text:
                                                    p[
                                                      'fourth-section-hotspot-select-cta'
                                                    ],
                                                  align: c.a.isMobile
                                                    ? 'center'
                                                    : 'left',
                                                  position: c.a.isMobile
                                                    ? 'center'
                                                    : 'top-left',
                                                },
                                                props: {
                                                  fontSize: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile ? 30 : 15) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                  width: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        (c.a.isMobile
                                                          ? 920
                                                          : 600) *
                                                        e.viewport.scale
                                                      );
                                                    },
                                                  ],
                                                  pX: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        e.viewport.width *
                                                        (c.a.isMobile ? 0 : -0.42)
                                                      );
                                                    },
                                                  ],
                                                  pY: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        e.viewport.height *
                                                        (c.a.isMobile
                                                          ? -0.42
                                                          : -0.15)
                                                      );
                                                    },
                                                  ],
                                                },
                                              }),
                                              this.object.add(
                                                this.preHotspotCta.object,
                                              ),
                                              (t = regeneratorRuntime.mark(
                                                function e(t) {
                                                  var n, r, o;
                                                  return regeneratorRuntime.wrap(
                                                    function (e) {
                                                      for (;;)
                                                        switch (
                                                          (e.prev = e.next)
                                                        ) {
                                                          case 0:
                                                            return (
                                                              (n = oy[t]),
                                                              (e.next = 3),
                                                              new yo()
                                                            );
                                                          case 3:
                                                            return (
                                                              (r = e.sent).setup({
                                                                options: {
                                                                  layer:
                                                                    i.options
                                                                      .layer,
                                                                  text: n.title,
                                                                  align: c.a
                                                                    .isMobile
                                                                    ? 'center'
                                                                    : 'left',
                                                                  position: c.a
                                                                    .isMobile
                                                                    ? 'center'
                                                                    : 'bottom-left',
                                                                },
                                                                props: {
                                                                  fontSize: [
                                                                    iy,
                                                                    function (e) {
                                                                      return (
                                                                        (c.a
                                                                          .isMobile
                                                                          ? 50
                                                                          : 100) *
                                                                        e.viewport
                                                                          .scale
                                                                      );
                                                                    },
                                                                  ],
                                                                  width: [
                                                                    iy,
                                                                    function (e) {
                                                                      return (
                                                                        (c.a
                                                                          .isMobile
                                                                          ? 920
                                                                          : 700) *
                                                                        e.viewport
                                                                          .scale
                                                                      );
                                                                    },
                                                                  ],
                                                                  pX: [
                                                                    iy,
                                                                    function (e) {
                                                                      return (
                                                                        e.viewport
                                                                          .width *
                                                                        (c.a
                                                                          .isMobile
                                                                          ? 0
                                                                          : -0.42)
                                                                      );
                                                                    },
                                                                  ],
                                                                },
                                                              }),
                                                              i.object.add(
                                                                r.object,
                                                              ),
                                                              (e.next = 8),
                                                              new Ao()
                                                            );
                                                          case 8:
                                                            (o = e.sent).setup({
                                                              options: {
                                                                layer:
                                                                  i.options.layer,
                                                                text: n.body,
                                                                align: c.a
                                                                  .isMobile
                                                                  ? 'center'
                                                                  : 'left',
                                                                position: c.a
                                                                  .isMobile
                                                                  ? 'center'
                                                                  : 'top-left',
                                                              },
                                                              props: {
                                                                fontSize: [
                                                                  iy,
                                                                  function (e) {
                                                                    return (
                                                                      (c.a
                                                                        .isMobile
                                                                        ? 40
                                                                        : 20) *
                                                                      e.viewport
                                                                        .scale
                                                                    );
                                                                  },
                                                                ],
                                                                width: [
                                                                  iy,
                                                                  function (e) {
                                                                    return (
                                                                      (c.a
                                                                        .isMobile
                                                                        ? 920
                                                                        : 600) *
                                                                      e.viewport
                                                                        .scale
                                                                    );
                                                                  },
                                                                ],
                                                                pX: [
                                                                  iy,
                                                                  function (e) {
                                                                    return (
                                                                      e.viewport
                                                                        .width *
                                                                      (c.a
                                                                        .isMobile
                                                                        ? 0
                                                                        : -0.42)
                                                                    );
                                                                  },
                                                                ],
                                                              },
                                                            }),
                                                              i.object.add(
                                                                o.object,
                                                              ),
                                                              r.store.compute(
                                                                function (e) {
                                                                  var t =
                                                                      iy.state
                                                                        .viewport,
                                                                    n = t.height,
                                                                    i = t.scale,
                                                                    a =
                                                                      r.props
                                                                        .height,
                                                                    s =
                                                                      o.props
                                                                        .height,
                                                                    u =
                                                                      -0.15 * n +
                                                                      s / 2,
                                                                    l = -0.03 * n,
                                                                    p =
                                                                      u +
                                                                      s / 2 +
                                                                      a / 2 +
                                                                      50 * i,
                                                                    h = 0.03 * n;
                                                                  (r.props.pY = c
                                                                    .a.isMobile
                                                                    ? p
                                                                    : h),
                                                                    (o.props.pY = c
                                                                      .a.isMobile
                                                                      ? u
                                                                      : l);
                                                                },
                                                              ),
                                                              i.hotspotContent.push(
                                                                {
                                                                  title: r,
                                                                  body: o,
                                                                },
                                                              );
                                                          case 13:
                                                          case 'end':
                                                            return e.stop();
                                                        }
                                                    },
                                                    e,
                                                  );
                                                },
                                              )),
                                              (n = 0);
                                          case 13:
                                            if (!(n < oy.length)) {
                                              e.next = 18;
                                              break;
                                            }
                                            return e.delegateYield(
                                              t(n),
                                              't0',
                                              15,
                                            );
                                          case 15:
                                            (n += 1), (e.next = 13);
                                            break;
                                          case 18:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'setupNavigation',
                            value: (function () {
                              var e = qb(
                                regeneratorRuntime.mark(function e() {
                                  var t,
                                    n,
                                    i = this;
                                  return regeneratorRuntime.wrap(
                                    function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            (this.navObj = new $e.Object3D()),
                                              this.object.add(this.navObj),
                                              (this.navItems = []),
                                              (t = regeneratorRuntime.mark(
                                                function e(t) {
                                                  var n;
                                                  return regeneratorRuntime.wrap(
                                                    function (e) {
                                                      for (;;)
                                                        switch (
                                                          (e.prev = e.next)
                                                        ) {
                                                          case 0:
                                                            return (
                                                              (e.next = 2),
                                                              new Mb().setup({
                                                                options: {
                                                                  index: t,
                                                                  id:
                                                                    i.options
                                                                      .icons[t]
                                                                      .id,
                                                                  renderOrder: 0,
                                                                  layer:
                                                                    i.options
                                                                      .layer,
                                                                },
                                                                props: {
                                                                  pr: 0,
                                                                  pZ: 1,
                                                                  basePos: [
                                                                    iy,
                                                                    function (e) {
                                                                      return (
                                                                        t *
                                                                        e.viewport
                                                                          .width *
                                                                        i.options
                                                                          .stepFactor
                                                                      );
                                                                    },
                                                                  ],
                                                                  size: [
                                                                    iy,
                                                                    function (e) {
                                                                      return (
                                                                        (c.a
                                                                          .isMobile
                                                                          ? 300
                                                                          : 120) *
                                                                        e.viewport
                                                                          .scale
                                                                      );
                                                                    },
                                                                  ],
                                                                },
                                                              })
                                                            );
                                                          case 2:
                                                            (n = e.sent).on(
                                                              'click',
                                                              i.onItemClick,
                                                            ),
                                                              i.navObj.add(
                                                                n.object,
                                                              ),
                                                              i.navItems.push(n);
                                                          case 6:
                                                          case 'end':
                                                            return e.stop();
                                                        }
                                                    },
                                                    e,
                                                  );
                                                },
                                              )),
                                              (n = 0);
                                          case 5:
                                            if (
                                              !(n < this.options.icons.length)
                                            ) {
                                              e.next = 10;
                                              break;
                                            }
                                            return e.delegateYield(t(n), 't0', 7);
                                          case 7:
                                            (n += 1), (e.next = 5);
                                            break;
                                          case 10:
                                            if (!c.a.isMobile) {
                                              e.next = 15;
                                              break;
                                            }
                                            return (
                                              (e.next = 13),
                                              new Db().setup({
                                                options: {
                                                  renderOrder: 1,
                                                  layer: this.options.layer,
                                                },
                                                props: {
                                                  pX: [
                                                    iy,
                                                    function (e) {
                                                      return (
                                                        0.5 * -e.viewport.width
                                                      );
                                                    },
                                                  ],
                                                },
                                              })
                                            );
                                          case 13:
                                            (this.navLine = e.sent),
                                              this.navObj.add(
                                                this.navLine.object,
                                              );
                                          case 15:
                                          case 'end':
                                            return e.stop();
                                        }
                                    },
                                    e,
                                    this,
                                  );
                                }),
                              );
                              return function () {
                                return e.apply(this, arguments);
                              };
                            })(),
                          },
                          {
                            key: 'onItemClick',
                            value: function (e) {
                              m(
                                'Detail Button Click',
                                'Click',
                                [
                                  'Wind',
                                  'Drought',
                                  'Disease',
                                  'Soil Types',
                                  'Population Density',
                                ][e.options.index],
                              ),
                                this.emit('clickItem'),
                                (this.props.mode = ry.HOTSPOT),
                                this.goToIndex(e.options.index);
                            },
                          },
                          {
                            key: 'onActive',
                            value: function () {
                              var e = iy.state.inPreloader ? 1 : 0;
                              (this.props.mode = ry.DEFAULT),
                                this.title.show({ delay: 0.4 + e }),
                                this.bodyText.show({ delay: 0.9 + e }),
                                this.hotspot.show({ delay: 0.2 + e }),
                                L.b.killTweensOf(this.offActiveDelayed);
                            },
                          },
                          {
                            key: 'offActive',
                            value: function () {
                              if (
                                ((this.props.mode = ry.DEFAULT),
                                this.title.hide(),
                                this.bodyText.hide(),
                                this.hotspot.hide(),
                                this.preHotspotTitle.hide(),
                                this.preHotspotCta.hide(),
                                (this.hotspotCloseBtn.props.visible = !1),
                                this.hotspotContent.forEach(function (e) {
                                  e.title.hide(), e.body.hide();
                                }),
                                this.navItems.forEach(function (e) {
                                  e.hide();
                                }),
                                this.navLine && this.navLine.hide(),
                                this.dragHandler &&
                                  (this.dragHandler.props.active = !1),
                                !c.a.isMobile)
                              )
                                for (
                                  var e = 0;
                                  e < this.props.currentIndexes.length;
                                  e += 1
                                ) {
                                  var t = 0 === e ? 1 : 0;
                                  L.b.to(this.props.currentIndexes[e], 0.5, {
                                    value: t,
                                    ease: 'Sine.easeInOut',
                                  });
                                }
                              L.b.killTweensOf(this.tweens),
                                L.b.to(this.tweens, 0.5, { fromPreHotspot: 0 }),
                                L.b.delayedCall(2, this.offActiveDelayed);
                            },
                          },
                          {
                            key: 'offActiveDelayed',
                            value: function () {
                              this.reset();
                            },
                          },
                          {
                            key: 'setMode',
                            value: function () {
                              if (
                                (L.b.killDelayedCallsTo(this.hotspotDelay),
                                this.props.active)
                              ) {
                                var e = 0;
                                switch (this.props.mode) {
                                  default:
                                  case ry.DEFAULT:
                                    this.dragHandler &&
                                      ((this.dragHandler.props.active = !1),
                                      (this.dragHandler.props.start = !1));
                                    for (
                                      var t = 0;
                                      t < this.props.currentIndexes.length;
                                      t += 1
                                    )
                                      0 === t
                                        ? L.b.to(
                                            this.props.currentIndexes[t],
                                            this.sceneAnimationTime,
                                            { value: 1, ease: 'Sine.easeInOut' },
                                          )
                                        : L.b.to(
                                            this.props.currentIndexes[t],
                                            this.sceneAnimationTime,
                                            { value: 0, ease: 'Sine.easeInOut' },
                                          );
                                    if (
                                      ((e = 1.2),
                                      this.navItems.forEach(function (e, t) {
                                        e.hide({ delay: 0.1 * t });
                                      }),
                                      this.title.show({ delay: 0.4 }),
                                      this.bodyText.show({ delay: 0.9 }),
                                      this.hotspot.show({ delay: 0.5 }),
                                      this.preHotspotTitle.hide(),
                                      this.preHotspotCta.hide(),
                                      (this.hotspotCloseBtn.props.visible = !1),
                                      this.hotspotContent.forEach(function (e) {
                                        e.title.hide({ stagger: 0 }),
                                          e.body.hide();
                                      }),
                                      this.navLine && this.navLine.hide({}),
                                      L.b.killTweensOf(this.tweens),
                                      L.b.to(this.tweens, 0.5, {
                                        fromPreHotspot: 0,
                                      }),
                                      !c.a.isMobile)
                                    )
                                      for (
                                        var n = 0;
                                        n < this.props.currentIndexes.length;
                                        n += 1
                                      )
                                        0 === n
                                          ? L.b.to(
                                              this.props.currentIndexes[n],
                                              this.sceneAnimationTime,
                                              {
                                                value: 1,
                                                ease: 'Sine.easeInOut',
                                              },
                                            )
                                          : L.b.to(
                                              this.props.currentIndexes[n],
                                              this.sceneAnimationTime,
                                              {
                                                value: 0,
                                                ease: 'Sine.easeInOut',
                                              },
                                            );
                                    break;
                                  case ry.PRE_HOTSPOT:
                                    this.title.hide(),
                                      this.bodyText.hide(),
                                      this.hotspot.hide(),
                                      (this.hotspotCloseBtn.props.visible = !0),
                                      (this.props.currentIndex = -1),
                                      (e = 1),
                                      this.preHotspotTitle.show({ delay: e }),
                                      this.preHotspotCta.show({ delay: e }),
                                      this.navItems.forEach(function (t, n) {
                                        var i = c.a.isMobile ? 0.3 : 0.1;
                                        t.show({ delay: e + 0.2 + i * n });
                                      }),
                                      this.navLine &&
                                        this.navLine.show({ delay: e }),
                                      this.dragHandler &&
                                        (this.dragHandler.props.active = !0),
                                      L.b.delayedCall(e + 5, this.hotspotDelay);
                                    break;
                                  case ry.HOTSPOT:
                                    this.preHotspotTitle.hide(),
                                      this.preHotspotCta.hide(),
                                      this.updateHotspotContent(),
                                      this.dragHandler &&
                                        (this.dragHandler.props.start = !0),
                                      c.a.isMobile
                                        ? (L.b.killTweensOf(this.tweens),
                                          L.b.to(this.tweens, 0.5, {
                                            fromPreHotspot: 1,
                                          }))
                                        : (L.b.killTweensOf(
                                            this.props.currentIndexes,
                                          ),
                                          L.b.to(
                                            this.props.currentIndexes[0],
                                            0.5,
                                            { value: 0 },
                                          ),
                                          L.b.to(
                                            this.props.currentIndexes[1],
                                            0.5,
                                            { value: 1 },
                                          ));
                                }
                              }
                            },
                          },
                          {
                            key: 'hotspotDelay',
                            value: function () {
                              (this.props.mode = ry.HOTSPOT),
                                (this.props.currentIndex = 0);
                            },
                          },
                          {
                            key: 'updateHotspotContent',
                            value: function () {
                              var e = this,
                                t = (arguments.length > 0 &&
                                void 0 !== arguments[0]
                                  ? arguments[0]
                                  : {}
                                ).delay,
                                n = void 0 === t ? 0 : t;
                              this.navItems.forEach(function (t, n) {
                                t.props.active = e.props.currentIndex === n;
                              }),
                                this.hotspotContent.forEach(function (t, i) {
                                  e.props.currentIndex === i
                                    ? (t.title.show({ delay: n + 0.2 }),
                                      t.body.show({ dur: 2, delay: n + 0.9 }))
                                    : (t.title.hide({ stagger: 0, delay: n }),
                                      t.body.hide({ delay: n }));
                                });
                            },
                          },
                          {
                            key: 'reset',
                            value: function () {
                              this.dragHandler &&
                                (this.dragHandler.props.active = !1),
                                (this.props.currentIndex = -1),
                                this.navItems.forEach(function (e, t) {
                                  e.props.alpha = 0.2;
                                });
                              for (
                                var e = 0;
                                e < this.props.currentIndexes.length;
                                e += 1
                              )
                                L.b.killTweensOf(this.props.currentIndexes[e]),
                                  (this.props.currentIndexes[e].value =
                                    0 === e ? 1 : 0);
                              L.b.killTweensOf(this.tweens),
                                L.b.set(this.tweens, { fromPreHotspot: 0 });
                            },
                          },
                          {
                            key: 'whileActive',
                            value: function () {
                              if ((this.updateProps(), c.a.isMobile)) {
                                var e = this.dragHandler.props,
                                  t = e.progress,
                                  n = e.pos;
                                if (
                                  ((this.props.progress = t),
                                  this.dragHandler.props.start)
                                )
                                  for (
                                    var i = 0;
                                    i < this.props.currentIndexes.length;
                                    i += 1
                                  ) {
                                    var r = void 0;
                                    (r =
                                      0 === i
                                        ? 1 - this.tweens.fromPreHotspot
                                        : Math.max(
                                            0,
                                            1 -
                                              Math.abs(
                                                i - (this.props.progress + 1),
                                              ),
                                          ) * this.tweens.fromPreHotspot),
                                      (this.props.currentIndexes[i].value = r);
                                  }
                                this.props.mode === ry.HOTSPOT &&
                                  (this.props.progress += 1),
                                  this.navItems.forEach(function (e) {
                                    (e.props.progress = Object(A.a)(
                                      t - e.options.index,
                                      -1,
                                      1,
                                    )),
                                      (e.props.pX = e.props.basePos + n),
                                      (e.props.s = Object(Jr.a)(
                                        Math.abs(e.props.progress),
                                        1,
                                        0.76,
                                      )),
                                      (e.props.alpha = Object(Jr.a)(
                                        Math.abs(e.props.progress),
                                        1,
                                        0.2,
                                      ));
                                  }),
                                  this.navLine &&
                                    (this.navLine.props.dragPos = n);
                              }
                            },
                          },
                          {
                            key: 'updateProps',
                            value: function () {
                              var e = c.a.isMobile ? 0 : 2;
                              (this.props.pX = e),
                                (this.props.pY = 0),
                                (this.props.pZ = 0);
                            },
                          },
                          {
                            key: 'setCurrentIndex',
                            value: function () {
                              if (
                                this.props.mode !== ry.DEFAULT &&
                                (this.updateHotspotContent(), !c.a.isMobile)
                              )
                                for (
                                  var e = this.props.currentIndex + 1, t = 0;
                                  t < this.props.currentIndexes.length;
                                  t += 1
                                )
                                  t === e
                                    ? L.b.to(
                                        this.props.currentIndexes[t],
                                        this.sceneAnimationTime,
                                        { value: 1, ease: 'Sine.easeInOut' },
                                      )
                                    : L.b.to(
                                        this.props.currentIndexes[t],
                                        this.sceneAnimationTime,
                                        { value: 0, ease: 'Sine.easeInOut' },
                                      );
                            },
                          },
                          {
                            key: 'setResolution',
                            value: function (e) {
                              var t = e.width,
                                n = e.height;
                              if (c.a.isMobile)
                                this.navObj.position.y = 0.28 * -n;
                              else {
                                var i = -0.42 * t;
                                this.navItems.forEach(function (e) {
                                  var t =
                                    i +
                                    1.2 * e.props.size * e.options.index +
                                    e.props.size / 2;
                                  e.props.pX = t;
                                }),
                                  (this.navObj.position.y = 0.3 * -n);
                              }
                            },
                          },
                          {
                            key: 'offHotspot',
                            value: function () {
                              this.props.mode = ry.DEFAULT;
                            },
                          },
                          {
                            key: 'goToIndex',
                            value: function (e) {
                              this.dragHandler
                                ? this.dragHandler.goToIndex(e)
                                : (this.props.currentIndex = e);
                            },
                          },
                          {
                            key: 'onHotspotClick',
                            value: function () {
                              (this.props.mode = ry.PRE_HOTSPOT),
                                (iy.state.navigation.hotspotStalk = !0);
                            },
                          },
                          {
                            key: 'onHotspotCloseClick',
                            value: function () {
                              iy.state.navigation.hotspotStalk = !1;
                            },
                          },
                        ]) && Zb(n.prototype, i),
                        r && Zb(n, r),
                        t
                      );
                    })()).prototype,
                    'onItemClick',
                    [X.a],
                    Object.getOwnPropertyDescriptor(Xb.prototype, 'onItemClick'),
                    Xb.prototype,
                  ),
                  ey(
                    Xb.prototype,
                    'offActiveDelayed',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      Xb.prototype,
                      'offActiveDelayed',
                    ),
                    Xb.prototype,
                  ),
                  ey(
                    Xb.prototype,
                    'hotspotDelay',
                    [X.a],
                    Object.getOwnPropertyDescriptor(Xb.prototype, 'hotspotDelay'),
                    Xb.prototype,
                  ),
                  ey(
                    Xb.prototype,
                    'goToIndex',
                    [X.a],
                    Object.getOwnPropertyDescriptor(Xb.prototype, 'goToIndex'),
                    Xb.prototype,
                  ),
                  ey(
                    Xb.prototype,
                    'onHotspotClick',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      Xb.prototype,
                      'onHotspotClick',
                    ),
                    Xb.prototype,
                  ),
                  ey(
                    Xb.prototype,
                    'onHotspotCloseClick',
                    [X.a],
                    Object.getOwnPropertyDescriptor(
                      Xb.prototype,
                      'onHotspotCloseClick',
                    ),
                    Xb.prototype,
                  ),
                  (Hb = Xb)),
                ) || Hb),
            ) || Hb;
        function sy(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function uy(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function ly(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function cy(e) {
          return (cy = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function py(e, t) {
          return (py =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var hy,
          fy,
          dy = Object(u.a)(),
          vy =
            Object(it.a)($r)(
              ((function (e, t, n, i, r) {
                var o = {};
                Object.keys(i).forEach(function (e) {
                  o[e] = i[e];
                }),
                  (o.enumerable = !!o.enumerable),
                  (o.configurable = !!o.configurable),
                  ('value' in o || o.initializer) && (o.writable = !0),
                  (o = n
                    .slice()
                    .reverse()
                    .reduce(function (n, i) {
                      return i(e, t, n) || n;
                    }, o)),
                  r &&
                    void 0 !== o.initializer &&
                    ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                    (o.initializer = void 0)),
                  void 0 === o.initializer &&
                    (Object.defineProperty(e, t, o), (o = null));
              })(
                (ny = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = ly(
                        this,
                        (e = cy(t)).call.apply(e, [this].concat(r)),
                      )).options = {
                        aspect: c.a.isMobile ? 1920 / 1080 : 0.5625,
                        size: 1,
                        offset: 0,
                        postProcessingMaterial: new cn(),
                      }),
                      (n.props = {
                        visible: !1,
                        active: !1,
                        resolution: [
                          dy,
                          function (e) {
                            return s.a.pick(
                              e.viewport,
                              'width',
                              'height',
                              'pixelRatio',
                            );
                          },
                        ],
                        appStart: [
                          dy,
                          function (e) {
                            return e.started;
                          },
                        ],
                        progress: 0,
                      }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && py(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e,
                            t =
                              ((e = regeneratorRuntime.mark(function e() {
                                return regeneratorRuntime.wrap(
                                  function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (e.next = 2),
                                            new bb().setup({
                                              options: { camera: this.camera },
                                            })
                                          );
                                        case 2:
                                          return (
                                            (this.sceneView = e.sent),
                                            (e.next = 5),
                                            new ay().setup({
                                              options: {
                                                layer: 3,
                                                camera: this.camera,
                                              },
                                            })
                                          );
                                        case 5:
                                          (this.ui = e.sent),
                                            (this.tweenObj = { pIn: 0 }),
                                            this.scene.add(this.ui.object),
                                            this.ui.store.compute(
                                              this.onUiProgress,
                                            ),
                                            this.ui.on(
                                              'clickItem',
                                              this.onSwitchScene.bind(this),
                                            );
                                        case 10:
                                        case 'end':
                                          return e.stop();
                                      }
                                  },
                                  e,
                                  this,
                                );
                              })),
                              function () {
                                var t = this,
                                  n = arguments;
                                return new Promise(function (i, r) {
                                  var o = e.apply(t, n);
                                  function a(e) {
                                    sy(o, i, r, a, s, 'next', e);
                                  }
                                  function s(e) {
                                    sy(o, i, r, a, s, 'throw', e);
                                  }
                                  a(void 0);
                                });
                              });
                          return function () {
                            return t.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'onUiProgress',
                        value: function (e) {
                          this.sceneView.setAllSceneProps(e.currentIndexes);
                        },
                      },
                      {
                        key: 'onSwitchScene',
                        value: function () {
                          this.sceneView.onSwitchScene();
                        },
                      },
                      {
                        key: 'onActive',
                        value: function () {
                          (this.scene.visible = !0),
                            (this.ui.props.active = !0),
                            this.sceneView.setAllSceneProps(
                              this.ui.props.currentIndexes,
                            ),
                            dy.state.inPreloader
                              ? ((this.tweenObj.pIn = 0),
                                TweenMax.to(this.tweenObj, 3, {
                                  pIn: 1,
                                  ease: 'easeOutQuint',
                                  delay: 1,
                                }))
                              : (this.tweenObj.pIn = 1);
                        },
                      },
                      {
                        key: 'offActive',
                        value: function () {
                          (this.ui.props.active = !1),
                            this.sceneView.setAllSceneProps(
                              this.ui.props.currentIndexes,
                            ),
                            (dy.state.navigation.hotspotStalk = !1);
                        },
                      },
                      {
                        key: 'whileActive',
                        value: function () {
                          var e = this.tweenObj;
                          this.options.postProcessingMaterial.inProgress = e.pIn;
                        },
                      },
                      {
                        key: 'setResolution',
                        value: function (e) {
                          var t = e.width,
                            n = e.height,
                            i = e.pixelRatio;
                          this.options.postProcessingMaterial.resolution.set(
                            t * i,
                            n * i,
                          );
                        },
                      },
                      {
                        key: 'preCompile',
                        value: function (e) {
                          var t = e.renderer,
                            n = e.ortho;
                          t.compile(this.scene, n), this.sceneView.preCompile();
                        },
                      },
                      {
                        key: 'render',
                        value: function (e) {
                          var t = e.renderer,
                            n = e.ortho,
                            i = e.target;
                          n.layers.set(1),
                            t.render(this.scene, n),
                            this.sceneView.update(
                              i,
                              c.a.isSandbox ? 0.5 : this.props.progress,
                            );
                        },
                      },
                      {
                        key: 'renderUi',
                        value: function (e) {
                          var t = e.renderer,
                            n = e.ortho;
                          n.layers.set(3), t.render(this.scene, n);
                        },
                      },
                    ]) && uy(n.prototype, i),
                    r && uy(n, r),
                    t
                  );
                })()).prototype,
                'onUiProgress',
                [X.a],
                Object.getOwnPropertyDescriptor(ny.prototype, 'onUiProgress'),
                ny.prototype,
              ),
              (ty = ny)),
            ) || ty,
          my = n(429),
          gy = n.n(my);
        n(430);
        function by(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function yy(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                by(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                by(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function wy(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function xy(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Py(e) {
          return (Py = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function _y(e, t) {
          return (_y =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        var ky,
          Oy = Object(u.a)(),
          Sy =
            Qe(
              ((function (e, t, n, i, r) {
                var o = {};
                Object.keys(i).forEach(function (e) {
                  o[e] = i[e];
                }),
                  (o.enumerable = !!o.enumerable),
                  (o.configurable = !!o.configurable),
                  ('value' in o || o.initializer) && (o.writable = !0),
                  (o = n
                    .slice()
                    .reverse()
                    .reduce(function (n, i) {
                      return i(e, t, n) || n;
                    }, o)),
                  r &&
                    void 0 !== o.initializer &&
                    ((o.value = o.initializer ? o.initializer.call(r) : void 0),
                    (o.initializer = void 0)),
                  void 0 === o.initializer &&
                    (Object.defineProperty(e, t, o), (o = null));
              })(
                (fy = (function (e) {
                  function t() {
                    var e, n;
                    !(function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError('Cannot call a class as a function');
                    })(this, t);
                    for (
                      var i = arguments.length, r = new Array(i), o = 0;
                      o < i;
                      o++
                    )
                      r[o] = arguments[o];
                    return (
                      ((n = xy(
                        this,
                        (e = Py(t)).call.apply(e, [this].concat(r)),
                      )).props = {
                        active: !1,
                        menuStates: [
                          Oy,
                          function (e) {
                            return e.menuStates;
                          },
                        ],
                        viewport: [
                          Oy,
                          function (e) {
                            return e.viewport.height;
                          },
                        ],
                      }),
                      n
                    );
                  }
                  var n, i, r;
                  return (
                    (function (e, t) {
                      if ('function' != typeof t && null !== t)
                        throw new TypeError(
                          'Super expression must either be null or a function',
                        );
                      (e.prototype = Object.create(t && t.prototype, {
                        constructor: { value: e, writable: !0, configurable: !0 },
                      })),
                        t && _y(e, t);
                    })(t, le['a']),
                    (n = t),
                    (i = [
                      {
                        key: 'onSetup',
                        value: (function () {
                          var e = yy(
                            regeneratorRuntime.mark(function e() {
                              return regeneratorRuntime.wrap(
                                function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        (this.h = window.innerHeight),
                                          (this.el = document.body.appendChild(
                                            gy()(),
                                          )),
                                          (this.ui = Object(M.a)(this.el)),
                                          this.setViewport();
                                      case 4:
                                      case 'end':
                                        return e.stop();
                                    }
                                },
                                e,
                                this,
                              );
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'onActive',
                        value: function () {
                          console.log('onActive'),
                            (this.el.style.visibility = 'visible'),
                            (this.el.style.pointerEvents = 'auto'),
                            window.scrollTo(0, 0),
                            (this.hasShown = !0),
                            window.removeEventListener(
                              'touchstart',
                              t.onTouchstart,
                              { passive: !1 },
                            ),
                            (Oy.state.iosAdressBarVisible = !0);
                        },
                      },
                      {
                        key: 'offActive',
                        value: function () {
                          console.log('offActive'),
                            (this.el.style.visibility = 'hidden'),
                            (this.el.style.pointerEvents = 'none'),
                            window.addEventListener(
                              'touchstart',
                              t.onTouchstart,
                              { passive: !1 },
                            ),
                            (Oy.state.iosAdressBarVisible = !1),
                            this.emit('hide');
                        },
                      },
                      {
                        key: 'isVisible',
                        value: (function () {
                          var e = yy(
                            regeneratorRuntime.mark(function e() {
                              var t = this;
                              return regeneratorRuntime.wrap(function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      return e.abrupt(
                                        'return',
                                        new Promise(function (e) {
                                          t.props.active
                                            ? t.once('hide', function () {
                                                e();
                                              })
                                            : e();
                                        }),
                                      );
                                    case 1:
                                    case 'end':
                                      return e.stop();
                                  }
                              }, e);
                            }),
                          );
                          return function () {
                            return e.apply(this, arguments);
                          };
                        })(),
                      },
                      {
                        key: 'onMenuStates',
                        value: function () {
                          this.props.active = !1;
                        },
                      },
                      {
                        key: 'offMenuStates',
                        value: function () {
                          this.setViewport();
                        },
                      },
                      {
                        key: 'setViewport',
                        value: function () {
                          var e = window.innerWidth,
                            t = window.innerHeight,
                            n =
                              (document.body.offsetHeight, window.screen.height);
                          if (!(e > t || Oy.state.menuStates)) {
                            var i = n - t;
                            (this.props.active = i > 100),
                              (this.h = t),
                              window.scrollTo(0, 0);
                          }
                        },
                      },
                    ]),
                    (r = [
                      {
                        key: 'onTouchstart',
                        value: function (e) {
                          Oy.state.menuStates || e.preventDefault();
                        },
                      },
                    ]),
                    i && wy(n.prototype, i),
                    r && wy(n, r),
                    t
                  );
                })()),
                'onTouchstart',
                [X.a],
                Object.getOwnPropertyDescriptor(fy, 'onTouchstart'),
                fy,
              ),
              (hy = fy)),
            ) || hy;
        function Ty(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = [],
                i = !0,
                r = !1,
                o = void 0;
              try {
                for (
                  var a, s = e[Symbol.iterator]();
                  !(i = (a = s.next()).done) &&
                  (n.push(a.value), !t || n.length !== t);
                  i = !0
                );
              } catch (e) {
                (r = !0), (o = e);
              } finally {
                try {
                  i || null == s.return || s.return();
                } finally {
                  if (r) throw o;
                }
              }
              return n;
            })(e, t) ||
            (function () {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance',
              );
            })()
          );
        }
        function Ay(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function My(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              'value' in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function jy(e, t) {
          return !t || ('object' != typeof t && 'function' != typeof t)
            ? (function (e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called",
                  );
                return e;
              })(e)
            : t;
        }
        function Fy(e) {
          return (Fy = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function Ry(e, t) {
          return (Ry =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function Cy(e, t, n, i, r) {
          var o = {};
          return (
            Object.keys(i).forEach(function (e) {
              o[e] = i[e];
            }),
            (o.enumerable = !!o.enumerable),
            (o.configurable = !!o.configurable),
            ('value' in o || o.initializer) && (o.writable = !0),
            (o = n
              .slice()
              .reverse()
              .reduce(function (n, i) {
                return i(e, t, n) || n;
              }, o)),
            r &&
              void 0 !== o.initializer &&
              ((o.value = o.initializer ? o.initializer.call(r) : void 0),
              (o.initializer = void 0)),
            void 0 === o.initializer &&
              (Object.defineProperty(e, t, o), (o = null)),
            o
          );
        }
        var Ey = Object(u.a)();
        Object(Ue.a)('THREE', $e);
        var Ly =
          (Cy(
            (ky = (function (e) {
              function t() {
                var e, n;
                !(function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
                })(this, t);
                for (
                  var i = arguments.length, r = new Array(i), o = 0;
                  o < i;
                  o++
                )
                  r[o] = arguments[o];
                return (
                  ((n = jy(
                    this,
                    (e = Fy(t)).call.apply(e, [this].concat(r)),
                  )).options = { onSetupProgress: function () {} }),
                  (n.props = {
                    active: !0,
                    start: [
                      Ey,
                      function (e) {
                        return e.started;
                      },
                    ],
                    hotspot: [
                      Ey,
                      function (e) {
                        return e.hotspot;
                      },
                    ],
                    currentSection: [
                      Ey,
                      function (e) {
                        return e.currentSection;
                      },
                    ],
                    cursor: [
                      Ey,
                      function (e) {
                        return e.cursor;
                      },
                    ],
                    keydown: [
                      Ey,
                      function (e) {
                        return e.keydown;
                      },
                    ],
                  }),
                  n
                );
              }
              var n, i, r;
              return (
                (function (e, t) {
                  if ('function' != typeof t && null !== t)
                    throw new TypeError(
                      'Super expression must either be null or a function',
                    );
                  (e.prototype = Object.create(t && t.prototype, {
                    constructor: { value: e, writable: !0, configurable: !0 },
                  })),
                    t && Ry(e, t);
                })(t, le['a']),
                (n = t),
                (i = [
                  {
                    key: 'onSetup',
                    value: (function () {
                      var e,
                        n =
                          ((e = regeneratorRuntime.mark(function e(n) {
                            var i,
                              r,
                              o,
                              a,
                              s,
                              u = this;
                            return regeneratorRuntime.wrap(
                              function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      if (
                                        ((i = n.el),
                                        (r = document.body),
                                        (this.preloaderProgress = 0),
                                        (this.startTime = Date.now()),
                                        (this.sectionData = Object(
                                          S.a,
                                        )().sections),
                                        !T.a.initStore)
                                      ) {
                                        e.next = 10;
                                        break;
                                      }
                                      return (
                                        (e.next = 8),
                                        new Fe().setup({ store: Ey, parent: i })
                                      );
                                    case 8:
                                      (o = e.sent),
                                        T.a.hideStoreOnStart &&
                                          (o.el.style.display = 'none');
                                    case 10:
                                      return (
                                        T.a.showScrollDevtool &&
                                          new De().setup({ parent: i }),
                                        window.addEventListener(
                                          'resize',
                                          t.onResize,
                                        ),
                                        (this.renderer = Rn()),
                                        (e.next = 15),
                                        new We().setup({ parent: i })
                                      );
                                    case 15:
                                      return (
                                        (this.logo = e.sent),
                                        (e.next = 18),
                                        new ft().setup({
                                          parent: i,
                                          options: { layer: 3 },
                                          props: {
                                            visible: [
                                              Ey,
                                              function (e) {
                                                return (
                                                  e.navigation.contact ||
                                                  e.navigation.signup ||
                                                  e.navigation.legal ||
                                                  e.navigation.menu
                                                );
                                              },
                                            ],
                                          },
                                        })
                                      );
                                    case 18:
                                      return (
                                        (this.closeBtn = e.sent),
                                        this.closeBtn.store.compute(function (e) {
                                          (e.pX =
                                            e.viewport.width *
                                            (c.a.isMobile ? 0.4 : 0.46)),
                                            (e.pY =
                                              0.445 * e.viewport.height +
                                              (c.a.isMobile
                                                ? 0
                                                : -14 * e.viewport.scale));
                                        }),
                                        this.closeBtn.on('click', function () {
                                          (Ey.state.submenuTriggeredFrom = null),
                                            (Ey.state.navigation.menu = !1),
                                            (Ey.state.navigation.contact = !1),
                                            (Ey.state.navigation.signup = !1),
                                            (Ey.state.navigation.legal = !1);
                                        }),
                                        this.renderer.scene.add(
                                          this.closeBtn.object,
                                        ),
                                        (e.next = 24),
                                        new At().setup({ parent: r })
                                      );
                                    case 24:
                                      return (
                                        (this.menuBtn = e.sent),
                                        this.renderer.scene.add(
                                          this.menuBtn.object,
                                        ),
                                        this.addPreloaderProgress(),
                                        (e.next = 29),
                                        new lr().setup({ parent: i })
                                      );
                                    case 29:
                                      return (
                                        (e.next = 31),
                                        new Pr().setup({ parent: i })
                                      );
                                    case 31:
                                      return (
                                        (e.next = 33),
                                        new Cr().setup({ parent: i })
                                      );
                                    case 33:
                                      return (
                                        (e.next = 35),
                                        new Vr().setup({ parent: i })
                                      );
                                    case 35:
                                      return (
                                        (e.next = 37),
                                        new Kr().setup({ parent: r })
                                      );
                                    case 37:
                                      return (
                                        this.addPreloaderProgress(),
                                        (a = {
                                          landing: cs,
                                          science: Up,
                                          stalk: vy,
                                          field: Hh,
                                          result: Hm,
                                        }),
                                        (s = []),
                                        (this.sections = []),
                                        this.sectionData.forEach(function (e, t) {
                                          s.push(
                                            new Promise(function (n) {
                                              var r;
                                              r =
                                                T.a.placeholders ||
                                                !1 === T.a[e.name]
                                                  ? Io
                                                  : a[e.name];
                                              var o = window.performance.now();
                                              new r()
                                                .setup({
                                                  options: {
                                                    name: e.name,
                                                    size: e.size,
                                                    offset: e.offset,
                                                    placeholder: e.placeholder,
                                                    parent: i,
                                                  },
                                                  props: {
                                                    progress: [
                                                      Ey,
                                                      function (e) {
                                                        return e
                                                          .sectionOuterProgresses[
                                                          t
                                                        ];
                                                      },
                                                    ],
                                                    visible: [
                                                      Ey,
                                                      function (e) {
                                                        return e
                                                          .sectionVisibilityList[
                                                          t
                                                        ];
                                                      },
                                                    ],
                                                    slopeTop: [
                                                      Ey,
                                                      function (e) {
                                                        return e.sectionSlopes[
                                                          0 === t
                                                            ? u.sectionData
                                                                .length - 1
                                                            : t - 1
                                                        ].current;
                                                      },
                                                    ],
                                                    slopeBottom: [
                                                      Ey,
                                                      function (e) {
                                                        return e.sectionSlopes[t]
                                                          .current;
                                                      },
                                                    ],
                                                    active: [
                                                      Ey,
                                                      function (t) {
                                                        return (
                                                          t.currentSection ===
                                                          e.name
                                                        );
                                                      },
                                                    ],
                                                  },
                                                })
                                                .then(function (i) {
                                                  u.addPreloaderProgress(),
                                                    i.preCompile &&
                                                      (i.preCompile({
                                                        renderer:
                                                          u.renderer.renderer,
                                                        ortho:
                                                          u.renderer.orthoCamera,
                                                      }),
                                                      i.options
                                                        .postProcessingMaterial &&
                                                        ((i.options.postProcessingMaterial.map =
                                                          u.renderer.targets[0].target.texture),
                                                        (u.renderer.targets[0].quad.material =
                                                          i.options.postProcessingMaterial),
                                                        u.renderer.renderer.compile(
                                                          u.renderer.scene,
                                                          u.renderer.orthoCamera,
                                                        ))),
                                                    u.addPreloaderProgress(),
                                                    (u.sections[t] = i),
                                                    console.log(
                                                      "Section '"
                                                        .concat(e.name, "' took ")
                                                        .concat(
                                                          window.performance.now() -
                                                            o,
                                                          'ms to instantiate',
                                                        ),
                                                    ),
                                                    n();
                                                });
                                            }),
                                          );
                                        }),
                                        (e.next = 44),
                                        Promise.all(s)
                                      );
                                    case 44:
                                      if (!c.a.isMobile && !c.a.isTablet) {
                                        e.next = 49;
                                        break;
                                      }
                                      return (
                                        (e.next = 47), new te().setup({ el: i })
                                      );
                                    case 47:
                                      e.next = 51;
                                      break;
                                    case 49:
                                      return (e.next = 51), new H().setup();
                                    case 51:
                                      if (!c.a.isMobile) {
                                        e.next = 63;
                                        break;
                                      }
                                      return (
                                        (e.next = 54),
                                        new Ai().setup({
                                          options: { layer: 3 },
                                          props: {
                                            active: [
                                              Ey,
                                              function (e) {
                                                return !e.overlays;
                                              },
                                            ],
                                          },
                                        })
                                      );
                                    case 54:
                                      if (
                                        ((this.progressRing = e.sent),
                                        this.renderer.scene.add(
                                          this.progressRing.object,
                                        ),
                                        this.progressRing.on(
                                          'click',
                                          t.goToNextSection,
                                        ),
                                        !c.a.device.iphone() ||
                                          c.a.isChromeIos ||
                                          13 === c.a.iOSVersion)
                                      ) {
                                        e.next = 61;
                                        break;
                                      }
                                      return (e.next = 60), new Sy().setup({});
                                    case 60:
                                      this.hideUI = e.sent;
                                    case 61:
                                      e.next = 67;
                                      break;
                                    case 63:
                                      return (
                                        (e.next = 65),
                                        new Zi().setup({ options: { layer: 2 } })
                                      );
                                    case 65:
                                      (this.sideNav = e.sent),
                                        this.renderer.scene.add(
                                          this.sideNav.object,
                                        );
                                    case 67:
                                      T.a.showStats &&
                                        ((this.stats = new yg.a()),
                                        this.stats.showPanel(0),
                                        document.body.appendChild(
                                          this.stats.dom,
                                        )),
                                        (this.pointerEvents = new yt({
                                          el: window,
                                          passive: !1,
                                        })),
                                        this.pointerEvents.on('move', t.onMove),
                                        this.pointerEvents.on('down', t.onDown),
                                        this.pointerEvents.on('up', t.onUp),
                                        this.pointerEvents.on('click', t.onClick),
                                        c.a.isMobile
                                          ? window.addEventListener(
                                              'deviceorientation',
                                              t.onOrientation,
                                              !0,
                                            )
                                          : window.addEventListener(
                                              'keydown',
                                              t.onKeyDown,
                                            ),
                                        this.renderer.on('render', this.onRender),
                                        this.renderer.on(
                                          'renderUi',
                                          this.onRenderUi,
                                        ),
                                        this.renderer.on(
                                          'renderUiTop',
                                          this.onRenderUiTop,
                                        ),
                                        t.onResize();
                                    case 78:
                                    case 'end':
                                      return e.stop();
                                  }
                              },
                              e,
                              this,
                            );
                          })),
                          function () {
                            var t = this,
                              n = arguments;
                            return new Promise(function (i, r) {
                              var o = e.apply(t, n);
                              function a(e) {
                                Ay(o, i, r, a, s, 'next', e);
                              }
                              function s(e) {
                                Ay(o, i, r, a, s, 'throw', e);
                              }
                              a(void 0);
                            });
                          });
                      return function (e) {
                        return n.apply(this, arguments);
                      };
                    })(),
                  },
                  {
                    key: 'addPreloaderProgress',
                    value: function () {
                      (this.preloaderProgress += 0.1),
                        this.options.onSetupProgress(this.preloaderProgress);
                    },
                  },
                  {
                    key: 'onStart',
                    value: function () {
                      (this.logo.anim.showDelay = 3.7),
                        (this.logo.props.visible = !0);
                    },
                  },
                  {
                    key: 'onHotspot',
                    value: function () {
                      this.sideNav && (this.sideNav.props.active = !1);
                    },
                  },
                  {
                    key: 'offHotspot',
                    value: function () {
                      this.props.start &&
                        this.sideNav &&
                        ((this.sideNav.anim.showDelay = 0.5),
                        (this.sideNav.props.active = !0));
                    },
                  },
                  {
                    key: 'setCurrentSection',
                    value: function (e) {
                      this.sideNav &&
                        ('landing' === e
                          ? (this.sideNav.props.active = !1)
                          : ((this.sideNav.anim.showDelay = 0.5),
                            (this.sideNav.props.active = !0)));
                    },
                  },
                  {
                    key: 'setCursor',
                    value: function (e) {
                      switch (e) {
                        case 'pointer':
                          document.body.setAttribute('cursor', 'pointer');
                          break;
                        case 'grab':
                          document.body.setAttribute('cursor', 'grab');
                          break;
                        default:
                          document.body.removeAttribute('cursor');
                      }
                    },
                  },
                  {
                    key: 'setKeydown',
                    value: function (e) {
                      switch (e.key) {
                        case 'Escape':
                          Ey.state.overlays &&
                            ((Ey.state.submenuTriggeredFrom = null),
                            (Ey.state.navigation.menu = !1),
                            (Ey.state.navigation.contact = !1),
                            (Ey.state.navigation.signup = !1),
                            (Ey.state.navigation.legal = !1),
                            (Ey.state.navigation.hotspotDna = !1),
                            (Ey.state.navigation.hotspotStalk = !1),
                            (Ey.state.navigation.hotspotKernel = !1));
                      }
                    },
                  },
                  {
                    key: 'whileActive',
                    value: function () {
                      this.stats && (this.stats.begin(), this.stats.end());
                      var e = 0.001 * (Date.now() - this.startTime);
                      (Ey.state.lastFrameDuration = 1e3 * (e - Ey.state.time)),
                        (Ey.state.time = e);
                      Ey.state.avgFrameDuration =
                        Ey.state.lastFrameDuration * (1 - 1 / 1.001) +
                        Ey.state.avgFrameDuration * (1 - (1 - 1 / 1.001));
                      var t =
                          Object(A.a)(
                            Math.abs(
                              Ey.state.scroll.position -
                                Ey.state.scroll.positionPrev,
                            ),
                            0,
                            50,
                          ) / 50,
                        n = Ey.state.maxSlope;
                      this.sectionData.forEach(function (e, i) {
                        var r = Ey.state.sectionSlopes[i].current,
                          o = (1 / 3) * n + 1 * t * (2 / 3) * n;
                        (r += 0.07 * (o - r)),
                          Math.abs(o - r) < 0.001 && (r = o),
                          (Ey.state.sectionSlopes[i].current = r);
                      });
                    },
                  },
                  {
                    key: 'onRender',
                    value: function (e) {
                      var t = this,
                        n = e.renderer,
                        i = e.ortho,
                        r = e.targets,
                        o = Ey.state.viewport,
                        a = o.width,
                        s = o.height,
                        u = o.pixelRatio;
                      this.sections &&
                        Ey.state.visibleSections.forEach(function (e, o) {
                          var l = t.sections[e];
                          if (l.render) {
                            var c = Ty(Ey.state.scissors[o], 2),
                              p = c[0],
                              h = c[1],
                              f = Ty(Ey.state.edges[o], 2),
                              d = f[0],
                              v = f[1],
                              m = r[o],
                              g = m.target,
                              b = m.quad;
                            (g.scissorTest = !0),
                              g.scissor.set(0, p * u, a * u, h * u),
                              b.layers.set(1),
                              (b.material = l.options.postProcessingMaterial),
                              (b.material.map = g.texture),
                              (b.material.edgeTop = d / s),
                              (b.material.edgeBottom = (d + v) / s),
                              (b.material.slopeTop = l.props.slopeTop),
                              (b.material.slopeBottom = l.props.slopeBottom),
                              n.setRenderTarget(g),
                              l.render({ renderer: n, ortho: i, target: g }),
                              (g.scissorTest = !1);
                          }
                        });
                    },
                  },
                  {
                    key: 'onRenderUi',
                    value: function (e) {
                      var t = this,
                        n = e.renderer,
                        i = e.ortho,
                        r = e.targets,
                        o = Ey.state.viewport,
                        a = o.width,
                        s = o.height,
                        u = (o.pixelRatio, o.uiPixelRatio);
                      this.sections &&
                        Ey.state.visibleSections.forEach(function (e, o) {
                          var l = t.sections[e];
                          if (l.renderUi) {
                            var c = Ty(Ey.state.scissors[o], 2),
                              p = c[0],
                              h = c[1],
                              f = Ty(Ey.state.edges[o], 2),
                              d = f[0],
                              v = f[1],
                              m = r[o],
                              g = m.target,
                              b = m.quad;
                            (g.scissorTest = !0),
                              g.scissor.set(0, p * u, a * u, h * u),
                              b.layers.set(2),
                              (b.material.edgeTop = d / s),
                              (b.material.edgeBottom = (d + v) / s),
                              (b.material.slopeTop = l.props.slopeTop),
                              (b.material.slopeBottom = l.props.slopeBottom),
                              n.setRenderTarget(g),
                              l.renderUi({ renderer: n, ortho: i, target: g }),
                              (g.scissorTest = !1);
                          }
                        });
                    },
                  },
                  {
                    key: 'onRenderUiTop',
                    value: function (e) {
                      var t = e.renderer,
                        n = e.ortho;
                      t.setRenderTarget(null),
                        n.layers.set(3),
                        t.render(this.renderer.scene, n);
                    },
                  },
                ]),
                (r = [
                  {
                    key: 'goToNextSection',
                    value: function () {
                      console.log('AppView.goToNextSection');
                    },
                  },
                  {
                    key: 'onResize',
                    value: function () {
                      var e = c.a.isChromeIos ? 200 : 100;
                      setTimeout(function () {
                        (Ey.state.viewport.width = window.innerWidth),
                          (Ey.state.viewport.height = window.innerHeight);
                        var e = c.a.isMobile ? 1080 : 1920,
                          t = c.a.isMobile ? 0 : 0.6,
                          n = c.a.isMobile ? 2 : 1;
                        (Ey.state.viewport.scale = Object(A.a)(
                          Ey.state.viewport.width / e,
                          t,
                          n,
                        )),
                          c.a.isMobile &&
                            Ey.state.viewport.width > Ey.state.viewport.height &&
                            (window.scrollY = 0);
                      }, e);
                    },
                  },
                  {
                    key: 'onMove',
                    value: function (e, t, n) {
                      (Ey.state.pointer.position = [e, t]),
                        (Ey.state.pointer.positionNorm = [
                          e / window.innerWidth,
                          t / window.innerHeight,
                        ]),
                        c.a.isMobile &&
                          Ey.state.viewport.width > Ey.state.viewport.height &&
                          n.preventDefault();
                    },
                  },
                  {
                    key: 'onDown',
                    value: function (e, t) {
                      (Ey.state.pointer.position = [e, t]),
                        (Ey.state.pointer.positionNorm = [
                          e / window.innerWidth,
                          t / window.innerHeight,
                        ]),
                        (Ey.state.pointer.active = !0);
                    },
                  },
                  {
                    key: 'onUp',
                    value: function () {
                      Ey.state.pointer.active = !1;
                    },
                  },
                  {
                    key: 'onClick',
                    value: function () {
                      (Ey.state.pointer.click = Math.random()), he.emit('click');
                    },
                  },
                  {
                    key: 'onKeyDown',
                    value: function (e) {
                      Ey.state.keydown = { key: e.key };
                    },
                  },
                  {
                    key: 'onOrientation',
                    value: function (e) {
                      (Ey.state.gyro.gamma = e.gamma),
                        (Ey.state.gyro.beta = e.beta);
                    },
                  },
                  {
                    key: 'setScene',
                    value: function (e) {
                      (this.dnaScene.props.v = 'dna' === e),
                        (this.dataScene.props.v = 'data' === e);
                    },
                  },
                ]),
                i && My(n.prototype, i),
                r && My(n, r),
                t
              );
            })()).prototype,
            'onRender',
            [X.a],
            Object.getOwnPropertyDescriptor(ky.prototype, 'onRender'),
            ky.prototype,
          ),
          Cy(
            ky.prototype,
            'onRenderUi',
            [X.a],
            Object.getOwnPropertyDescriptor(ky.prototype, 'onRenderUi'),
            ky.prototype,
          ),
          Cy(
            ky.prototype,
            'onRenderUiTop',
            [X.a],
            Object.getOwnPropertyDescriptor(ky.prototype, 'onRenderUiTop'),
            ky.prototype,
          ),
          ky);
        function Iy(e, t, n, i, r, o, a) {
          try {
            var s = e[o](a),
              u = s.value;
          } catch (e) {
            return void n(e);
          }
          s.done ? t(u) : Promise.resolve(u).then(i, r);
        }
        function Dy(e) {
          return function () {
            var t = this,
              n = arguments;
            return new Promise(function (i, r) {
              var o = e.apply(t, n);
              function a(e) {
                Iy(o, i, r, a, s, 'next', e);
              }
              function s(e) {
                Iy(o, i, r, a, s, 'throw', e);
              }
              a(void 0);
            });
          };
        }
        function Uy(e) {
          return zy.apply(this, arguments);
        }
        function zy() {
          return (zy = Dy(
            regeneratorRuntime.mark(function e(t) {
              var n,
                r,
                a,
                s,
                u,
                l,
                p,
                h,
                f,
                d,
                v,
                m,
                g = this;
              return regeneratorRuntime.wrap(
                function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        return (
                          (n = t.onPreloaderProgress),
                          (r = Object(M.a)(document.body)),
                          (e.next = 4),
                          new Cn().setup({ parent: r.root })
                        );
                      case 4:
                        (a = e.sent),
                          (s = window.performance.now()),
                          (u = !0),
                          (l = !1),
                          (p = void 0),
                          (e.prev = 9),
                          (h = se.a.textures.values()[Symbol.iterator]());
                      case 11:
                        if ((u = (f = h.next()).done)) {
                          e.next = 25;
                          break;
                        }
                        return (
                          (d = f.value),
                          (e.next = 15),
                          Gn(
                            d.id,
                            void 0 === d.forceGPU || d.forceGPU,
                            void 0 === d.flipY || d.flipY,
                          )
                        );
                      case 15:
                        if (
                          ((d.texture = e.sent),
                          !(window.performance.now() - s < 10))
                        ) {
                          e.next = 19;
                          break;
                        }
                        return e.abrupt('continue', 22);
                      case 19:
                        return (e.next = 21), Object(ue.b)();
                      case 21:
                        s = window.performance.now();
                      case 22:
                        (u = !0), (e.next = 11);
                        break;
                      case 25:
                        e.next = 31;
                        break;
                      case 27:
                        (e.prev = 27), (e.t0 = e.catch(9)), (l = !0), (p = e.t0);
                      case 31:
                        (e.prev = 31),
                          (e.prev = 32),
                          u || null == h.return || h.return();
                      case 34:
                        if (((e.prev = 34), !l)) {
                          e.next = 37;
                          break;
                        }
                        throw p;
                      case 37:
                        return e.finish(34);
                      case 38:
                        return e.finish(31);
                      case 39:
                        return (
                          (this.texturesProgress = 0),
                          (v = setInterval(function () {
                            (g.texturesProgress += 0.005),
                              n(
                                Object(o.a)(g.texturesProgress, 0, 1, 0, 0.6, !0),
                              );
                          }, 400)),
                          (e.next = 43),
                          Promise.all(
                            Object.values(
                              Object(Dn.a)(c.a.isMobile).compressed,
                            ).map(
                              (function () {
                                var e = Dy(
                                  regeneratorRuntime.mark(function e(t) {
                                    return regeneratorRuntime.wrap(function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            return (e.next = 2), Gn(t.id);
                                          case 2:
                                            (g.texturesProgress += 0.02),
                                              n(
                                                Object(o.a)(
                                                  g.texturesProgress,
                                                  0,
                                                  1,
                                                  0,
                                                  0.6,
                                                  !0,
                                                ),
                                              );
                                          case 4:
                                          case 'end':
                                            return e.stop();
                                        }
                                    }, e);
                                  }),
                                );
                                return function (t) {
                                  return e.apply(this, arguments);
                                };
                              })(),
                            ),
                          )
                        );
                      case 43:
                        return (
                          clearInterval(v),
                          (e.next = 46),
                          new Ly().setup({
                            el: r.root,
                            options: {
                              onSetupProgress: function (e) {
                                n(Object(o.a)(e, 0, 1, 0.6, 1, !0));
                              },
                            },
                          })
                        );
                      case 46:
                        (m = e.sent),
                          new ae().setup(),
                          Object(Ue.a)('renderer', a),
                          Object(Ue.a)('view', m),
                          Object(Ue.a)('actions', i),
                          Object(Ue.a)('ticker', ue.a);
                      case 52:
                      case 'end':
                        return e.stop();
                    }
                },
                e,
                this,
                [
                  [9, 27, 31, 39],
                  [32, , 34, 38],
                ],
              );
            }),
          )).apply(this, arguments);
        }
        function Ny() {
          Object(u.a)().state.started = !0;
        }
        n.d(t, 'init', function () {
          return Uy;
        }),
          n.d(t, 'start', function () {
            return Ny;
          });
      },
    },
  ]);
  //# sourceMappingURL=main.fe047cd8826d34440dde.js.map
  