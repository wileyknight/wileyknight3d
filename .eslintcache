[{"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\App.tsx":"1","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\reportWebVitals.ts":"2","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\index.tsx":"3","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\Store.tsx":"4","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\Masks.tsx":"5","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\SceneCircuit.tsx":"6","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\Compositor.tsx":"7","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\Scene20Years.tsx":"8","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\SceneHyperloop.tsx":"9","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\SceneQuantum.tsx":"10","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\ScrollHandler.tsx":"11"},{"size":513,"mtime":1621094349802,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1607458338034,"results":"14","hashOfConfig":"13"},{"size":501,"mtime":1607966735087,"results":"15","hashOfConfig":"13"},{"size":498,"mtime":1621094323554,"results":"16","hashOfConfig":"13"},{"size":3398,"mtime":1621545545432,"results":"17","hashOfConfig":"13"},{"size":7799,"mtime":1621630976511,"results":"18","hashOfConfig":"13"},{"size":9330,"mtime":1622504691934,"results":"19","hashOfConfig":"13"},{"size":1028,"mtime":1619891322995,"results":"20","hashOfConfig":"13"},{"size":4671,"mtime":1622505053710,"results":"21","hashOfConfig":"13"},{"size":4535,"mtime":1620766171096,"results":"22","hashOfConfig":"13"},{"size":4590,"mtime":1621464046101,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"xvk3br",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\App.tsx",[],["48","49"],"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\reportWebVitals.ts",[],"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\index.tsx",[],"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\Store.tsx",[],"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\Masks.tsx",[],"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\SceneCircuit.tsx",[],"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\Compositor.tsx",[],"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\Scene20Years.tsx",[],"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\SceneHyperloop.tsx",["50"],"import React, { Suspense, useRef } from 'react';\nimport * as THREE from 'three';\nimport { useLoader, useFrame } from '@react-three/fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nfunction SceneHyperloop() {\n  return (\n    <>\n      <ambientLight />\n      <Suspense fallback={<Loading />}>\n        <FullScene />\n      </Suspense>\n    </>\n  );\n}\n\nconst FullScene = (props) => {\n  const fbx = useLoader<GLTFLoader, string>(\n    GLTFLoader,\n    './hyperloop_train_export.gltf',\n  );\n  console.log(fbx);\n  const tubes = new Array(36);\n  tubes.fill(0);\n  const pedestals = new Array(12);\n  pedestals.fill(0);\n\n  let setRotation = 0;\n  let pedestalRotation = 0;\n  const rotationLimit = 0.17455;\n\n  const trainRef = useRef();\n\n  useFrame(() => {\n    if (trainRef.current !== (undefined || null)) {\n      trainRef.current.rotation.y += 0.01;\n    }\n  }, 1);\n\n  return (\n    <group\n      {...props}\n      dispose={null}\n      position={[-600, -60, -800]}\n      rotation={[0, -1, 0]}\n      scale={[12, 12, 12]}\n    >\n      <group rotation-y={3.24}>\n        <mesh\n          geometry={fbx.nodes.trainPIV.geometry}\n          material={fbx.materials.trainColor}\n        />\n        <mesh\n          geometry={fbx.nodes.carPIV.geometry}\n          material={fbx.materials.trainColor}\n        />\n        <mesh\n          rotation-y={0.104}\n          geometry={fbx.nodes.carPIV.geometry}\n          material={fbx.materials.trainColor}\n        />\n        <mesh\n          rotation-y={0.208}\n          geometry={fbx.nodes.carPIV.geometry}\n          material={fbx.materials.trainColor}\n        />\n        <mesh\n          rotation-y={0.312}\n          geometry={fbx.nodes.carPIV.geometry}\n          material={fbx.materials.trainColor}\n        />\n        <mesh\n          rotation-y={0.416}\n          geometry={fbx.nodes.carPIV.geometry}\n          material={fbx.materials.trainColor}\n        />\n      </group>\n      <group ref={trainRef}>\n        {tubes.map((value, index) => {\n          setRotation += rotationLimit;\n          return (\n            <>\n              <mesh\n                geometry={fbx.nodes.tubePIV.geometry}\n                rotation-y={setRotation}\n                key={`t${index}`}\n              >\n                <meshStandardMaterial\n                  attach=\"material\"\n                  color={0xccccff}\n                  roughness={0.8}\n                  metalness={0.2}\n                />\n              </mesh>\n              <mesh\n                geometry={fbx.nodes.railPIV.geometry}\n                rotation-y={setRotation}\n                key={`r${index}`}\n              >\n                <meshStandardMaterial\n                  attach=\"material\"\n                  color={0x363531}\n                  roughness={0.3}\n                  metalness={0.9}\n                />\n              </mesh>\n              <mesh\n                geometry={fbx.nodes.glassPIV.geometry}\n                material={fbx.materials.glassColor}\n                rotation-y={setRotation}\n                key={`g${index}`}\n              />\n            </>\n          );\n        })}\n        {pedestals.map((value, index) => {\n          pedestalRotation += rotationLimit * 4;\n          return (\n            <>\n              <mesh\n                geometry={fbx.nodes.lockRingsPIV.geometry}\n                rotation-y={pedestalRotation}\n                key={`g${index}`}\n              >\n                <meshStandardMaterial\n                  attach=\"material\"\n                  color={0xdecb88}\n                  roughness={0.1}\n                  metalness={1}\n                />\n              </mesh>\n              <mesh\n                geometry={fbx.nodes.pedestalPIV.geometry}\n                rotation-y={pedestalRotation}\n                key={`g${index}`}\n              >\n                <meshStandardMaterial\n                  attach=\"material\"\n                  color={0xccccff}\n                  roughness={0.8}\n                  metalness={0.2}\n                />\n              </mesh>\n              <mesh\n                geometry={fbx.nodes.couplingPIV.geometry}\n                rotation-y={pedestalRotation}\n                key={`g${index}`}\n              >\n                <meshStandardMaterial\n                  attach=\"material\"\n                  color={0xccccff}\n                  roughness={0.8}\n                  metalness={0.2}\n                />\n              </mesh>\n            </>\n          );\n        })}\n      </group>\n    </group>\n  );\n};\n\nfunction Box(props) {\n  return (\n    <mesh>\n      <boxBufferGeometry args={[60, 60, 60]} />\n      <meshNormalMaterial />\n    </mesh>\n  );\n}\n\nconst Loading = () => {\n  return <Box />;\n};\n\nexport default SceneHyperloop;\n","C:\\inetpub\\wwwroot\\wileyknight3d\\src\\SceneQuantum.tsx",[],"C:\\inetpub\\wwwroot\\wileyknight3d\\src\\ScrollHandler.tsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":13,"nodeType":"57","messageId":"58","endLine":2,"endColumn":18},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'THREE' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]